!@#$%^&*()_+*/+-
{}\|{}[]
/?"::';~~`
ЧВК NAAIN ТРЭШ +, ’’’’’ <><><><><<><<><>><><><><><<><<><>><><><><><<><<><>><><><><><<><<><>><><><><><<><<><>><><><><><<><<><>><><><><><<><<><>>
типичный МБОУ СОЖ
.
...
....
.....
......
.......
........
……………………
…
…
ㅤ ㅤ, 

Python (МФА: [ˈpʌɪθ(ə)n]; в русском языке встречаются названия пито́н[12] или па́йтон[13]) — мультипарадигмальный высокоуровневый язык программирования общего назначения с динамической строгой типизацией и автоматическим управлением памятью[14][15], ориентированный на повышение производительности разработчика, читаемости кода и его качества, а также на обеспечение переносимости написанных на нём программ[16]. Язык является полностью объектно-ориентированным в том плане, что всё является объектами[14]. Необычной особенностью языка является выделение блоков кода отступами[17]. Синтаксис ядра языка минималистичен, за счёт чего на практике редко возникает необходимость обращаться к документации[16]. Сам же язык известен как интерпретируемый и используется в том числе для написания скриптов[14]. Недостатками языка являются зачастую более низкая скорость работы и более высокое потребление памяти написанных на нём программ по сравнению с аналогичным кодом, написанным на компилируемых языках, таких как C или C++[14][16].

Python является мультипарадигменным языком программирования, поддерживающим императивное, процедурное, структурное, объектно-ориентированное программирование[14], метапрограммирование[18], функциональное программирование[14] и асинхронное программирование[19]. Задачи обобщённого программирования решаются за счёт динамической типизации[20][21]. Аспектно-ориентированное программирование частично поддерживается через декораторы[22], более полноценная поддержка обеспечивается дополнительными фреймворками[23]. Такие методики как контрактное и логическое программирование можно реализовать с помощью библиотек или расширений[24]. Основные архитектурные черты — динамическая типизация, автоматическое управление памятью[14], полная интроспекция, механизм обработки исключений, поддержка многопоточных вычислений с глобальной блокировкой интерпретатора (GIL)[25], высокоуровневые структуры данных. Поддерживается разбиение программ на модули, которые, в свою очередь, могут объединяться в пакеты[26].

Эталонной реализацией Python является интерпретатор CPython, который поддерживает большинство активно используемых платформ[27], являющийся стандартом де-факто языка[28]. Он распространяется под свободной лицензией Python Software Foundation License, позволяющей использовать его без ограничений в любых приложениях, включая проприетарные[29]. CPython компилирует исходные тексты в высокоуровневый байт-код, который исполняется в стековой виртуальной машине[30]. К другим трём основным реализациям языка относятся Jython (для JVM), IronPython (для CLR/.NET) и PyPy[14][31]. PyPy написан на подмножестве языка Python (RPython) и разрабатывался как альтернатива CPython с целью повышения скорости исполнения программ, в том числе за счёт использования JIT-компиляции[31]. Поддержка версии Python 2 закончилась в 2020 году[32]. На текущий момент активно развивается версия языка Python 3[33]. Разработка языка ведётся через предложения по расширению языка PEP (англ. Python Enhancement Proposal), в которых описываются нововведения, делаются корректировки согласно обратной связи от сообщества и документируются итоговые решения[34].

Стандартная библиотека включает большой набор полезных переносимых функций, начиная с возможностей для работы с текстом и заканчивая средствами для написания сетевых приложений. Дополнительные возможности, такие как математическое моделирование, работа с оборудованием, написание веб-приложений или разработка игр, могут реализовываться посредством обширного количества сторонних библиотек, а также интеграцией библиотек, написанных на Си или C++, при этом и сам интерпретатор Python может интегрироваться в проекты, написанные на этих языках[14]. Существует и специализированный репозиторий программного обеспечения, написанного на Python, — PyPI[35]. Данный репозиторий предоставляет средства для простой установки пакетов в операционную систему и стал стандартом де-факто для Python[36]. По состоянию на 2019 год в нём содержалось более 175 тысяч пакетов[35].

Python стал одним из самых популярных языков, он используется в анализе данных, машинном обучении, DevOps и веб-разработке, а также в других сферах, включая разработку игр. За счёт читабельности, простого синтаксиса и отсутствия необходимости в компиляции язык хорошо подходит для обучения программированию, позволяя концентрироваться на изучении алгоритмов, концептов и парадигм. Отладка же и экспериментирование в значительной степени облегчаются тем фактом, что язык является интерпретируемым[14][37]. Применяется язык многими крупными компаниями, такими как Google или Facebook[14].


Содержание
1	История
2	Концепция и философия
3	Портируемость
4	Типы и структуры данных
5	Синтаксис и семантика
5.1	Операторы
5.2	Система отступов
5.3	Выражения
5.4	Имена
5.5	Строки документации
6	Парадигмы программирования
6.1	Объектно-ориентированное программирование
6.2	Обобщённое программирование
6.3	Функциональное программирование
6.4	Метапрограммирование
6.5	Асинхронное программирование
7	Возможности
7.1	Модули и пакеты
7.2	Интроспекция
7.3	Обработка исключений
7.4	Итераторы
7.5	Генераторы
7.6	Управление контекстом выполнения
7.7	Декораторы
7.8	Регулярные выражения
8	Стандартная библиотека
9	Сторонние библиотеки
10	Примеры программ
11	Профилирование и оптимизация кода
12	Сравнение с другими языками
12.1	C++ и Java
12.2	Go
12.3	Perl
12.4	MATLAB и R
12.5	Языки, на которые повлиял Python
13	Критика
13.1	Низкое быстродействие
13.2	Глобальная блокировка интерпретатора (GIL)
13.3	Синтаксис и семантика
13.4	Невозможность модификации встроенных классов
14	Реализации
14.1	CPython
14.2	PyPy
14.3	Jython
14.4	Другие реализации
15	Специализированные подмножества/расширения Python
16	Инструменты поддержки программирования
16.1	Интерактивный режим
16.2	IDE
17	Применение
18	Примечания
18.1	Комментарии
18.2	Источники
19	Литература
20	Ссылки
История
Основная статья: История языка программирования Python

Логотип, использовавшийся с 1990-х до 2006 года

Гвидо ван Россум в 2006 году на OSCON в Портленде (штат Орегон)
Задумка по реализации языка появилась в конце 1980-х годов, а разработка его реализации началась в 1989 году сотрудником голландского института CWI Гвидо ван Россумом[34]. Для распределённой операционной системы Amoeba требовался расширяемый скриптовый язык, и Гвидо начал разрабатывать Python на досуге, позаимствовав некоторые наработки для языка ABC (Гвидо участвовал в разработке этого языка, ориентированного на обучение программированию). В феврале 1991 года Гвидо опубликовал исходный текст в группе новостей alt.sources[38]. С самого начала Python проектировался как объектно-ориентированный язык.

Гвидо ван Россум назвал язык в честь популярного британского комедийного телешоу 1970-х «Летающий цирк Монти Пайтона»[39], поскольку автор был поклонником этого телешоу, как и многие другие разработчики того времени, а в самом шоу прослеживалась некая параллель с миром компьютерной техники[16].

Наличие дружелюбного, отзывчивого сообщества пользователей считается, наряду с дизайнерской интуицией Гвидо, одним из факторов успеха Python. Развитие языка происходит согласно чётко регламентированному процессу создания, обсуждения, отбора и реализации документов PEP (англ. Python Enhancement Proposal) — предложений по развитию Python[40].

3 декабря 2008 года[41], после длительного тестирования, вышла первая версия Python 3000 (или Python 3.0, также используется сокращение Py3k). В Python 3 устранены многие недостатки архитектуры с максимально возможным (но не полным) сохранением совместимости со старыми версиями Python.

Дата окончания срока поддержки Python 2.7 первоначально была установлена на 2015 год, а затем перенесена на 2020 год из опасения, что большая часть существующего кода не может быть легко перенесена на Python 3[42][43]. Поддержка Python 2 была направлена лишь на уже существующие проекты, новые проекты должны были использовать Python 3[33]. Официально Python 2.7 не поддерживается с 1 января 2020 года, хотя последнее обновление вышло в апреле 2020. Больше никаких исправлений безопасности или других улучшений для Python 2.7 не будет выпущено[32][44]. С окончанием срока службы Python 2.x поддерживаются только Python 3.6.x и более поздние версии[45].

Концепция и философия
Основная статья: Дзен Пайтона

Пиктограмма для файлов .py
Язык использует динамическую типизацию вместе с подсчётом ссылок и циклический сборщик мусора для менеджмента памяти[46]. Также есть динамические разрешения имён (динамическое связывание), которые связывают имена методов и переменных во время выполнения программы.

Python предлагает поддержку функционального программирования в традициях Лиспа. Так, в Python есть функции filter, map и reduce (Начиная с python 3, находится в библиотеке itertools [47]; также из Лиспа были заимствованы понятия характеристик списков, ассоциативных массивов (словарей), множеств и генераторов списков[48]. Стандартная библиотека содержит два модуля (itertools и functools), реализующих инструменты, заимствованные из Haskell и Standard ML[49].

Разработчики языка Python придерживаются определённой философии программирования, называемой «The Zen of Python» («Дзен Пито́на», или «Дзен Па́йтона»)[50]. Её текст выдаётся интерпретатором Python по команде import this (работает один раз за сессию). Автором этой философии считается Тим Петерс (Tim Peters).

Философия начинается так[51]:

Красивое лучше, чем уродливое.
Явное лучше, чем неявное.
Простое лучше, чем сложное.
Сложное лучше, чем запутанное.
….

Оригинальный текст (англ.)
Вместо того, чтобы встроить в ядро Python всю функциональность языка, он был спроектирован таким образом, чтобы быть легко расширяемым. Это сделало язык популярным средством добавления программируемых интерфейсов к существующим приложениям. Видение Гвидо ван Россума маленького ядра с большой стандартной библиотекой и легко расширяемым интерпретатором проистекало из негативного опыта разработки языка ABC, который придерживался противоположного подхода[52].

Python стремится к более простому, менее громоздкому синтаксису и грамматике, предоставляя разработчикам выбор в их методологии кодирования. В отличие от девиза Perl «есть несколько способов сделать это», Python придерживается философии «должен существовать один — и, желательно, только один — очевидный способ сделать это»[53]. Алекс Мартелли[англ.], член Python Software Foundation и автор книг по Python пишет, что «Описывать что-то как „умное“ не считается комплиментом в культуре Python»[54].

Разработчики Python стремятся избежать преждевременной оптимизации и отвергают патчи к некритическим частям эталонной реализации CPython, которые могли бы предложить незначительное увеличение скорости за счёт понятности кода[55]. Однако есть способы повышения производительности. Если в программе есть узкие места, связанные с выполнением ресурсоёмких операций на центральном процессоре, но не связанные с использованием операций ввода-вывода, то повысить производительность возможно за счёт трансляции программы при помощи Cython в язык Си и последующей компиляции[56]. Требовательные к вычислительным ресурсам части программы также можно переписывать на языке Си и подключать как отдельные библиотеки с привязками к Python[31].

Важная цель разработчиков Python — делать его забавным для использования. Это было отражено в названии языка, данном в честь Монти Пайтона[39]. Также это отражено в иногда игривом подходе к обучающим программам и справочным материалам, таким как примеры программ из документаций, которые используют названия spam и eggs вместо использующихся в документации множества других языков foo и bar[57][58].

Портируемость
Python портирован и работает почти на всех известных платформах — от КПК до мейнфреймов. Существуют порты под Microsoft Windows, практически под все варианты UNIX (включая FreeBSD и Linux), Android[59], Plan 9, Mac OS и macOS, iPhone OS (iOS) 2.0 и выше, iPadOS, Palm OS, OS/2, Amiga, HaikuOS, AS/400, OS/390, Windows Mobile и Symbian.

По мере устаревания платформы её поддержка в основной ветви языка прекращается. Например, с версии 2.6 прекращена поддержка Windows 95, Windows 98 и Windows ME[60]. В версии 3.5 перестала поддерживаться Windows XP[61] В версии 3.9 перестала поддерживаться Windows Vista и Windows 7[62].

При этом, в отличие от многих портируемых систем, для всех основных платформ Python имеет поддержку характерных для данной платформы технологий (например, Microsoft COM/DCOM). Более того, существует специальная версия Python для виртуальной машины Java — Jython, что позволяет интерпретатору выполняться на любой системе, поддерживающей Java, при этом классы Java могут непосредственно использоваться из Python и даже быть написанными на Python. Также несколько проектов обеспечивают интеграцию с платформой Microsoft.NET, основные из которых — IronPython и Python.NET.

Типы и структуры данных

Python поддерживает динамическую типизацию, то есть тип переменной определяется только во время исполнения. Поэтому вместо «присваивания значения переменной» лучше говорить о «связывании значения с некоторым именем». Также Python поддерживает подсказки типов с помощью аннотаций, добавляющие поддержку последовательной типизации и позволяющие использовать статический анализ кода[63]. Подсказки типов не используются во время компиляции и исполнения кода непосредственно CPython[64], но могут использоваться некоторыми библиотеками, например, FastAPI. К примитивным типам в Python относятся булевый, целое число произвольной длины, число с плавающей запятой и комплексное число. Из контейнерных типов в Python встроены: строка, список, кортеж, словарь и множество[37]. Все значения являются объектами, в том числе функции, методы, модули, классы.

Добавить новый тип можно либо написав класс (class), либо определив новый тип в модуле расширения (например, написанном на языке C). Система классов поддерживает наследование (одиночное и множественное) и метапрограммирование. Возможно наследование от большинства встроенных типов и типов расширений.

Типы, используемые в Python
Тип	Изменяемость	Описание	Примеры
bool	Неизменяемый	Логический тип	True
False
bytearray	Изменяемый	Массив байтов	bytearray(b'Some ASCII')
bytearray(b"Some ASCII")
bytearray([119, 105, 107, 105])
bytes	Неизменяемый	Массив байтов	b'Some ASCII'
b"Some ASCII"
bytes([119, 105, 107, 105])
complex	Неизменяемый	Комплексное число	3+2.7j
dict	Изменяемый	Словарь (ассоциативный массив), представляет собой коллекцию пар «ключ—значение»; значение может быть любого типа, ключ должен иметь хешируемый тип	{'key1': 1.0, 3: False}
{}
types.EllipsisType	Неизменяемый	Многоточие[англ.] (эллипсис). Используется в основном в NumPy для сокращённого задания среза многомерного массива. В самом Python присутствует для поддержки пользовательских типов и таких расширений, как NumPy[65]	...
Ellipsis
Для NumPy:
x[i, ..., j],
что эквивалентно
x[i, :, :, j][65]
float	Неизменяемый	Число с плавающей запятой. Степень точности зависит от платформы, но на практике обычно реализуется в виде 64-битного 53-разрядного числа[66]	
1.414

frozenset	Неизменяемый	Неупорядочное множество, не содержит дубликатов; может содержать внутри себя различные хешируемые типы данных	frozenset([4.0, 'string', True])
int	Неизменяемый	Целое число неограниченного размера[67]	42
list	Изменяемый	Список, может содержать внутри себя различные типы данных	[4.0, 'string', True]
[]
NoneType[К 1]	Неизменяемый	Объект, представляющий собой отсутствие значения, часто называемый Null[англ.] в других языках.	None
NotImplementedType[К 1]	Неизменяемый	Объект, который возвращается при перегрузке операторов, когда типы операндов не поддерживаются.	NotImplemented
range	Неизменяемый	Последовательность целых чисел от какого-то одного значения до другого, обычно используется для повторения операции несколько раз при помощи for[68]	range(1, 10)
range(10, -5, -2)
set	Изменяемый	Неупорядочное множество, не содержит дубликатов; может содержать внутри себя различные хешируемые типы данных	{4.0, 'string', True}
set()
str	Неизменяемый	Строковый тип	'Wikipedia'
"Wikipedia"
"""Spanning
multiple
lines"""
tuple	Неизменяемый	Кортеж. Может содержать внутри себя различные типы данных. Может использоваться в качестве неизменяемого списка и в качестве записей с неименованными полями[69]	В качестве неизменяемого списка:
(4.0, 'string', True)
('single element',)
()
В качестве записей:
lax_coordinates = (33.9425, -118.408056)
city, year, pop, chg, area = ('Tokyo', 2003, 32450, 0.66, 8014)[69]
Синтаксис и семантика
Основная статья: Синтаксис и семантика Python
Операторы
Набор операторов достаточно традиционен.

Условный оператор if (если). При наличии нескольких условий и альтернатив применяется необязательный блок elif(сокращение от else if), который может повторяться в коде неограниченное число раз. Если ни одно из условий не было соблюдено, то выполняется необязательный блок else (иначе).
Оператор цикла while.
Оператор итерации for.
Операторы обработки исключений try — except — else — finally.
Оператор определения класса class.
Оператор определения функции, метода или генератора def. Внутри возможно применение return (возврат) для возврата из функции или метода, а в случае генератора — yield (давать).
Оператор сопоставления с образцом (начиная с Python 3.10) match — case.
Операторы вызова исключений raise и assert.
Оператор pass ничего не делает. Используется для пустых блоков кода.
Система отступов
Одной из интересных синтаксических особенностей языка является выделение блоков кода с помощью отступов (пробелов или табуляций), поэтому в Python отсутствуют операторные скобки begin/end, как в языке Паскаль, или фигурные скобки, как в Си. Такой «трюк» позволяет сократить количество строк и символов в программе и приучает к «хорошему» стилю программирования. С другой стороны, поведение и даже корректность программы может зависеть от начальных пробелов в тексте. Тем, кто привык программировать на языках с явным выделением начала и конца блоков, такое поведение поначалу может показаться неинтуитивным и неудобным.

Сам Гвидо писал[70]:
Наверное, самой спорной особенностью Python является использование отступов для группировки операторов, что взято непосредственно из ABC. Это одна из особенностей языка, которая дорога моему сердцу. Это делает код Python более читабельным двумя способами. Во-первых, использование отступов уменьшает визуальное нагромождение и делает программы короче, тем самым сокращая объём внимания, необходимого для восприятия базовой единицы кода. Во-вторых, это даёт программисту меньше свободы в форматировании, тем самым делая возможным более единообразный стиль, что облегчает чтение чужого кода. (Сравните, например, три или четыре различных соглашения о размещении фигурных скобок в Си, каждое из которых имеет сильных сторонников).

Оригинальный текст (англ.)
Выражения
Состав, синтаксис, ассоциативность и приоритет операций достаточно привычны для языков программирования и призваны минимизировать употребление скобок. Если сравнивать с математикой, то приоритеты операторов зеркалируют соответствующие в математике, при этом оператор присвоения значения = соответствует типографскому ←. Хотя приоритеты операций позволяют не использовать скобки во многих случаях, на анализ больших выражений может тратиться лишнее время, в результате чего в таких случаях выгоднее явно расставлять скобки[33].

Отдельно стоит упомянуть операцию форматирования для строк (работает по аналогии с функцией printf() из Си), которая использует тот же символ, что и взятие остатка от деления:

>>> str_var = "world"
>>> print("Hello, %s" % str_var)
Hello, world
В версии 3.6 были добавлены форматированные строковые литералы, или f-строки, которые делают код более читаемым и лаконичным:

>>> str_var = "world"
>>> print(f"Hello, {str_var}") # вывод с использованием f-строки
Hello, world
Python имеет удобные цепочечные сравнения:

1 <= a < 10 and 1 <= b < 20
Кроме того, логические операции (or и and) являются ленивыми: если для вычисления значения операции достаточно первого операнда, этот операнд и является результатом, в противном случае вычисляется второй операнд логической операции. Это основывается на свойствах алгебры логики: например, если один аргумент операции «ИЛИ» (or) является истиной, то и результат этой операции всегда является истиной. В случае, если второй операнд является сложным выражением, это позволяет сократить издержки на его вычисление. Этот факт широко использовался до версии 2.5 вместо условной конструкции:

a < b and "меньше" or "больше или равно"
Встроенные типы данных, как правило, имеют особый синтаксис для своих литералов (записанных в исходном коде констант):

"строка и Юникод-строка одновременно"
'строка и Юникод-строка одновременно'
"""тоже строка и Юникод-строка одновременно"""
True or False  # булевы литералы
3.14  # число с плавающей запятой
0b1010 + 0o12 + 0xA  # числа в двоичной, восьмеричной и шестнадцатеричной системах счисления
1 + 2j  # комплексное число
[1, 2, "a"]  # список
(1, 2, "a")  # кортеж
{'a': 1, 'b': 'B'}  # словарь
{'a', 6, 8.8}  # множество
lambda x: x**2  # анонимная функция
(i for i in range(10)) # генератор
Для списков (и других последовательностей) Python предлагает набор операций над срезами. Особенностью является индексация, которая может показаться новичку странной, но раскрывает свою согласованность по мере использования. Индексы элементов списка начинаются с нуля. Запись среза s[N:M] означает, что в срез попадают все элементы от N включительно до M, не включая. При этом индекс можно не указывать. Например, запись s[:M] означает, что в срез попадают все элементы с самого начала; запись s[N:] означает, что попадают все элементы до конца среза; запись s[:] означает, что попадают все элементы с начала и до конца.

Имена
Имя (идентификатор) может начинаться с буквы любого алфавита в Юникоде любого регистра или подчёркивания, после чего в имени можно использовать и цифры. В качестве имени нельзя использовать ключевые слова (их список можно узнать по import keyword; print(keyword.kwlist)) и нежелательно переопределять встроенные имена. Имена, начинающиеся с символа подчёркивания, имеют специальное значение[71].

В каждой точке программы интерпретатор имеет доступ к трём пространствам имён (то есть отображениям имён в объекты): локальному, глобальному и встроенному.

Области видимости имён могут быть вложенными друг в друга (внутри определяемой функции видны имена из окружающего блока кода). На практике с областями видимости и связыванием имён связано несколько правил «хорошего тона», о которых можно подробнее узнать из документации.

Строки документации
Python предлагает механизм документирования кода pydoc. В начало каждого модуля, класса, функции вставляется строка документации — docstring[англ.]. Строки документации остаются в коде на момент времени исполнения, и в язык встроен доступ к документации[72](переменная __doc__), что используется современными IDE (Интегрированная среда разработки) (например, Eclipse).

В интерактивном режиме можно получить помощь, сгенерировать гипертекстовую документацию по целому модулю или даже применить doctest[англ.] для автоматического тестирования модуля.

Парадигмы программирования
Python — мультипарадигменный язык программирования. Полностью поддерживаются объектно-ориентированное, структурное[73], обобщённое, функциональное программирование[14] и метапрограммирование[18]. Базовая поддержка аспектно-ориентированного программирования реализуется за счёт метапрограммирования[22]. Множество других методик, в том числе контрактное[74][75] и логическое программирование[76] можно реализовать с помощью расширений.

Объектно-ориентированное программирование
Дизайн языка Python построен вокруг объектно-ориентированной модели программирования. Реализация ООП в Python является хорошо продуманной, но вместе с тем достаточно специфической по сравнению с другими объектно-ориентированными языками. В языке всё является объектами — либо экземплярами классов, либо экземплярами метаклассов. Исключением является базовый встроенный метакласс type. Таким образом, классы на самом деле являются экземплярами метаклассов, а производные метаклассы являются экземплярами метакласса type. Метаклассы являются частью концепции метапрограммирования и предоставляют возможность управления наследованием классов, что позволяет создавать абстрактные классы, регистрировать классы или добавлять в них какой-либо программный интерфейс в рамках библиотеки или фреймворка[18].

Классы по своей сути представляют план или описание того, как создать объект, и хранят в себе описание атрибутов объекта и методов для работы с ним. Парадигма ООП основывается на инкапсуляции, наследовании и полиморфизме[77]. Инкапсуляция в Python представлена возможностью хранения публичных и скрытых атрибутов (полей) в объекте с предоставлением методов для работы с ними[77], при этом на самом деле все атрибуты являются публичными, но для пометки скрытых атрибутов существует соглашение об именовании[78]. Наследование позволяет создавать производные объекты без необходимости повторного написания кода, а полиморфизм заключается в возможности переопределения любых методов объекта (в Python все методы являются виртуальными[78]), а также в перегрузке методов и операторов. Перегрузка методов в Python реализуется за счёт возможности вызова одного и того же метода с разным набором аргументов[77]. Особенностью Python является возможность модифицировать классы после их объявления, добавляя в них новые атрибуты и методы[33], также можно модифицировать и сами объекты, в результате чего классы могут использоваться как структуры для хранения произвольных данных[78].

В Python поддерживается множественное наследование. Само по себе множественное наследование является сложным, и его реализации сталкиваются с проблемами разрешения коллизий имён между родительскими классами и с возможным повторным наследованием от одного и того же класса в иерархии. В Python методы вызываются согласно порядку разрешения методов (MRO), который основан на алгоритме C3-линеаризации[79], в обычных случаях при написании программ не требуется знать принцип работы данного алгоритма, понимание же может потребоваться при создании нетривиальных иерархий классов[80].

Возможности и особенности, специфичные для Python:

Специальные методы, управляющие жизненным циклом объекта: конструкторы, деструкторы.
Перегрузка операторов (всех, кроме is, '.', '=' и символьных логических).
Свойства (имитация поля с помощью функций).
Управление доступом к полям (эмуляция полей и методов, частичный доступ, и т. п.).
Методы для управления наиболее распространёнными операциями (истинностное значение, len(), глубокое копирование, сериализация, итерация по объекту, …).
Полная интроспекция.
Классовые и статические методы, классовые поля.
Классы, вложенные в функции и классы.
Возможность модифицировать объекты во время исполнения программы.
Обобщённое программирование
Языки с поддержкой динамической типизации и объектно-ориентированного программирования обычно не рассматриваются в рамках обобщённого программирования, поскольку задачи обобщённого программирования решаются за счёт отсутствия ограничений на типы данных[20][21]. В Python обобщённое программирование со строгой типизацией достигается использованием средств языка совместно со внешними анализаторами кода[81], такими как Mypy[82].

Функциональное программирование
Несмотря на то, что Python изначально не задумывался как язык функционального программирования[83], он поддерживает функциональный стиль программирования, в частности[84]:

функция является объектом первого класса,
функции высших порядков,
рекурсия,
фокус на работу со списками,
аналог замыканий,
частичное применение функции с помощью метода partial(),
возможность реализации других средств на самом языке (например, карринг).
Однако, в отличие от большинства языков, непосредственно ориентированных на функциональное программирование, Python не является чистым языком программирования и код не защищён от побочных эффектов[84][85].

В стандартной библиотеке Python существуют специальные пакеты operator и functools для функционального программирования[83].

Метапрограммирование
Пазлинка и перо
Этот раздел статьи ещё не написан.
Здесь может располагаться отдельный раздел. Помогите Википедии, написав его. (8 февраля 2023)
Python поддерживает метапрограммирование[86][18].

Асинхронное программирование

Этот раздел не завершён.
Вы поможете проекту, исправив и дополнив его следующей информацией: Асинхронное программирование на Python.
Python, начиная с 3.5, стал поддерживать асинхронное программирование. Появились операторы async и await, а также библиотека asyncio[19]

import asyncio

async def main():
    print('Hello ...')
    await asyncio.sleep(1)
    print('... World!')

asyncio.run(main())
async является атрибутом, который создает асинхронную функцию[19]

await позволяет выполнять асинхронные генераторы[19]

Возможности
Модули и пакеты
Программное обеспечение (приложение или библиотека) на Python оформляется в виде модулей, которые в свою очередь могут быть собраны в пакеты. Модули могут располагаться как в каталогах, так и в ZIP-архивах. Модули могут быть двух типов по своему происхождению: модули, написанные на «чистом» Python, и модули расширения (extension modules), написанные на других языках программирования. Например, в стандартной библиотеке есть «чистый» модуль pickle и его аналог на Си: cPickle. Модуль оформляется в виде отдельного файла, а пакет — в виде отдельного каталога. Подключение модуля к программе осуществляется оператором import. После импорта модуль представлен отдельным объектом, дающим доступ к пространству имён модуля. В ходе выполнения программы модуль можно перезагрузить функцией reload().

Интроспекция
Python поддерживает полную интроспекцию времени исполнения[87]. Это означает, что для любого объекта можно получить всю информацию о его внутренней структуре.

Применение интроспекции является важной частью того, что называют Pythonic style, и широко применяется в библиотеках и фреймворках Python, таких как PLY, Cherry, Django и др., значительно экономя время использующего их программиста.

Необходимые для интроспекции данные хранятся в специальных атрибутах. Так, например, получить все пользовательские атрибуты большинства объектов можно из специального атрибута — словаря (или другого объекта, предоставляющего интерфейс dict) __dict__

 >>> class x(object):pass
 ....
 >>> f = x()
 >>> f.attr = 12
 >>> print(f.__dict__)
 {'attr': 12}
 >>> print(x.__dict__)       # т.к. классы тоже являются экземплярами объекта type
                            # то и они поддерживают этот тип интроспекции
 {'__dict__': <attribute '__dict__' of 'x' objects>, '__module__'.......
Есть также другие атрибуты, имена и назначение которых зависят от объекта:

 >>> def f():pass
 ....
 >>> f.func_code.co_code    # получение байтокода функции
 'd\x00\x00S'
 >>> f.__class__            # специальный атрибут - ссылка на класс данного объекта
 <type 'function'>
Подавляющее большинство атрибутов, поддерживающих интроспекцию, является классовым, и их, в свою очередь, можно получить из obj.__class__.__dict__. Часть информации, унаследованную от базового класса, все объекты используют совместно, что позволяет экономить память.

Для удобства получения интроспективной информации в Python есть модуль inspect[88].

 >>> def f(x,y = 10,**mp):pass
 ...
 >>> inspect.getargspec(f)
 (['x', 'y'], None, 'mp', (10,))
С помощью модуля new возможен обратный процесс — построения объекта из составных частей на этапе исполнения

 >>> def f(i): return j + i
 ....
 >>> j = 2
 >>> f(1)
 3
 >>> import new
 >>> g = new.function(f.func_code, {'j': 23})
 >>> g(1)
 24
Обработка исключений
Обработка исключений поддерживается в Python посредством операторов try, except, else, finally, raise, образующих блок обработки исключения. В общем случае блок выглядит следующим образом:

try:
    # Здесь код, который может вызвать исключение
    raise Exception("message")  # Exception, это один из стандартных типов исключения (всего лишь класс),
                                # может использоваться любой другой, в том числе свой
except (Тип исключения1, Тип исключения2, …) as Переменная:
    # Код в блоке выполняется, если тип исключения совпадает с одним из типов
    # (Тип исключения1, Тип исключения2, …) или является наследником одного
    # из этих типов.
    # Полученное исключение доступно в необязательной Переменной.
except (Тип исключения3, Тип исключения4, …) as Переменная:
    # Количество блоков except не ограничено
    raise  # Сгенерировать исключение "поверх" полученного; без параметров - повторно сгенерировать полученное
except:
    # Будет выполнено при любом исключении, не обработанном типизированными блоками except
else:
    # Код блока выполняется, если не было поймано исключений.
finally:
    # Будет исполнено в любом случае, возможно после соответствующего
    # блока except или else
Совместное использование else, except и finally стало возможно только начиная с Python 2.5. Информация о текущем исключении всегда доступна через sys.exc_info(). Кроме значения исключения, Python также сохраняет состояние стека вплоть до точки возбуждения исключения — так называемый traceback.

В отличие от компилируемых языков программирования, в Python использование исключения не приводит к значительным накладным расходам (а зачастую даже позволяет ускорить исполнение программ) и очень широко используется. Исключения согласуются с философией Python (10-й пункт «дзена Python» — «Ошибки никогда не должны умалчиваться») и являются одним из средств поддержки «утиной типизации».

Иногда вместо явной обработки исключений удобнее использовать блок with (доступен, начиная с Python 2.5).

Итераторы
В программах на Python широко используются итераторы. Цикл for может работать как с последовательностью, так и с итератором. Большинство коллекций предоставляют итераторы, итераторы могут также определяться пользователем для собственных объектов. Модуль itertools стандартной библиотеки содержит средства работы с итераторами.

Генераторы
Одной из интересных возможностей языка являются генераторы — функции, сохраняющие внутреннее состояние: значения локальных переменных и текущую инструкцию (см. также: сопрограммы). Генераторы могут использоваться как итераторы для структур данных и для ленивых вычислений.

При вызове генератора функция немедленно возвращает объект-итератор, который хранит текущую точку исполнения и состояние локальных переменных функции. При запросе следующего значения (посредством метода next(), неявно вызываемого в цикле for) генератор продолжает исполнение функции от предыдущей точки остановки до следующего оператора yield или return.

В Python 2.4 появились генераторные выражения — выражения, дающие в результате генератор. Генераторные выражения позволяют сэкономить память там, где иначе требовалось бы использовать список с промежуточными результатами:

>>> sum(i for i in range(1, 100) if i % 2 != 0)
2500
В этом примере суммируются все нечётные числа от 1 до 99.

Начиная с версии 2.5, Python поддерживает полноценные сопроцедуры: теперь в генератор можно передавать значения с помощью метода send() и возбуждать в его контексте исключения с помощью метода throw().

Также Python поддерживает вложенные генераторы. Например, для создания двумерного массива нужно разместить генератор списка, являющегося строкой, внутри генератора всех строк: [[0 for j in range(m)] for i in range(n)]

Управление контекстом выполнения
В Python 2.5 появились средства для управления контекстом выполнения блока кода — оператор with и модуль contextlib. См.: пример.

Оператор может применяться в тех случаях, когда до и после некоторых действий должны обязательно выполняться некоторые другие действия, независимо от возбуждённых в блоке исключений или операторов return: файлы должны быть закрыты, ресурсы освобождены, перенаправление стандартного ввода вывода закончено и т. п. Оператор улучшает читаемость кода, а значит, помогает предотвращать ошибки.

Декораторы
Не следует путать с одноимённым шаблоном проектирования.
Пазлинка и перо
Этот раздел статьи ещё не написан.
Здесь может располагаться отдельный раздел. Помогите Википедии, написав его. (8 февраля 2023)
Декораторы функций — вызываемые объекты, которые принимают другую функцию в качестве аргумента. Декораторы функций могут производить операции с функцией и возвращают либо саму функцию, либо другую заменяющую её функцию или вызываемый объект. То есть, если в коде ранее был прописан декоратор, названный decorate, то следующий код[89]:

@decorate
def target():
    print('running target()')
эквивалентен этому[89]:

def target():
    print('running target()')
target = decorate(target)
Это позволяет сократить использование кода.

Пример использования декоратора функции[89]:

>>> def deco(func):
...     def inner():
...         print('running inner()')
...     return inner
…
>>> @deco
... def target():
...     print('running target()')
>>> target()
running inner()
>>> target
<function deco.<locals>.inner at 0.10063b598>
Существуют декораторы классов[90].

Регулярные выражения
Формат регулярных выражений унаследован из Perl с некоторыми отличиями. Для их использования требуется импортировать модуль re[91], являющийся частью стандартной библиотеки.

Стандартная библиотека

Python поставляется «с батарейками в комплекте». Такую метафору использовали разработчики, чтобы подчеркнуть богатую стандартную библиотеку языка[92]
Богатая стандартная библиотека является одной из привлекательных сторон Python. Здесь имеются средства для работы со многими сетевыми протоколами и форматами Интернета, например, модули для написания HTTP-серверов и клиентов, для разбора и создания почтовых сообщений, для работы с XML и т. п. Набор модулей для работы с операционной системой позволяет писать кросс-платформенные приложения. Существуют модули для работы с регулярными выражениями, текстовыми кодировками, мультимедийными форматами, криптографическими протоколами, архивами, сериализации данных, поддержка юнит-тестирования и др.[93]

Если модулей стандартной библиотеки не хватает, то есть возможность использовать другие каналы получения библиотек. Одним из каналов распространения и обновления пакетов для Python является PyPI (англ. Python Package Index)[94].

Сторонние библиотеки
Основная статья: Сторонние библиотеки Python
Здесь перечислены самые популярные библиотеки Python:

Искусственный интеллект - TensorFlow
Работа с базами данных - Библиотеки для работы с базами данных
Математические вычисления - NumPy
Веб-вычисления - Django
Создание игр - Pygame
Примеры программ
В статье «Примеры программ на языке Python» Викиверситета собраны примеры небольших программ, демонстрирующих некоторые возможности языка Python и его стандартной библиотеки.

Программа «Hello World!» может быть написана одной строкой:

print("Hello World!")
Вычисление факториала числа 10 (10!):

def factorial(n):
    if n < 0:
        raise ArithmeticError('Факториал отрицательного числа.')
    f = 1
    for i in range (2, n + 1):
        f *= i
    return f

print(factorial(10)) # 3628800
Реализация с помощью рекурсии:

def factorial(n):
    if n < 0:
        raise ArithmeticError('Факториал отрицательного числа.')
    if n == 0 or n == 1:
        return 1
    else:
        return factorial(n - 1) * n

print(factorial(10))
Профилирование и оптимизация кода
В стандартной библиотеке Python имеется профайлер (модуль profile), который можно использовать для сбора статистики о времени работы отдельных функций. Для решения вопроса о том, какой вариант кода работает быстрее, можно использовать модуль timeit. Производимые в следующей программе измерения позволяют выяснить, какой из вариантов конкатенации строк более эффективен[95]:

from timeit import Timer

tmp = "Python 3.2.2 (default, Jun 12 2011, 15:08:59) [MSC v.1500 32 bit (Intel)] on win32."

def case1(): # А. инкрементальные конкатенации в цикле
    s = ""
    for i in range(10000):
        s += tmp

def case2(): # Б. через промежуточный список и метод join
    s = []
    for i in range(10000):
        s.append(tmp)
    s = "".join(s)

def case3(): # В. списковое выражение и метод join
    return "".join([tmp for i in range(10000)])

def case4(): # Г. генераторное выражение и метод join
    return "".join(tmp for i in range(10000))

for v in range(1,5):
    print (Timer("func()","from __main__ import case%s as func" % v).timeit(200))
Как и в любом языке программирования, в Python имеются свои приёмы оптимизации кода. Оптимизировать код можно исходя из различных (часто конкурирующих друг с другом) критериев (увеличение быстродействия, уменьшение объёма требуемой оперативной памяти, компактность исходного кода и т. д.). Чаще всего программы оптимизируют по времени исполнения.

Здесь есть несколько очевидных для опытных программистов правил[95].

Не нужно оптимизировать программу, если скорость её выполнения достаточна.
Используемый алгоритм имеет определённую временную сложность, поэтому перед оптимизацией кода программы стоит сначала пересмотреть алгоритм.
Стоит использовать готовые и отлаженные функции и модули, даже если для этого нужно немного обработать данные. Например, в Python есть встроенная функция sorted().
Профилирование поможет выяснить узкие места. Оптимизацию нужно начинать с них.
Python имеет следующие особенности и связанные с ними правила оптимизации[95].

Вызов функций является достаточно дорогостоящей операцией, поэтому внутри вложенных циклов нужно стараться избегать вызова функций или, например, переносить цикл в функции. Функция, обрабатывающая последовательность, эффективнее, чем обработка той же последовательности в цикле вызовом функции.
Старайтесь вынести из глубоко вложенного цикла всё, что можно вычислить во внешних циклах. Доступ к локальным переменным более быстрый, чем к глобальным или чем доступ к полям.
Оптимизатор psyco может помочь ускорить работу модуля программы при условии, что модуль не использует динамических свойств языка Python.
В случае, если модуль проводит массированную обработку данных и оптимизация алгоритма и кода не помогает, можно переписать критические участки, скажем, на языке Си или Pyrex.
Инструмент под названием Pychecker[96] поможет проанализировать исходный код на Python и выдать рекомендации по найденным проблемам (например, неиспользуемые имена, изменение сигнатуры метода при его перегрузке и т. п.). В ходе такого статического анализа исходного кода могут быть выявлены и ошибки. Pylint[97] призван решать близкие задачи, но имеет уклон в сторону проверки стиля кода, поиска кода с запашком[98].

Сравнение с другими языками
Выбор языка обычно зависит от решаемых задач, особенностей языков и наличия библиотек, требуемых для решения задачи. Одна и та же задача, написанная на разных языках, может сильно разниться по эффективности исполнения, в том числе различия могут быть и при исполнении в разных операционных системах или при использовании разных компиляторов. В общем случае языки можно поделить на интерпретируемые (скриптовые), компилируемые в промежуточное представление и компилируемые, что влияет на производительность и потребление памяти. Python принято относить к интерпретируемым. Также отдельные языки могут иметь свои сильные стороны, в случае Python выделяется лёгкость в написании программ[99].

C++ и Java
Python сравнивается с C++/Java с точки зрения лаконичности, простоты и гибкости Python[100]. Можно сравнить «Hello, world»-программы, записанные на каждом из языков[100].

Сравнение программ «Hello, world!»
C++[100]	Java[100]	Python[100]
#include <iostream>
int main() {
    std::cout << "Hello, world!" << std::endl;
    return 0;
}
public class HelloClass {
    public static void main(String[] args) {
        System.out.println("Hello, world!");
    }
}
print("Hello, world!")
Касательно ООП, в Python, в отличие от C++ и Java, отсутствуют модификаторы доступа к полям и методам класса, атрибуты и поля у объектов могут создаваться на лету в ходе исполнения программы, а все методы являются виртуальными. По сравнению с Java Python позволяет также перегружать операторы, что даёт возможность использовать выражения близкие к естественным[100]. В совокупности подход к ООП в Python упрощает программирование, делает код более понятным и одновременно добавляет гибкости языку[100]. С другой стороны, скорость выполнения кода на Python (как и других интерпретируемых языков) значительно ниже, чем скорость выполнения аналогичного кода на C++[101] и обычно ожидается ниже, чем в Java[102]. Код на C++ получается производительнее Python, при этом занимает больше строк. Согласно исследованиям алгоритмов, применяемых в биоинформатике, Python показал себя более гибким чем C++, а Java оказалась компромиссным решением между производительностью C++ и гибкостью Python[99].

В Java и Python все объекты создаются в куче, в то время как C++ позволяет создавать объекты как в куче, так и на стеке, в зависимости от используемого синтаксиса[103]. На производительность также влияет способ доступа к данным в памяти. В C++ и Java доступ к данным происходит по постоянным смещениям в памяти, в то время как в Python — через хеш-таблицы. Использование указателей в C++ может быть довольно сложным для понимания среди новичков, и овладение навыками правильного использования указателей может занять некоторое время[99].

Go

Этот раздел слишком короткий.
Пожалуйста, улучшите и дополните его.
Go и Python — кардинально различающиеся языки, тем не менее, они часто сравниваются один с другим из-за общей ниши — бэкэнда веб-приложений. По выражению Джейсона Кинкэйда, Go объединяет «производительность и безопасность компилируемых языков, таких как C++, со скоростью разработки на динамических языках, таких как Python»[104]. В какой-то мере это действительно так: Go изначально разработан как строго статически типизированный компилируемый язык, поддерживающий максимум возможностей динамических языков, при котором ещё можно обеспечить эффективную компиляцию и сохранить производительность компилируемых программ. Общими для обоих языков является использование автоматического управления памятью, наличие встроенных динамических коллекций (массивов и словарей), поддержка срезов, развитый механизм модулей, простой и минималистичный синтаксис. Различий гораздо больше, и не всегда можно однозначно указать, в пользу какого из языков они говорят.

Динамические возможности.
Если Python является полностью динамическим языком и практически любые элементы программы могут меняться во время исполнения, включая конструирование «на лету» новых типов и модификацию существующих, то Go — статический язык с достаточно ограниченными возможностями рефлексии, работающей только в отношении созданных при разработке типов данных. В некоторой мере заменой динамических возможностей в Go является кодогенерация, обеспечиваемая простотой синтаксиса и наличием необходимых инструментов и системных библиотек. Также в Go 1.18 добавили поддержку средств обобщённого программирования (generics)[105].
Perl
Оба языка являются интерпретируемыми, компилируются в промежуточное представление, которое затем отправляется на исполнение. В случае Python генерируется промежуточный байт-код, а компилятор Perl генерирует синтаксическое дерево. Управление памятью в обоих языках автоматическое, а сами языки используются как скриптовые и хорошо подходят для написания веб-приложений. Подход в написания кода Python предполагает лучшее понимание листинга программы в ущерб производительности, тогда как в Perl больше свободы в синтаксисе, что может привести к тому что программы на Perl становятся нечитабельны для программистов, не работающих с данным языком[99].

MATLAB и R
Пазлинка и перо
Этот раздел статьи ещё не написан.
Здесь может располагаться отдельный раздел. Помогите Википедии, написав его. (8 февраля 2023)
Python, MATLAB и R используются в обработке данных и в обучении студентов основам математики и статистики. R является языком для выполнения статистических расчётов, в то время как MATLAB может считаться языком программирования наряду с Python[106].

Языки, на которые повлиял Python
Python, как весьма популярный язык программирования, повлиял на следующие языки:

CoffeeScript имеет синтаксис, вдохновлённый Python[107].
ECMAScript/JavaScript заимствовал итераторы и генераторы из Python[108].
Go, при сильнейших идеологических различиях, заимствовал у динамических языков, таких как Python, встроенные словари, динамические массивы, срезы.
Groovy был создан с мотивацией привнести философию Python на Java[109].
Julia была задумана как «такая же пригодная для общего программирования, как и Python»[110].
Nim использует систему отступов и аналогичный синтаксис[111].
Ruby — Юкихиро Мацумото, создатель языка, сказал: «Я хотел скриптовый язык, который был бы более мощным, чем Perl, и более объектно-ориентированным, чем Python. Вот почему я решил создать свой собственный язык»[112].
Swift во время разработки брал идеи структуры языка из Python, а также из Objective-C, Rust, Haskell, Ruby, C#, CLU[113].
Критика
Низкое быстродействие
Классический Python имеет общий со многими другими интерпретируемыми языками недостаток — сравнительно невысокую скорость выполнения программ[114]. В некоторой степени ситуацию улучшает кеширование байт-кода (расширения .pyc и, до версии 3.5, .pyo), которое позволяет интерпретатору не тратить время на синтаксический разбор текста модулей при каждом запуске.

Существуют реализации языка Python, вводящие высокопроизводительные виртуальные машины в качестве бэкенда компилятора. Примерами таких реализаций может служить PyPy, базирующийся на RPython, более ранней инициативой является проект Parrot. Ожидается, что использование виртуальной машины типа LLVM приведёт к тем же результатам, что и использование аналогичных подходов для реализаций языка Java, где низкая вычислительная производительность в основном преодолена[115]. Однако нельзя забывать, что динамический характер Python делает неизбежными дополнительные накладные расходы при исполнении программ, что ограничивает производительность Python-систем независимо от применяемых технологий. Вследствие этого для написания критических участков кода используются низкоуровневые языки, интеграция с которыми обеспечивается множеством программ и библиотек.

Тем не менее, Python портирован на некоторые относительно малопроизводительные платформы[116].

Глобальная блокировка интерпретатора (GIL)

Схематичное изображение работы потоков под GIL. Зелёный — поток, удерживающий GIL, красные — блокированные потоки
Основная статья: Global Interpreter Lock
Интерпретатор Python в CPython (а также Stackless и PyPy[117]) использует потоко-небезопасные данные, во избежание разрушения которых при совместной модификации из разных потоков применяется глобальная блокировка интерпретатора — GIL (Global Interpreter Lock)[118]: в ходе исполнения кода поток интерпретатора блокирует GIL, выполняет в течение фиксированного времени (по умолчанию 5 миллисекунд[К 2]) некоторое количество инструкций, после чего освобождает блокировку и приостанавливается, давая возможность работать другим потокам. GIL также освобождается во время ввода-вывода, изменения и проверки состояния синхронизирующих примитивов, при исполнении кода расширений, не обращающихся к данным интерпретатора, например, NumPy/SciPy. Таким образом, в каждый момент времени в одном процессе интерпретатора Python может исполняться только один поток кода на Python, независимо от числа доступных процессорных ядер.

Потери производительности от GIL зависят от характера программ и архитектуры системы. Большинство программ является однопоточными, либо запускает всего несколько потоков, из которых часть в каждый конкретный момент простаивает в ожидании. Персональные компьютеры обычно имеют небольшое количество процессорных ядер, которые загружены параллельно исполняющимися в системе процессами, так что реальные потери производительности на персональных компьютерах из-за GIL невелики. Но в серверных приложениях может быть удобно использовать десятки и сотни (а то и больше) параллельных потоков (например, в системах массового обслуживания, где каждый поток обрабатывает данные для отдельного пользовательского запроса), а серверы на конец 2010-х годов нередко имеют десятки и даже сотни процессорных ядер, то есть технически могут обеспечить этим потокам физически одновременное исполнение; в таких условиях GIL может приводить к действительно значительному снижению общей производительности, так как лишает программу возможности полноценно использовать ресурсы многоядерных систем.

Гвидо ван Россум говорил, что GIL «не так уж и плох» и он будет в CPython до тех пор, пока «кто-то другой» не представит реализацию Python без GIL, с которой бы однопоточные скрипты работали так же быстро[121][122].

В задачи разработки входит работа по оптимизации GIL[123]. Планируется отказ от GIL, есть черновой вариант PEP 703[124], но на данный момент есть следующие варианты избавления от GIL:

Вариант интерпретатора с синхронизацией доступа к отдельным объектам вместо глобальной блокировки[125] из-за частых захватов/освобождений блокировок оказался слишком медленным.
Реализация потоков через процессы ОС, например, модуль multiprocessing[126].
Отказ от совместного использования изменяемых данных и вызовов внешнего кода. При этом данные дублируются в потоках и их синхронизация (если таковая нужна) лежит на программисте[127].
Библиотеки, обеспечивающие собственную организацию поддержки потоков.
Есть черновой PEP по отказу от GIL в CPython[124]
Радикальным вариантом решения проблемы может быть переход на Jython и IronPython, работающие на виртуальных машинах Java и .NET/Mono: эти реализации вообще не используют GIL.

Синтаксис и семантика
Несмотря на то, что одним из заявленных принципов дизайна Python является принцип наименьшего удивления, критики отмечают целый ряд архитектурных решений, которые могут вводить в заблуждение или вызывать недоумение у программистов, привыкших к другим распространённым языкам[128]. В их числе:

Отличие в принципе работы оператора присвоения по сравнению со статически-типизированными языками. В Python при присвоении значения копируется ссылка на объект, а не значение. При работе с простыми неизменяемыми типами возникает ощущение изменения значения переменной при присваивании ей значения, однако фактически присваивается ссылка на другое значение, например, при увеличении значения переменной типа int на 1 меняется ссылка, а не увеличивается значение по ссылке. Однако при работе с изменяемыми типами их содержимое можно менять по ссылке, поэтому при присвоении одной переменной ссылки на другую и последующем изменении значения в одной из двух переменных оно изменится в обеих переменных, что хорошо заметно при работе со списками[128][129]. При этом кортежи хоть и являются неизменяемыми, но могут хранить ссылки на изменяемые объекты, поэтому по факту кортежи тоже можно менять[130];
Отличие в поведении на некоторых типах «сокращённых» операторов, таких как += и их развёрнутой записи, хотя в большинстве языков «сокращённый» вариант — это просто краткая запись полного, и семантически они абсолютно эквивалентны. Пример с использованием x +=:
>>> x = [1, 2]
>>> y = x
>>> x += [3, 4]
>>> x
[1, 2, 3, 4]
>>> y
[1, 2, 3, 4]
Аналогичный пример с использованием x = x +:
>>> x = [1, 2]
>>> y = x
>>> x = x + [3, 4]
>>> x
[1, 2, 3, 4]
>>> y
[1, 2]
Жёсткая трактовка лексической области видимости, подобная используемой в JavaScript: даже если переменная получает значение в последней строке функции, её областью видимости является вся функция.
Путаница между полями класса и полями объекта: текущее значение поля класса инициализирует одноимённое поле объекта, но не при создании объекта, а при первой записи значения в данное поле.
class Colored:
    color = "red"

obj1 = Colored()
print(obj1.color)        # выводится исходное значение поля КЛАССА
Colored.color = "green"  # изменение поля КЛАССА
print(obj1.color)        # выводится значение поля КЛАССА
obj1.color = "blue"      # изменяется поле ОБЪЕКТА и фиксируется его значение
Colored.color = "yellow" # изменение поля КЛАССА, которое уже не отразится на объекте
print(obj1.color)        # выводится поле ОБЪЕКТА

# Скрипт выведет: 
red
green
blue
В примере выше три раза выводится поле color объекта obj1 класса Colored. При этом пока не выполнена запись в это поле, выводится текущее значение поля класса, и в третий раз — значение поля объекта. Такое сохранение связи между полем объекта и класса до первой перезаписи может стать причиной неожиданного эффекта: если в программе меняется значение поля класса, то все объекты, одноимённые поля которых ещё не перезаписаны, окажутся неявно изменены.
Интуитивно трудно предсказуемое поведение параметров со значением-объектом по умолчанию. Если в качестве инициализатора для параметра по умолчанию указать конструктор объекта, это приведёт к созданию статического объекта, ссылка на который и будет передаваться по умолчанию в каждый вызов[131]. Это может повлечь трудно уловимые ошибки.
Невозможность модификации встроенных классов

Этот раздел слишком короткий.
Пожалуйста, улучшите и дополните его.
По сравнению с Ruby и некоторыми другими языками, в Python отсутствует возможность модифицировать встроенные классы[132], такие, как int, str, float, list и другие.

Реализации
CPython
Основная статья: CPython
CPython является основной реализацией языка. Он написан на языке Си и является переносимым на разные платформы. В основе управления памятью лежит использование комбинации счётчиков ссылок и сборщика мусора, ответственного за поиск циклических захватов ссылок[30]. Хотя язык считается интерпретируемым, на самом деле он компилируется в промежуточный высокоуровневый байт-код[133][134], который затем исполняется через стековую виртуальную машину[30]. Например, вызов функции print() может быть представлен в следующем виде[134]:

  0           0 RESUME                   0
  1           2 PUSH_NULL
              4 LOAD_NAME                0 (print)
              6 LOAD_CONST               0 ('Hello World!')
              8 PRECALL                  1
             12 CALL                     1
             22 RETURN_VALUE
Имена в языке имеют позднее связывание, в результате чего можно писать обращения к переменным, методам и атрибутам, которых ещё нет, но они должны быть объявлены на момент исполнения кода, использующего их. Каждый объект в Python имеет словарь, представленный хеш-таблицей, через который происходит сопоставление названий атрибутов их значениям. Глобальные переменные также сопоставляются через словарь. Одно обращение к методу или атрибуту может сопровождаться поочерёдным поиском в нескольких словарях[30].

PyPy
Основная статья: PyPy
PyPy — реализация Python, написанная на RPython (подмножество Python, имеющее намного меньше динамических возможностей). Позволяет легко проверять новые возможности. В PyPy, кроме стандартного CPython, включены возможности Stackless, Psyco, модификация AST «на лету» и многое другое. В проект интегрированы возможности анализа Python-кода и трансляция в другие языки и байт-коды виртуальных машин (Си, LLVM, Javascript, .NET с версии 0.9.9). Начиная с 0.9.0, возможна полностью автоматическая трансляция RPython в Си, в результате чего достигается скорость, приемлемая для использования (в 2—3 раза ниже, чем CPython при отключённом JIT для версии 0.9.9). По умолчанию PyPy поставляется со встроенным JIT-компилятором, с помощью которого он способен работать намного быстрее, чем CPython.

Jython
Пазлинка и перо
Этот раздел статьи ещё не написан.
Здесь может располагаться отдельный раздел. Помогите Википедии, написав его. (8 февраля 2023)
Основная статья: Jython
Jython — реализация Python, компилирующая код на Python в байт-код Java, который может быть выполнен JVM. Также может использоваться для импорта класса, исходный код которого был написан на Java в качестве модуля для Python[135].

Другие реализации
Существуют также другие реализации.

Numba[англ.] — Jit-компилятор на основе LLVM с поддержкой NumPy.
PyS60[136] — реализация языка для смартфонов фирмы Nokia на платформе Series 60. Не поддерживается
IronPython — Python для .NET Framework и Mono. Компилирует Python программы в MSIL, таким образом предоставляя полную интеграцию с .NET-системой[137].
Stackless — также написанная на Си реализация Python. Это не полноценная реализация, а патчи к CPython. Предоставляет расширенные возможности многопоточного программирования и значительно большую глубину рекурсии.
Python for .NET[138] — ещё одна реализация Python для .NET. В отличие от IronPython эта реализация не компилирует Python код в MSIL, а только предоставляет интерпретатор, написанный на C#. Позволяет использовать .NET-сборки из Python кода.
Jython — реализация Python, использующая JVM в качестве среды исполнения. Позволяет прозрачно использовать Java-библиотеки.
TinyPy[139] — минималистическая версия Python. Часть возможностей CPython не реализована.
MicroPython — реализация Python 3 для встроенных систем с малым объёмом оперативной памяти[140].
Brython[141] — реализация языка на клиентском JavaScript, позволяющая писать браузерные скрипты на Python 3.
QPython[142] — реализация Python для Android. Проект всё ещё на стадии тестирования, однако на QPython уже портированы некоторые самые необходимые библиотеки. Позволяет и работать в интерактивном режиме. Существует также Qpython3.
Специализированные подмножества/расширения Python
На основе Python было создано несколько специализированных подмножеств языка, в основном предназначенных для статической компиляции в машинный код. Некоторые из них перечислены ниже.

RPython[143] — созданная в рамках проекта PyPy сильно ограниченная реализация Python без динамизма времени исполнения и некоторых других возможностей. Код на RPython можно компилировать во множество других языков/платформ — C, JavaScript, Lisp, .NET[144], LLVM. На RPython написан интерпретатор PyPy.
Cython[145] — ограниченная реализация Python, но несколько меньше, чем RPython. Cython расширен возможностями статической типизации типами из языка C и позволяет свободно смешивать типизированный и не типизированный код. Предназначен для написания модулей расширений, компилируется в код на языке C.
Nuitka[146] — Позволяет транслировать весь код Python в код Си или в исполняемые файлы.
Инструменты поддержки программирования
Интерактивный режим
Подобно Lisp и Prolog, Python может использоваться в интерактивном режиме, при котором введённые с клавиатуры операторы сразу же выполняются, а результат выводится на экран (REPL). Этот режим удобен как при изучении языка, так и в процессе профессиональной разработки — для быстрого тестирования отдельных фрагментов кода, — так как обеспечивает немедленную обратную связь. Также он позволяет использовать интерпретатор в качестве калькулятора с большим набором функций.

Эталонная реализация Python имеет встроенный интерактивный интерпретатор, работающий в режиме текстового терминала и позволяющий выполнять все основные операции. В интерактивном режиме доступен отладчик pdb и система помощи (вызывается по help()), работающая для всех модулей, классов и функций, которые содержат строки документации:
>>> from math import * # импорт математических функций
>>> help(cos) # помощь по функции cos
Help on built-in function cos in module math:

cos(x, /)
    Return the cosine of x (measured in radians).
IPython[147] — выходящая под BSD-лицензией кросс-платформенная интерактивная оболочка, предоставляющая расширенную интроспекцию и дополнительные команды. В частности, позволяет передавать исполняемому коду на Python результаты выполнения команд системной командной оболочки. Поддерживает подсветку кода и автоматическое дополнение.
BPython[148] — расширение стандартной командной оболочки Python с помощью ряда дополнительных модулей. Реализует подсветку синтаксиса, автоматическое дополнение кода с предложением вариантов, автоматическое выравнивание, интеграция с Pastebin, сохранение ввода в файл, восстановление удалённой строки, предложение параметров для функций.
Почти все IDE для Python поддерживают REPL для быстрого тестирования.

IDE

IDLE
Существует несколько специализированных IDE для разработки на Python.

Eric — полнофункциональный редактор Python и IDE, написанный на Python. Он базируется на кросс-платформенном фреймворке Qt, в качестве компонента редактирования используется QScintilla. Eric предоставляет возможности ведения проектов, отладки, профилирования, рефакторинга кода, взаимодействия с популярными системами управления версиями, такими как Subversion и Git. Расширяется через механизм плагинов. Репозиторий плагинов доступен прямо из среды разработки. Распространяется бесплатно, лицензия GNU GPL v3.
PyCharm — полнофункциональная IDE для Python от JetBrains, доступна на платформах Windows, macOS и Linux, существует в бесплатном (Community) и платном (Professional) вариантах.
Wing IDE[англ.] — линейка Python-IDE от американской фирмы Wingware, включает три варианта: «Wing 101», «Wing Personal», «Wing Pro», из которых первые два бесплатны, последний — платный. Версия Pro обладает всеми необходимыми средствами для профессиональной разработки, включая поддержку проектов, работу с системами управления версиями, расширенные возможности навигации по коду и анализа кода, рефакторинг, поддержка использования Django. Бесплатные версии предоставляют меньше функций и не выходят за пределы возможностей, доступных в других бесплатных IDE для Python.
Spyder — open-source IDE для Python под лицензией MIT, бесплатная, доступна на платформах Windows, Mac OS X и Linux. Особенностью является то, что IDE ориентирована на data science, в ней удобно работать с библиотеками типа SciPy, NumPy, Matplotlib. Spyder поставляется в комплекте с менеджером пакетов Anaconda. В целом обладает качествами стандартной IDE, имеет редактор с подсветкой синтаксиса, автоматическое дополнение кода, обозреватель документации.
Thonny — многоплатформенная бесплатная IDE, выпускается под лицензией MIT, поддерживается Институтом информатики Тартуского университета в Эстонии. Позиционируется как «Python IDE для новичков», полностью, включая интерпретатор Python, ставится «из коробки» пользователем без административных прав, сразу после установки может использоваться без дополнительных настроек. Предназначена для обучения, имеет улучшенную визуализацию порядка вычисления выражений и вызова функций, динамическую подсветку синтаксических ошибок, простой менеджер пакетов. Для профессионального применения возможностей недостаточно, например, нет поддержки проектов и интеграции с системами управления версиями.
IDLE[149] — Встроенный в Python IDE. Очень простой и малофункциональный.
Помимо этого, существуют плагины для поддержки программирования на Python для универсальных IDE Eclipse[150], KDevelop[151], Visual Studio Code[152] и Microsoft Visual Studio[153], а также имеется поддержка подсветки синтаксиса, авто дополнения кода и подключения средств отладки и запуска приложений для целого ряда распространённых текстовых редакторов.

Применение

Python Powered
Python — стабильный и распространённый язык. Он используется во многих проектах и в различных качествах: как основной язык программирования или для создания расширений и интеграции приложений. На Python реализовано большое количество проектов, также он активно используется для создания прототипов будущих программ.

Python является лёгким в изучении языком, и часто изучается как первый язык[14], в том числе используется при обучении детей программированию[154]. Как первый язык он хорошо подходит, поскольку программы на нём близки к естественному языку, на котором люди привыкли думать, а для написания корректной программы требуется минимальное количество ключевых слов. В других же языках, таких как C++, существует большое количество различных синтаксических конструкций и элементов языка, которым приходится уделять внимание вместо изучения алгоритмов[100].

Являясь приложением с открытым исходным кодом, интерпретатор Python используется по всему миру и поставляется в составе операционных систем на базе Linux, а также в компьютерах от фирмы Apple. Python популярен среди индивидуальных разработчиков, но также используется крупными компаниями в достаточно серьёзных продуктах, ориентированных на получение прибыли[155]. На Python написан Reddit[34] и YouTube[156]. В Dropbox[157] также активно применяется Python, а из-за сложностей динамической типизации и огромного количества кода компания перешла к статической типизации с помощью открытого проекта Mypy[158] Также Python активно используется в Facebook[159] и Instagram[160]. Многие компании используют Python для тестирования аппаратного обеспечения, среди этих компаний значатся Intel, Cisco, Hewlett-Packard и IBM. Industrial Light & Magic и Pixar используют его при создании анимационных фильмов[155].

Язык активно используется компанией Google в её поисковой системе, а YouTube в значительной степени написан с использованием Python[155][161]. Кроме того, Google спонсирует разработку Python с 2010 года[162][163], и поддержку PyPI, основной системы распространения пакетов для Python[162][164].

Сильными сторонами Python являются его модульность и возможность интегрироваться с другими языками программирования, в том числе в составе сложных комплексных приложений и систем[165]. Сочетание простоты и лаконичности с большим количеством возможностей делает Python удобным в качестве скриптового языка[источник не указан 1213 дней]. Многие проекты предоставляют прикладной интерфейс программирования на Python для написания скриптов, например, среды 3D-моделирования Autodesk Maya[155], Blender[166] и Houdini[167], а также свободная геоинформационная система QGIS[168]. Некоторые проекты реализуют базовую часть на более производительных языках программирования, а для упрощения работы предоставляют полноценный интерфейс прикладного программирования на Python[источник не указан 1213 дней]. Так, движок свободного видеоредактора OpenShot реализован в виде библиотеки libopenshot, написанной на C++ с использованием библиотек на Си, а все возможности полностью покрыты прикладным интерфейсом программирования Python[169][значимость факта?]. Агентство национальной безопасности США использует Python для анализа данных, а NASA использует его при выполнении научных задач[155]. Из инструментов, используемых в NASA, можно отметить свободный графический симулятор сети GNS3[англ.], который также хорошо зарекомендовал себя в корпоративной среде и используется в технологических компаниях, например, в Intel[170]. На Python написана также свободная популярная программа нарезки 3D моделей для печати на 3D-принтерах Cura[171][172].

Python с пакетами NumPy, SciPy и MatPlotLib активно используется как универсальная среда для научных расчётов в качестве замены распространённым специализированным коммерческим пакетам, таким как Matlab, предоставляя аналогичную функциональность и более низкий порог вхождения[173]. По большей части на Python написана также графическая программа Veusz[англ.][174], позволяющая создавать качественные графики, готовые для размещения в научных публикациях[175][значимость факта?]. Библиотека Astropy — популярный инструмент для астрономических расчётов[176][значимость факта?].

Также Python является лучшим языком программирования по использованию в ИИ сфере[177]

Также Python подходит для выполнения нестандартных или сложных задач в системах сборки проектов, что обусловлено отсутствием необходимости предварительной компиляции исходных файлов. В проекте Google Test он используется для генерации исходного кода mock-объектов для классов языка C++[178][значимость факта?].

Интерпретатор Python может использоваться в качестве мощной командной оболочки и скриптового языка для написания командных файлов ОС. Лёгкость обращения из Python-скриптов к внешним программам и наличие библиотек, дающих доступ к управлению системой, делают Python удобным инструментом для системного администрирования[179]. Он широко используется для этой цели на платформе Linux: обычно Python поставляется с системой, во многих дистрибутивах инсталляторы и визуальный интерфейс системных утилит написаны именно на Python. Используется он и в администрировании других Unix-систем, в частности, в Solaris и macOS[179]. Кроссплатформенность самого языка и библиотек делает его привлекательным для унифицированной автоматизации задач системного администрирования в гетерогенных средах, где совместно применяются компьютеры с операционными системами различных типов.

Будучи языком общего назначения Python применим почти во всех сферах деятельности. Фактически Python используется практически любой солидной компанией тем или иным образом как для выполнения текущих задач, так и в тестировании, администрировании или в разработке программных продуктов[155].

Примечания
Комментарии
 Недоступно непосредственно по имени типа.
 Значение в секундах можно получить с помощью команды sys.getswitchinterval()[119] и изменить во время работы программы с помощью sys.setswitchinterval()[120]
Источники
↑ Показать компактно
 History and License - Python documentation
 Wouters T. Python Insider: Python 3.12.4 released — 2024.

 Мария «Mifrill» Нефёдова, Создатели языков программирования: Они такие разные, но кодинг их объединяет, Хакер № 09/08 (117). Дата обращения: 1 декабря 2012. Архивировано 2 июля 2013 года.
 Прохоренок Н., Дронов В. Введение // Python 3. Самое необходимое, 2-е изд.. — БХВ-Петербург, 2019. — С. 11. — 608 с. — ISBN 9785977539944. Архивировано 12 февраля 2021 года.
 Yogesh Rana. Python: Simple though an Important Programming language (англ.) // International Research Journal of Engineering and Technology (IRJET). — 2019. — 2 February (vol. 06, iss. 2). — P. 1856—1858. — ISSN 2395-0056. Архивировано 11 февраля 2021 года.
 SkipMontanaro. Why is Python a dynamic language and also a strongly typed language - Python Wiki (англ.). wiki.python.org (24 февраля 2012). Дата обращения: 14 марта 2021. Архивировано 14 марта 2021 года.
 Mark Lutz. A Python Q&A Session (англ.). Learning Python, 3rd Edition [Book]. O'Reilly Media, Inc. (2007). Дата обращения: 11 февраля 2021. Архивировано 8 февраля 2021 года.
 Python Introduction | (англ.). Python Education. Google Developers (20 августа 2018). Дата обращения: 21 февраля 2021. Архивировано 4 декабря 2020 года.
 Satwik Kansal. Metaprogramming in Python (англ.). IBM (5 апреля 2018). Дата обращения: 14 апреля 2021. Архивировано 27 февраля 2021 года.
 asyncio — Asynchronous I/O. Python documentation. Дата обращения: 9 октября 2023. Архивировано 5 мая 2019 года.
 Alexandre Bergel, Lorenzo Bettini. Generic Programming in Pharo (англ.) // Software and Data Technologies / José Cordeiro, Slimane Hammoudi, Marten van Sinderen. — Berlin, Heidelberg: Springer, 2013. — P. 66–79. — ISBN 978-3-642-45404-2. — doi:10.1007/978-3-642-45404-2_5. Архивировано 13 февраля 2021 года.
 R. Peschke, K. Nishimura, G. Varner. ARGG-HDL: A High Level Python BasedObject-Oriented HDL Framework (англ.) // IEEE Transactions on Nuclear Science : pre-print. — 2020. — October. — arXiv:011.02626v1. Архивировано 7 ноября 2020 года.
 Steven F. Lott. Aspect-oriented programming (англ.). Mastering Object-Oriented Python - Second Edition. Packt Publishing (2019). Дата обращения: 21 февраля 2021. Архивировано 21 февраля 2021 года.
 Arne Bachmann, Henning Bergmeyer, Andreas Schreiber. Evaluation of aspect-oriented frameworks in Python for extending a project with provenance documentation features (англ.) // The Python Papers. — 2011. — Vol. 6, iss. 3. — P. 1–18. — ISSN 1834-3147. Архивировано 22 апреля 2018 года.
 Steven Cooper. Data Science from Scratch: The #1 Data Science Guide for Everything A Data Scientist Needs to Know: Python, Linear Algebra, Statistics, Coding, Applications, Neural Networks, and Decision Trees (англ.). — Roland Bind, 2018. — 126 p. Архивировано 21 февраля 2021 года.
 Reuven M. Lerner. Multiprocessing in Python (англ.). Linux Journal (16 апреля 2018). Дата обращения: 14 февраля 2021. Архивировано 14 февраля 2021 года.
 David Beazley, Brian K. Jones. 10. Modules and Packages - Python Cookbook, 3rd Edition [Book] (англ.). Python Cookbook, 3rd Edition. O'Reilly Media, Inc. (2013). Дата обращения: 21 февраля 2021. Архивировано 21 февраля 2021 года.
 About Python. Дата обращения: 7 августа 2007. Архивировано 11 августа 2007 года.
 PythonImplementations - Python Wiki (англ.). wiki.python.org (21 июля 2020). Дата обращения: 17 февраля 2021. Архивировано 11 ноября 2020 года.
 History and License (англ.). Python. Дата обращения: 21 мая 2021. Архивировано 5 декабря 2016 года.
 Mostafa Chandra Krintz, C. Cascaval, D. Edelsohn, P. Nagpurkar, P. Wu. Understanding the Potential of Interpreter-based Optimizations for Python (англ.) // UCSB Technical Report. — 2010. — 11 August. Архивировано 23 февраля 2021 года.
 J. Akeret, L. Gamper, A. Amara, A. Refregier. HOPE: A Python just-in-time compiler for astrophysical computations (англ.) // Astronomy and Computing. — 2015. — 1 April (vol. 10). — P. 1–8. — ISSN 2213-1337. — doi:10.1016/j.ascom.2014.12.001. — arXiv:1410.4345v2. Архивировано 15 февраля 2021 года.
 PEP 373 -- Python 2.7 Release Schedule (англ.) (23 марта 2014). Дата обращения: 7 марта 2021. Архивировано 25 февраля 2021 года.
 Berk Ekmekci, Charles E. McAnany, Cameron Mura. An Introduction to Programming for Bioscientists: A Python-Based Primer (англ.) // PLOS Computational Biology. — 2016. — 6 July (vol. 12, iss. 6). — P. e1004867. — ISSN 1553-7358. — doi:10.1371/journal.pcbi.1004867. — PMID 27271528. Архивировано 16 февраля 2021 года.
 Kalyani Adawadkar. Python Programming - Applications and Future (англ.) // International Journal of Advance Engineering and Research Development. — 2017. — April (iss. SIEICON-2017). — P. 1—4. — ISSN 2348-447. Архивировано 15 июля 2020 года.
 Ethan Bommarito, Michael James Bommarito. An Empirical Analysis of the Python Package Index (PyPI) (англ.) // Social Science Research Network. — Rochester, NY: Social Science Research Network, 2019. — 25 July. — ISSN 1556-5068. — doi:10.2139/ssrn.3426281. — arXiv:arXiv:1907.11073v2. Архивировано 9 июня 2021 года.
 Pratik Desai. Python Programming for Arduino (англ.). — Packt Publishing Ltd, 2015. — P. 8. — 400 p. — ISBN 978-1-78328-594-5. Архивировано 21 февраля 2021 года.
 Sebastian Bassi. A Primer on Python for Life Science Researchers (англ.) // PLOS Computational Biology. — 2007. — 30 November (vol. 3, iss. 11). — P. e199. — ISSN 1553-7358. — doi:10.1371/journal.pcbi.0030199. Архивировано 13 марта 2021 года.
 Архивированная копия. Дата обращения: 1 июня 2009. Архивировано из оригинала 17 февраля 2016 года.
 General Python FAQ. Python v2.7.3 documentation. Docs.python.org. Дата обращения: 4 июня 2020. Архивировано 24 октября 2012 года.
 Index of Python Enhancement Proposals (PEPs). Дата обращения: 28 января 2007. Архивировано 28 января 2007 года.
 Python 3.0 Release. Дата обращения: 1 июня 2009. Архивировано 2 июня 2009 года.
 PEP 373 -- Python 2.7 Release Schedule. python.org. Дата обращения: 9 января 2017. Архивировано 19 мая 2020 года.
 PEP 466 -- Network Security Enhancements for Python 2.7.x. python.org. Дата обращения: 9 января 2017. Архивировано 4 июня 2020 года.
 Sunsetting Python 2 (англ.). Python.org. Дата обращения: 22 сентября 2019. Архивировано 12 января 2020 года.
 Python Developer's Guide — Python Developer's Guide. devguide.python.org. Дата обращения: 17 декабря 2019. Архивировано 9 ноября 2020 года.
 Extending and Embedding the Python Interpreter: Reference Counts (англ.). Docs.python.org. — «Since Python makes heavy use of malloc() and free(), it needs a strategy to avoid memory leaks as well as the use of freed memory. The chosen method is called reference counting.» Дата обращения: 5 июня 2020. Архивировано 18 октября 2012 года.
 What’s New In Python 3.0 — Python 3.12.0 documentation. Дата обращения: 8 октября 2023. Архивировано 2 ноября 2012 года.
 Hettinger, Raymond PEP 289 – Generator Expressions. Python Enhancement Proposals. Python Software Foundation (30 января 2002). Дата обращения: 19 февраля 2012. Архивировано 14 июня 2020 года.
 6.5 itertools – Functions creating iterators for efficient looping. Docs.python.org. Дата обращения: 22 ноября 2016. Архивировано 14 июня 2020 года.
 PEP 20 — The Zen of Python. Дата обращения: 23 сентября 2005. Архивировано 17 июля 2005 года.
 Бейдер Дэн. Чистый Python. Тонкости программирования для профи. — "Издательский дом ""Питер""", 2018. — С. 64—65. — 288 с. — ISBN 978-5-4461-0803-9. Архивировано 10 апреля 2021 года.
 Venners, Bill The Making of Python. Artima Developer. Artima (13 января 2003). Дата обращения: 22 марта 2007. Архивировано 1 сентября 2016 года.
 Peters, Tim PEP 20 – The Zen of Python. Python Enhancement Proposals. Python Software Foundation (19 августа 2004). Дата обращения: 24 ноября 2008. Архивировано 26 декабря 2018 года.
 Alex Martelli, Anna Ravenscroft, David Ascher. Python Cookbook, 2nd Edition. — O'Reilly Media, 2005. — P. 230. — ISBN 978-0-596-00797-3. Архивная копия от 23 февраля 2020 на Wayback Machine Источник. Дата обращения: 28 декабря 2020. Архивировано 23 февраля 2020 года.
 Python Culture. ebeab (21 января 2014). Архивировано из оригинала 30 января 2014 года.
 Mark Summerfield. Python in Practice: Create Better Programs Using Concurrency, Libraries, and Patterns. — Addison-Wesley, 2013-08-20. — С. 201. — 326 с. — ISBN 978-0-13-337323-3. Архивировано 9 июня 2021 года.
 15 Ways Python Is a Powerful Force on the Web. Дата обращения: 28 декабря 2020. Архивировано из оригинала 11 мая 2019 года.
 8.18. pprint — Data pretty printer — Python 3.8.3 documentation. docs.python.org. Дата обращения: 28 декабря 2020. Архивировано 22 января 2021 года.
 Python on Android (англ.). www.damonkohler.com. Дата обращения: 19 декабря 2009. Архивировано 28 января 2011 года.
 Port-Specific Changes: Windows (англ.). Python v2.6.1 documentation. What’s New in Python 2.6. Python Software Foundation. Дата обращения: 11 декабря 2008. Архивировано 28 января 2011 года.
 3. Using Python on Windows — Python 3.5.9 documentation (англ.). Python Documentation. Python Software Foundation. Дата обращения: 8 июня 2020. Архивировано 15 октября 2020 года.
 Drop support of Windows Vista and 7 in Python 3.9 (англ.). Дата обращения: 10 января 2021. Архивировано 4 ноября 2020 года.
 PEP 484 — Type Hints : [англ.] // Python Enhancement Proposals. — Дата обращения: 9 октября 2023.
 Luciano Ramalho. Fluent Python : [англ.]. — O'Reilly Media, Inc., 2022, 31 March. — P. 253. — ISBN 978-1-4920-5630-0.
 Рамальо, 2016, p. 61.
 15. Floating Point Arithmetic: Issues and Limitations — Python 3.8.3 documentation. docs.python.org. — «Almost all machines today (November 2000) use IEEE-754 floating point arithmetic, and almost all platforms map Python floats to IEEE-754 “double precision”.» Дата обращения: 6 июня 2020. Архивировано 6 июня 2020 года.
 Moshe Zadka, Guido van Rossum. PEP 237 – Unifying Long Integers and Integers. Python Enhancement Proposals. Python Software Foundation (11 марта 2001). Дата обращения: 24 сентября 2011. Архивировано 28 мая 2020 года.
 Built-in Types. Дата обращения: 3 октября 2019. Архивировано 14 июня 2020 года.
 Рамальо, 2016, pp. 52—54.
 Foreword for «Programming Python» (1st ed.) (англ.). Дата обращения: 7 марта 2021. Архивировано 20 января 2021 года.
 2.3.2. Reserved classes of identifiers. Python documentation (18 октября 2009). Архивировано 28 января 2011 года.
 …целостность больших проектов на Python строится на двух вещах: тесты и doc-строка. Дата обращения: 31 октября 2008. Архивировано 21 октября 2008 года.
 Steve D. Jost. Structured Programming Details (англ.). Университет Де Поля (2019). Дата обращения: 17 февраля 2021. Архивировано 29 апреля 2020 года.
 PyDBC: method preconditions, method postconditions and class invariants for Python. Дата обращения: 24 сентября 2011. Архивировано 23 ноября 2019 года.
 Contracts for Python. Дата обращения: 24 сентября 2011. Архивировано 15 июня 2020 года.
 PyDatalog. Дата обращения: 22 июля 2012. Архивировано 13 июня 2020 года.
 Object-oriented programming in Python (англ.). IBM Developer. ibm.com (20 октября 2020). Дата обращения: 11 марта 2021. Архивировано 11 марта 2021 года.
 9. Classes (англ.). Python 3.9.2 documentation. docs.python.org. Дата обращения: 14 марта 2021. Архивировано 14 марта 2021 года.
 Fawzi Albalooshi, Amjad Mahmood. A Comparative Study on the Effect of Multiple Inheritance Mechanism in Java, C++, and Python on Complexity and Reusability of Code (англ.) // International Journal of Advanced Computer Science and Applications (IJACSA). — 2017. — Vol. 8, iss. 6. — ISSN 2156-5570. — doi:10.14569/IJACSA.2017.080614. Архивировано 10 июля 2020 года.
 Michele Simionato. The Python 2.3 Method Resolution Order (англ.). Python.org. Дата обращения: 14 марта 2021. Архивировано 14 марта 2021 года.
 PEP 484 -- Type Hints (англ.). Python.org (24 сентября 2014). Дата обращения: 13 февраля 2021. Архивировано 9 февраля 2021 года.
 Jukka Lehtosalo. Generics (англ.). Mypy 0.800 documentation. Read the Docs (2016). Дата обращения: 13 февраля 2021. Архивировано 13 февраля 2021 года.
 Рамальо, 2016, pp. 188—191.
 David Mertz. Functional Programming in Python (англ.). — O'Reilly, 2015. — ISBN 978-1491928561.
 Рамальо, 2016, p. 273.
 Рамальо, 2016, pp. 613—708.
 Патрик О'Брайен. Руководство по интроспекции на Python / Intersoft Lab. Архивировано 21 июля 2021 года.
 Beazley, 2009, pp. 222—225.
 Рамальо, 2016, pp. 214—246.
 Рамальо, 2016, pp. 686—688.
 6.2. re — Regular expression operations — Python 3.5.1 documentation. Дата обращения: 11 мая 2016. Архивировано 18 июля 2018 года.
 A.M. Kuchling (2000-07-14). "PEP 206 -- Python Advanced Library". Python.org. Архивировано 5 мая 2021. Дата обращения: 4 апреля 2021.
 The Python Standard Library. Python documentation. Дата обращения: 9 октября 2023. Архивировано 6 июня 2023 года.
 PyPI · Индекс пакета Python. PyPI. Дата обращения: 9 октября 2023. Архивировано 3 июня 2017 года.
 PythonSpeed/PerformanceTips - Python Wiki. wiki.python.org. Дата обращения: 9 октября 2023. Архивировано 18 октября 2023 года.
 PyChecker: a python source code checking tool. Дата обращения: 3 февраля 2007. Архивировано 2 февраля 2007 года.
 pylint (analyzes Python source code looking for bugs and signs of poor quality.) (Logilab.org). Дата обращения: 3 февраля 2007. Архивировано 12 февраля 2007 года.
 Pylint 3.0.1 documentation. pylint.readthedocs.io. Дата обращения: 9 октября 2023. Архивировано 18 октября 2023 года.
 Mathieu Fourment, Michael R. Gillings. A comparison of common programming languages used in bioinformatics (англ.) // BMC Bioinformatics. — 2008. — 5 February (vol. 9, iss. 1). — P. 82. — ISSN 1471-2105. — doi:10.1186/1471-2105-9-82. Архивировано 19 марта 2021 года.
 A Bogdanchikov, M Zhaparov, R Suliyev. Python to learn programming (англ.) // Journal of Physics: Conference Series. — 2013-04-10. — 10 April (vol. 423). — P. 012027. — ISSN 1742-6596 1742-6588, 1742-6596. — doi:10.1088/1742-6596/423/1/012027. Архивировано 25 июля 2024 года.
 Pascal Fua, Krzysztof Lis. Comparing Python, Go, and C++ on the N-Queens Problem // Computer Vision Laboratory, EPFL. — 2020. Архивировано 12 марта 2020 года.
 Guido van Rossum. Comparing Python to Other Languages (англ.). Python.org (1997). Дата обращения: 16 марта 2021. Архивировано 16 марта 2021 года.
 Muhammad Shoaib Farooq, Sher Afzal Khan, Farooq Ahmad, Saeed Islam, Adnan Abid. An Evaluation Framework and Comparative Analysis of the Widely Used First Programming Languages (англ.) // PLoS ONE. — 2014. — 24 February (vol. 9, iss. 2). — ISSN 1932-6203. — doi:10.1371/journal.pone.0088941. — PMID 24586449. Архивировано 15 марта 2021 года.
 Kincaid, Jason (2009-11-10). "Google's Go: A New Programming Language That's Python Meets C++". TechCrunch. Архивировано 18 января 2010. Дата обращения: 29 января 2010.
 Go 1.18 Release Notes - The Go Programming Language (англ.). go.dev. Дата обращения: 27 мая 2023. Архивировано 27 мая 2023 года.
 Ceyhun Ozgur, Taylor Colliau, Grace Rogers, Zachariah Hughes, Elyse “Bennie” Myer-Tyson. MatLab vs. Python vs. R (англ.) // Journal of Data Science. — 2017. — Vol. 15. — P. 355—372. — ISSN 1680-743X. Архивировано 11 апреля 2021 года.
 Alex MacCaw. The Little Book on CoffeeScript. — O'Reilly, 2012. — ISBN 9781449321055.
 Proposals: iterators and generators [ES4 Wiki]. wiki.ecmascript.org. Дата обращения: 24 ноября 2008. Архивировано из оригинала 20 октября 2007 года.
 Strachan, James Groovy – the birth of a new dynamic language for the Java platform (29 августа 2003). Дата обращения: 11 июня 2007. Архивировано из оригинала 5 апреля 2007 года.
 Why We Created Julia. Julia website (февраль 2012). — «We want something as usable for general programming as Python [...]». Дата обращения: 5 июня 2014. Архивировано 2 мая 2020 года.
 Yegulalp, Serdar Nim language draws from best of Python, Rust, Go, and Lisp. InfoWorld (16 января 2017). — «Nim's syntax is strongly reminiscent of Python's, as it uses indented code blocks and some of the same syntax (such as the way if/elif/then/else blocks are constructed).» Дата обращения: 16 февраля 2021. Архивировано 13 октября 2018 года.
 An Interview with the Creator of Ruby. Linuxdevcenter.com. Дата обращения: 3 декабря 2012. Архивировано 28 апреля 2018 года.
 Lattner, Chris Chris Lattner's Homepage. Chris Lattner (3 июня 2014). — «I started work on the Swift Programming Language in July of 2010. I implemented much of the basic language structure, with only a few people knowing of its existence. A few other (amazing) people started contributing in earnest late in 2011, and it became a major focus for the Apple Developer Tools group in July 2013 [...] drawing ideas from Objective-C, Rust, Haskell, Ruby, Python, C#, CLU, and far too many others to list.» Дата обращения: 3 июня 2014. Архивировано 22 декабря 2015 года.
 Python / C++ GNU g++. Computer Language Benchmarks Game. Дата обращения: 1 июля 2009. Архивировано 28 января 2011 года.
 Ars Technica report on Unladen Swallow goals (англ.). Дата обращения: 29 октября 2017. Архивировано 1 мая 2012 года.
 MicroPython - Python for microcontrollers (англ.). micropython.org. Дата обращения: 9 октября 2023. Архивировано 6 июня 2014 года.
 Яворски, Зиаде, 2021, p. 466.
 Palach, 2014, pp. 16—17.
 sys#sys.getswitchinterval(). Документация Python. Дата обращения: 25 октября 2021. Архивировано 25 октября 2021 года.
 sys#sys.setswitchinterval(). Документация Python. Дата обращения: 25 октября 2021. Архивировано 25 октября 2021 года.
 Guido van Rossum. the future of the GIL. Python Mailing Lists (8 мая 2007). Дата обращения: 3 марта 2021. Архивировано 9 ноября 2020 года.
 Guido van Rossum. It isn't Easy to Remove the GIL. artima.com (10 сентября 2007). Дата обращения: 3 марта 2021. Архивировано 6 июня 2019 года.
 Python-Dev] Reworking the GIL. Дата обращения: 7 декабря 2010. Архивировано 10 июня 2011 года.
 PEP 703 – Making the Global Interpreter Lock Optional in CPython | peps.python.org. Дата обращения: 8 октября 2023. Архивировано 13 октября 2023 года.
 Python 3000 FAQ. Дата обращения: 8 августа 2007. Архивировано 9 ноября 2020 года.
 multiprocessing — Process-based parallelism. Python documentation. Дата обращения: 9 октября 2023. Архивировано 9 октября 2023 года.
 perlthrtut — perldoc.perl.org. Дата обращения: 10 апреля 2008. Архивировано 22 мая 2008 года.
 zephyrfalcon.org :: labs :: 10 Python pitfalls. Архивировано из оригинала 10 августа 2013 года.
 Reeta Sahoo, Gagan Sahoo. Computer Science with Python. — New Delhi: New Saraswati House India Pvt Ltd, 2016. — С. 3.35—3.36. — 458 с. — ISBN 978-93-5199-980-5. Архивировано 22 января 2021 года.
 Luciano Ramalho. Python tuples: immutable but potentially changing - O'Reilly Radar (англ.). radar.oreilly.com. O'Reilly (15 октября 2014). Дата обращения: 16 января 2021. Архивировано 16 января 2021 года.
 8. Compound statements — Python 3.7.2 documentation. docs.python.org. Дата обращения: 5 февраля 2019. Архивировано 27 ноября 2019 года.
 Built-in Types. Python documentation. Дата обращения: 9 октября 2023. Архивировано 14 июня 2020 года.
 Obi Ike-Nwosu. Read Inside The Python Virtual Machine | Leanpub. Inside The Python Virtual Machine. leanpub.com. Дата обращения: 23 марта 2021. Архивировано 29 января 2021 года.
 Получено с помощью dis.dis('print("Hello World!")').
 К. Рейт, Т. Шлюссер, 2017, p. 23.
 Python for S60 — OpenSource. Архивировано 6 августа 2009 года.
 IronPython. Дата обращения: 24 июля 2007. Архивировано 18 августа 2006 года.
 Python for .NET. Дата обращения: 10 февраля 2007. Архивировано 16 февраля 2007 года.
 tinypy. Дата обращения: 21 августа 2008. Архивировано 18 сентября 2008 года.
 MicroPython. Дата обращения: 4 июня 2014. Архивировано 6 июня 2014 года.
 Сайт проекта Brython. Дата обращения: 6 ноября 2014. Архивировано 20 октября 2014 года.
 Сайт проекта QPython. Дата обращения: 3 февраля 2015. Архивировано 4 февраля 2015 года.
 PyPy[coding-guide]. Дата обращения: 24 июля 2007. Архивировано из оригинала 7 июля 2007 года.
 PyPy carbonpython. Дата обращения: 24 июля 2007. Архивировано из оригинала 12 сентября 2007 года.
 Cython: C-Extensions for Python. Дата обращения: 28 июля 2007. Архивировано 11 августа 2007 года.
 Nuitka the Python Compiler — Nuitka the Python Compiler documentation. nuitka.net. Дата обращения: 9 октября 2023. Архивировано 3 сентября 2022 года.
 Архивированная копия. Дата обращения: 1 июня 2006. Архивировано из оригинала 4 августа 2018 года.
 bpython interpreter. Дата обращения: 17 февраля 2011. Архивировано 11 мая 2011 года.
 IDLE. Python documentation. Дата обращения: 9 октября 2023. Архивировано 4 июня 2020 года.
 PyDev - Python IDE for Eclipse (англ.). Eclipse Plugins, Bundles and Products - Eclipse Marketplace. Дата обращения: 9 октября 2023. Архивировано 18 октября 2023 года.
 KDevelop Python Support (англ.). KDE Applications. Дата обращения: 9 октября 2023. Архивировано 4 октября 2023 года.
 Python in Visual Studio Code (англ.). code.visualstudio.com. Дата обращения: 9 октября 2023. Архивировано 18 октября 2023 года.
 Visual Studio Python IDE - Python Development Tools for Windows (амер. англ.). Visual Studio. Дата обращения: 9 октября 2023. Архивировано 2 октября 2023 года.
 Васильев Денис Алексеевич. Методические особенности изучения языка Python школьниками // Символ науки. — 2017. — № 1. Архивировано 21 июля 2021 года.
 Mark Lutz. Learning Python: Powerful Object-Oriented Programming (англ.). — O'Reilly Media, Inc., 2009-10-06. — P. 7—8. — 1218 p. — ISBN 978-1-4493-7932-2. Архивировано 10 апреля 2021 года.
 Cruz, Josef A Jr Programmer Asked Me Why Google and YouTube Use Python (англ.). Medium (7 июня 2022). Дата обращения: 9 октября 2023. Архивировано 11 июня 2022 года.
 Thank you, Guido (англ.). blog.dropbox.com. Дата обращения: 9 октября 2023. Архивировано 16 февраля 2021 года.
 Jukka Lehtosalo. Our journey to type checking 4 million lines of Python (англ.). dropbox.tech. Dropbox (5 сентября 2019). Дата обращения: 22 сентября 2020. Архивировано 22 сентября 2020 года.
 Python in production engineering. Дата обращения: 21 января 2017. Архивировано 2 февраля 2017 года.
 What Powers Instagram: Hundreds of Instances, Dozens of Technologies. Дата обращения: 21 января 2017. Архивировано 9 июня 2021 года.
 Grumpy: Go running Python! Архивировано 20 января 2017 года. — статья в Google Open Source Blog
 Christina Cardoza (2021-02-12). "Google recommits to the Python ecosystem". SD Times. Архивировано 25 февраля 2021. Дата обращения: 4 апреля 2021.
 "Welcoming Google as a Visionary Sponsor of the PSF". News from the Python Software Foundation. 2021-02-11. Архивировано 9 апреля 2021. Дата обращения: 4 апреля 2021.
 "Google Cloud финансирует экосистему Python". Издательство «Открытые системы». 2021-03-02. Архивировано 9 июня 2021. Дата обращения: 4 апреля 2021.
 Eilif Muller, James A. Bednar, Markus Diesmann, Marc-Oliver Gewaltig, Michael Hines. Python in neuroscience (англ.) // Frontiers in Neuroinformatics. — 2015. — 14 April (vol. 9). — ISSN 1662-5196. — doi:10.3389/fninf.2015.00011. Архивировано 30 ноября 2020 года.
 Scripting & Extending Blender : Introduction (англ.). Blender Manual. Blender. Дата обращения: 21 сентября 2020. Архивировано 21 сентября 2020 года.
 Python Scripting (англ.). www.sidefx.com. Дата обращения: 27 сентября 2020. Архивировано 29 сентября 2020 года.
 Building a plugin for QGIS (англ.). Geographic Informations Systems (GIS) Program. National Center for Atmospheric Research. Дата обращения: 23 сентября 2020. Архивировано 23 сентября 2020 года.
 Jonathan Thomas. OpenShot Video Editor for Windows, Mac, and Linux (англ.). Kickstarter (4 марта 2020). Дата обращения: 23 сентября 2020. Архивировано 23 сентября 2020 года.
 Using GNS3 with Fedora (амер. англ.). Fedora Magazine (28 августа 2019). Дата обращения: 22 сентября 2020. Архивировано 1 октября 2020 года.
 Ultimaker Cura GitHub. Дата обращения: 19 сентября 2020. Архивировано 17 сентября 2020 года.
 natol Locker. 2020 Best 3D Printer Slicer Software (англ.). All3DP (2 января 2020). — «The list is sorted by popularity (via Alexa rank)». Дата обращения: 24 сентября 2020. Архивировано 13 августа 2020 года.
 Peter Jurica, Cees Van Leeuwen. OMPC: an open-source MATLAB®-to-Python compiler (англ.) // Frontiers in Neuroinformatics. — 2009. — Т. 3. — ISSN 1662-5196. — doi:10.3389/neuro.11.005.2009. Архивировано 29 ноября 2020 года.
 Veusz Development (англ.). Veusz. Github Pages. Дата обращения: 2 октября 2020. Архивировано 2 октября 2020 года.
 Fisher, M. Plot with a purpose : [арх. 2 октября 2020] // Writing for Conservation : [англ.] : [арх. 1 ноября 2020]. — Fauna & Flora International, Cambridge, 2019.
 The Astropy Collaboration, A. M. Price-Whelan, B. M. Sipőcz, H. M. Günther, P. L. Lim, S. M. Crawford, S. Conseil, D. L. Shupe, M. W. Craig, N. Dencheva. The Astropy Project: Building an Open-science Project and Status of the v2.0 Core Package : [англ.] : [арх. 3 октября 2020] // The Astronomical Journal. — 2018. — Т. 156, вып. 3 (24 August). — С. 123. — ISSN 1538-3881. — doi:10.3847/1538-3881/aabc4f.
 Ryabtsev, Alexander 8 Reasons Why Python is Good for Artificial Intelligence and Machine Learning (амер. англ.). Software Development Blog & IT Tech Insights | Django Stars (11 марта 2019). Дата обращения: 9 октября 2023. Архивировано 18 октября 2023 года.
 The Google Mock class generator README. Google Test. github.com. Дата обращения: 3 февраля 2019. Архивировано 9 июня 2021 года.
 Noah Gift, Jeremy M. Jones. Python for Unix and Linux System Administration. — ISBN 978-0-596-51582-9.

  Changed in both 1963 version and 1965 draft


Printable characters
Codes 20hex to 7Ehex, known as the printable characters, represent letters, digits, punctuation marks, and a few miscellaneous symbols. There are 95 printable characters in total.[n]

Code 20hex, the "space" character, denotes the space between words, as produced by the space bar of a keyboard. Since the space character is considered an invisible graphic (rather than a control character)[3]: 223 [10] it is listed in the table below instead of in the previous section.

Code 7Fhex corresponds to the non-printable "delete" (DEL) control character and is therefore omitted from this chart; it is covered in the previous section's chart. Earlier versions of ASCII used the up arrow instead of the caret (5Ehex) and the left arrow instead of the underscore (5Fhex).[6][50]
Скажу на своём примере ТАК ОНО И ЕСТЬ

У этого термина существуют и другие значения, см. ASCII (значения).
Запрос «ISO 646» перенаправляется сюда. На эту тему нужно создать отдельную статью.
ASCII

Орган стандартизации	Национальный институт стандартов США
Логотип Викисклада Медиафайлы на Викискладе
ASCII (англ. American standard code for information interchange, [ˈæs.ki][1]) — стандарт кодирования знаков латинского алфавита, цифр, некоторых специальных знаков и управляющих последовательностей, принятый в 1963 году Американской ассоциацией стандартов как основной способ представления текстовых данных в ЭВМ[2].


Содержание
1	Описание
2	История
3	Структурные свойства таблицы
3.1	Наложение символов
3.2	Национальные варианты ASCII
3.3	Управляющие символы
4	Представление ASCII в ЭВМ
4.1	USASCII-8
5	Ввод с клавиатуры
6	См. также
7	Примечания
8	Литература
9	Ссылки
Описание

Таблица ASCII
Стандарт ASCII представляет собой семиразрядный код без рекомендаций относительно контроля чётности, содержащий 128 кодовых позиций[3]. Таблица ASCII определяет коды для символов:

десятичных цифр;
латинского алфавита;
национального алфавита[⇨];
знаков препинания;
управляющих символов.
История
С развитием вычислительной техники и языков программирования возможностей телеграфного кода ITA2 стало не хватать, что вынуждало производителей ЭВМ создавать расширения для ITA2 или же свои собственные коды. Кроме того, для записи на перфокарты использовались различные варианты кода Холлерита. Таким образом, к началу 1960-х годов существовало достаточно большое количество кодировок латиницы, используемых как для передачи по линиям связи, так и для записи на магнитную ленту, перфоленту и перфокарты, — таких, как ITA2, FIELDATA, различные варианты BCDIC и т. д.[4], причём даже в рамках одной и той же кодировки один код мог соответствовать различным символам в зависимости от модели и назначения устройства. Чтобы решить эту проблему, 4 августа 1960 года был создан комитет X3.2 (как часть комитета X3, сформированного 13 января того же года)[5], в который вошли представители компаний IBM (в частности, Боб Бемер[англ.]), AT&T, Bell Labs и других. Работа по созданию ASCII началась 6 октября 1960 года[5], и почти 3 года спустя, 17 июня 1963 года, была опубликована её первая редакция (ASA X3.4-1963)[6].

ASCII обеспечивала кодирование символов 7-ю битами (27 = 128 символов), а 8-й бит (старший в октете) использовался для контроля ошибок. В первой редакции ASCII отсутствовали строчные буквы, а область из 28 позиций в колонках (группах по 16 символов) № 6 и № 7 (считая с 0) была зарезервирована для дальнейшего использования[7][8]. Велись споры о том, использовать эту область для добавления строчных букв или же управляющих символов.

В 1965 году была подготовлена новая редакция ASCII (ASA X3.4-1965), которая, однако, так и не была опубликована и не использовалась нигде, кроме терминалов IBM 2260/2848 и принтеров IBM 1053 (да и то без строчных букв и некоторых других символов)[9]. Следующая редакция ASCII (USAS X3.4-1967) была опубликована 5 июля 1967 года и определила окончательную кодовую таблицу[10]. Новые редакции ASCII продолжили выходить и далее (USAS X3.4-1968, ANSI X3.4-1977, ANSI X3.4-1986), однако кодовую таблицу изменения в них уже не затрагивали.

В целом, внедрение ASCII долгое время саботировалось компанией IBM, отдававшей предпочтение собственной кодировке EBCDIC, являющейся дальнейшим развитием кодировки BCDIC, также созданной IBM и основанной, в свою очередь, на коде Холлерита[6].

Со временем стали появляться производные кодировки с задействованным 8-м битом (28 = 256 символов), первые 128 символов которых совпадают с ASCII (например, КОИ-8, ISO 8859). Подобные ASCII-совместимые 8-битные кодировки стали называться «расширенной ASCII», а сама ASCII — восприниматься как их первая (младшая) половина.

Структурные свойства таблицы
Первая версия ASCII содержала 36 управляющих символов, 10 арабских цифр, 26 заглавных латинских букв и 27 специальных символов, которые подразделяли на группы[11]:

8 знаков препинания (.,:;!?'");
5 знаков для финансовых и биржевых операций (#$%&@);
2 пары скобок (()[]);
8 математических символов (+-*/\=<>)[12];
2 стрелки для блок-схем: (↑←).
Cимвол «подушка» (⌑), имевшийся в наборе доступных символов многих печатающих устройств того времени и присутствовавший в кодировках BCDIC, Fieldata[англ.] и т.д., ни в одну версию ASCII не вошёл.

В версии от 67 года был пересмотрен набор управляющих символов (сокращён до 33), убраны стрелки, но добавлены строчные буквы и семь дополнительных символов: ^_`{|}~, после чего таблица приняла окончательный вид[13]:

#Управляющие символы (0x00…0x1F) — предназначены для управления передачей и выводом текста на терминал[15]. Группа начинается символом NUL (0x00), означающим незаписанный участок, например перфоленты, и этот символ должен игнорироваться при выводе на экран или на печать[16]. За пределами группы, в конце таблицы также располагается символ DEL 0x7F — участок перфоленты, пробитый целиком, означающий, что символ, который здесь располагался был удалён, а значит его также следует пропустить[16][17];
Сами управляющие символы основной группы изначально были разделены на 4 подгруппы: управление передачей (0x01..0x07), форматирование (0x08..0x0F), управление устройством (0x10..0x17) и разделители потоков данных (0x18..0x1F)[18]. В версии 67 года этот порядок был отчасти нарушен из-за переноса дополнительных управляющих символов
Группа цифр и основных знаков препинания — делится на две подгруппы, соответствующие верхнему и нижнему регистру.
Группа начинается с пробела 0x20 — было принято решение, что пробел должен считаться печатным, а не управляющим символом, но при этом располагаться в самом начале — для корректной работы алгоритмов сортировки[19];
Цифры идут во второй подгруппе — такое решение было принято для того, чтобы их легко было преобразовать в Двоично-десятичный код, убрав старшие 4 бита — и обратно, прибавив префикс 00112: например цифра 5 имеет код 0011 01012. По этой причине цифры невозможно было разместить в первой подгруппе, так как в ней первым идёт пробел[20]. Другая причина расположения цифр в этой группе — было необходимо, чтобы при сортировке большинство знаков препинания располагались раньше цифр и букв[21];
9 символов после пробела — знаки препинания (!"#$%&'()), идущие в том порядке, в котором их располагали на пишущих машинках тех лет[11], за исключением скобок, которые располагались на позициях 0x28 и 0x29, так как над цифра «0» оказалась под кодовой позицией пробела[22]. Однако на электромеханических пишущих машинах, в частности IBM Selectric расположение этих знаков было иным, что связано с наличием у некоторых из них механизма дозирования силы удара, который требовал расположения на одной клавише знаков, близких по оптической плотности. Окончательно отличное от таблицы ASCII положение этих знаков было закреплено в IBM PC.
Символы точки и запятой в пишущих машинках тех лет дублировались в обоих регистрах. В ASCII было решено не дублировать знаки, а заполнить освободившееся место символами < и >[23]. Знак вопроса также спарен со знаком косой черты как на пишущих машинках[11].
Группа заглавных букв начинается с символа «@» (0x40) — предполагалось, что для машин, поставляемых во Францию и Италию этот символ будет заменяться на «À». Также, положение заглавных латинских букв и цифр было выбрано из соображений совместимости с шестибитной кодировкой DEC SIXBIT. Три позиции после заглавных букв (0x5B, 0x5C и 0x5D) также предполагалось заменять при необходимости на местные символы.
Группа строчных букв появилась в ASCII-1965, но была пересмотрена в ASCII-1967. Все строчные буквы расположены так же, как в соответствующие заглавные, что позволяет переключать регистр, изменяя лишь старший бит. Позиции 0x60, 0x7B, 0x7C и 0x7D также предполагалось менять на местные при необходимости. В редакции 65-го года был добавлен символ логического отрицания (¬,0x7C), который в версии 67-го года был убран.
Важная особенность — ASCII, в отличие, к примеру, от ITA2, не использует переключения регистров[21]. Хотя переключение регистров для заглавных букв могло бы уменьшить требуемое количество бит, и соответственно увеличить скорости передачи и уменьшить требуемое место на носителях, однако повышает риск не прочесть сообщение при повреждении[24]. Было решено отказаться от использования регистров и уместить все символы в 7 бит[21]. Тем не менее, в набор включены символы переключения регистра (ESC, SI и SO) для целей дальнейшего расширения[24].

Наложение символов
С помощью символа Backspace (BS) (возврат на один символ) на принтере можно печатать один символ поверх другого. В ASCII таким же способом можно добавить к буквам диакритические знаки, например:

старых шрифтах — апостроф «'» рисовался с наклоном влево (сравните: «`» и «´»), а тильда «~» — была сдвинута вверх (сравните: «~» и «˜»), так что они как раз подходили на роль символов акут «´» и «тильда сверху».

Если в одной позиции дважды напечатать один и тот же символ — получится жирный символ; если в одной позиции напечатать символ, а затем подчёркивание «_» — получится подчёркнутый символ:

a BS a → a
a BS _ → a
Эта техника до сих пор используется, например, в справочной системе man.

Национальные варианты ASCII
Стандарт ISO 646 (ECMA-6) предусматривает возможность размещения в ASCII национальных символов. Для этого предлагается заменять символы «@», «[», «\», «]», «^», «`», «{», «|», «}», «~». Также на месте знака решётки «#» может быть размещён символ фунта «£», а на месте символа доллара «$» — знак валюты «¤». Вариант ASCII, не содержащий национальных символов, называется «US-ASCII» или «international reference version».

Для некоторых языков (с нелатинской письменностью: русский, греческий, арабский, иврит и др.) существовали более радикальные модификации ASCII:

В одной из таких модификаций — на месте строчных латинских букв размещались национальные символы (для русского и греческого — заглавные буквы).
В другой модификации — предусматривалось переключение между US-ASCII и национальным вариантом; переключение осуществлялось «на лету»: с помощью символов «SO» (англ. shift out) и «SI» (англ. shift in); в этом случае — в национальном варианте можно было полностью заменить латинские буквы на национальные символы. См. также: КОИ-7.
Впоследствии оказалось удобнее использовать 8-битовые кодировки (кодовые страницы), в которых нижнюю половину кодовой таблицы (0—127) занимают символы US-ASCII, а верхнюю (128—255) — дополнительные символы, включая набор национальных символов. Таким образом, верхняя половина таблицы ASCII (до повсеместного внедрения Юникода) активно использовалась для представления локализированных символов, букв местного языка. Отсутствие единого стандарта размещения кириллических символов в таблице ASCII доставляло множество проблем с кодировками (КОИ-8, Windows-1251 и др.). Носители других языков с нелатинской письменностью тоже страдали из-за наличия нескольких разных кодировок.

Первые 128 символов стандарта Юникод совпадают с соответствующими символами US-ASCII.

В первой версии стандарта ASCII (1963 год) — в позициях 0x5e (94) и 0x5f (95) располагались символы «стрелка вверх» и «стрелка влево», соответственно. Стандарт ECMA-6 (1965 год) заменил их на знак вставки и символ подчёркивание «_», соответственно.

В Советском Союзе стандарт был утвержден в виде таблицы международной ссылочной версии кода КОИ-7 Н0 ГОСТ 27463-87 (СТ СЭВ 356-86) «Системы обработки информации. 7-битные кодированные наборы символов».[25]

Управляющие символы
Основная статья: Управляющие символы
Таблица ASCII создавалась для обмена информацией по телетайпу. В набор были включены непечатаемые символы, используемые как команды для управления телетайпом. Аналогичные команды применялись и в других докомпьютерных средствах обмена сообщениями (азбука Морзе, семафорная азбука), учитывая специфику устройства. Большинство управляющих символов ASCII вскоре утратили своё назначение и в современных компьютерных системах не используются.

Примечание: далее в списке — коды символов записаны в шестнадцатеричной системе счисления, после названий символов.

NUL, 00 — null («пустой»). Символ null всегда игнорировался. На перфолентах, цифра «1» обозначалась отверстием, а цифра «0» — отсутствием отверстия. Участки перфоленты, на которых не была записана информация — не содержали отверстий (то есть содержали символы null); такие участки располагались в начале и в конце ленты. Символ null по сей день используется во многих языках программирования (как признак конца строки) и обозначается «\0» (термин «строка» обозначает последовательность символов). В некоторых операционных системах, null — последний символ любого текстового файла.
Сообщения, передаваемые по каналу связи, делились на две части:

Заголовок;
Текст.
«Заголовок» содержал: адреса отправителя и получателя, контрольную сумму и т. п.; мог размещаться до «текста» или после. Термином «текст» называлась часть сообщения, предназначенная для печати.

Символ	Код HEX	Расшифровка	Перевод	Описание
SOH	01	start of heading	начало «заголовка»	Символ начала заголовка (SOH) отмечает разделение данных, не относящийся к данным: часть потока, содержащую адреса и другие служебные данные.
STX	02	start of text	начало «текста»	Включить печатающее устройство (телетайп). Текст для печати располагался между символами «STX» и «ETX».
ETX	03	end of text	конец «текста»	Выключить печатающее устройство (телетайп). В наши дни код «03» используется для отправки процессу сигнала «SIGINT» (сигнал-прерывание: англ. signal interrupt) и может быть набран нажатием комбинации клавиш Ctrl+C. Получив такой сигнал, процесс должен завершить работу[англ.].
EOT	04	end of transmission	конец передачи	Символ используется эмуляторами терминалов в значении «Конец файла» (EOF: англ. end of file) и может быть отправлен нажатием комбинации клавиш Ctrl+D. Получив такой сигнал, эмулятор терминала определит процесс, который в данный момент работает с терминалом, и установит в стандартном потоке ввода этого процесса (stdin: англ. standard input stream) флаг «Конец файла». В результате процесс прекратит чтение[англ.] stdin и начнёт обработку прочитанных данных.
ENQ	05	enquire	«Прошу подтверждения!»	
ACK	06	acknowledgement	«Подтверждаю!»	Символ «NAK» означает обратное: «Не подтверждаю!».
BEL	07	bell	звуковой сигнал: звонок	Символ часто обозначается как «\a» и используется для подачи звукового сигнала.
BS	08	backspace	возврат на один символ	Передаётся при нажатии клавиши ← Backspace.
TAB	09	tabulation	горизонтальная табуляция	Обозначается как «\t». Иногда называется «HT» (от англ. horizontal tabulation).
LF	0A	line feed	перевод строки	Команда для опускания каретки печатающего устройства на одну строку вниз. Обозначение конца строки различается в семействах операционных систем:
в «UNIX» — одиночный символ «LF»;
в ранних версиях MacOS и некоторых ОС домашних компьютеров — одиночный символ «CR»;
в «Windows» — последовательность символов «CR LF».
Во многих языках программирования символ обозначается как «\n». Многие терминалы 70-80-х годов содержали переключатель поведения клавиши ↵ Return, позволяющий посылать при нажатии на неё либо последовательность CR LF, либо только CR.

VT	0B	vertical tab	вертикальная табуляция	
FF	0C	form feed	«прогон страницы», новая страница	Команда для принтера: продолжить печать с начала следующего листа.
CR	0D	carriage return	возврат каретки	Команда для принтера: продолжить печать с начала текущей строки (не с новой строки). Во многих языках программирования — символ «CR» обозначается как «\r». В операционной системе «Mac» — символ «CR» (в прошлом) обозначал конец строки текстового файла. С клавиатуры символ «CR»может быть введён нажатием комбинации клавиш: Ctrl+M.
SO	0E	shift out	«Переключиться на другую ленту (кодировку)»	Другая лента обычно была окрашена в красный цвет. В дальнейшем символ использовался для переключения на национальную кодировку.
SI	0F	shift in	«Переключиться на исходную ленту (кодировку)»	Команда для выполнения действия, обратного действию «SO».
DLE	10	data link escape	«Экранирование канала данных»	Любые символы, следующие после «DLE», должны восприниматься как данные, а не как управляющие символы.
DC1	11	device control 1	Первый символ управления устройством	Команда включить устройство чтения перфоленты.
DC2	12	device control 2	Второй символ управления устройством	Команда включить перфоратор.
DC3	13	device control 3	Третий символ управления устройством	Команда выключить устройство чтения перфоленты.
DC4	14	device control 4	Четвёртый символ управления устройством	Команда выключить перфоратор.
NAK	15	negative acknowledgment	«Не подтверждаю!»	Обратно символу «ACK».
SYN	16	synchronization		Этот символ передавался, когда (для синхронизации) было необходимо что-нибудь передать.
ETB	17	end of text block	конец текстового блока	Иногда текст (по техническим причинам) разбивался на блоки.
CAN	18	cancel	«Отмена»	Отмена того, что было передано ранее.
EM	19	end of medium	«Конец носителя»	Кончилась перфолента, бумага — и т. п.
SUB	1A	substitute	«Подставить»	Символ ставится:
На месте символа, значение которого было потеряно (или испорчено) при передаче;
Перед символом, для интерпретации которого нужно переключиться на дополнительный набор символов;
Перед символом, печатать который нужно другим цветом...
В настоящее время символ вставляется нажатием комбинации клавиш Ctrl+Z и используется для обозначения конца файла в операционных системах «DOS» и «Windows».

ESC	1B	escape		Знак того, что символ, следующий после «ESC», имеет какое-то другое (отличное от определённого в ASCII) значение. Обычно после символа «ESC» следуют управляющие последовательности; в операционной системе «DOS» они реализуются драйвером «ANSI.SYS».
DEL	7F	delete	стереть последний символ	Символом «DEL» (состоящим в двоичном коде из всех единиц) можно было «забить» любой символ. Устройства и программы игнорировали «DEL» так же, как и «NUL».
Код этого символа происходит из первых текстовых процессоров с памятью на перфоленте: в них удаление символа происходило «забиванием» его кода дырочками (обозначавшими логические единицы).

Поддерживалось разделение данных на 4 уровня:

Символ	Код	Расшифровка	Перевод	Описание
FS	1C	file separator	разделитель файлов	сообщение могло состоять из файлов
GS	1D	group separator	разделитель групп	файлы могли состоять из групп
RS	1E	record separator	разделитель записей	группы могли состоять из записей
US	1F	unit separator	разделитель юнитов	записи могли состоять из юнитов
Представление ASCII в ЭВМ
На подавляющем большинстве современных компьютеров, минимально адресуемая единица памяти — байт (размером в 8 бит); поэтому там используются 8-битные, а не 7-битные символы. Обычно символ ASCII расширяют до 8 бит, просто добавляя один нулевой бит в качестве старшего.

USASCII-8
На компьютерах IBM/360 применялся другой метод: 6-й бит (если первым считать самый младший бит) перемещается в 7-й, а бывший 7-й «раздваивается» и копируется и в 8-й бит, и в 6-й[26]. Такую кодировку называли USASCII-8[27]

Ввод с клавиатуры
Расположение символов ASCII на клавиатуре согласно ANSI X4.14-1971: символы верхнего регистра вводятся в сочетании с клавишей ⇧ Shift, а управляющие символы — с Ctrl,[28]

!
1"
2#
3$
4%
5&
6'
7(
8)
9
0=
-~ 
^¦ 
\BSESCQ 
qW 
wE 
eR 
rT 
tY 
yU 
uI 
iO 
oP 
p` 
@{ 
[_ 
CtrlA 
aS 
sD 
dF 
fG 
gH 
hJ 
jK 
kL 
l+
;
:} 
]CRShiftZ 
zX 
xC 
cV
vB 
bN 
nM 
m<
,>
.?
/ShiftLF
Коды ASCII используются в программировании как промежуточные кроссплатформенные коды нажатых клавиш (в противовес скан-кодам IBM PC и прочим внутренним кодам). Для раскладки клавиатуры QWERTY — таблица кодов выглядит так, как показано в следующей таблице[29].

27112113114115116117118119120121122123441451919249505152535455565748189187845363314411110610998187698284898573798021922113463534103104105107206583687071727475761862222201001011021622690886786667877188190191163897989913179118321892931737403996110

	
This article needs to be updated. Please help update this article to reflect recent events or newly available information. (February 2022)

A large group of fursuit owners at a furry convention
The furry fandom is a subculture interested in anthropomorphic animal characters.[1][2][3] Some examples of anthropomorphic attributes include exhibiting human intelligence and facial expressions, speaking, walking on two legs, and wearing clothes. The term "furry fandom" is also used to refer to the community of people who gather on the Internet and at furry conventions.[4]

History
The furry fandom has its roots in the underground comix movement of the 1970s, a genre of comic books that depict explicit content.[citation needed] In 1976, a pair of cartoonists created the amateur press association Vootie, which was dedicated to animal-focused art. Many of its featured works contained adult themes, such as "Omaha" the Cat Dancer, which contained explicit sex.[5][6] Vootie grew a small following over the next several years, and its contributors began meeting at science fiction and comics conventions.

According to fandom historian Fred Patten, the concept of furry originated at a science fiction convention in 1980,[7] when a character drawing from Steve Gallacci's Albedo Anthropomorphics started a discussion of anthropomorphic characters in science fiction novels. This led to the formation of a discussion group that met at science fiction conventions and comics conventions.

The specific term furry fandom was being used in fanzines as early as 1983, and had become the standard name for the genre by the mid-1990s, when it was defined as "the organized appreciation and dissemination of art and prose regarding 'Furries', or fictional mammalian anthropomorphic characters".[8] However, fans consider the origins of furry fandom to be much earlier, with fictional works such as Kimba, the White Lion, released in 1965, Richard Adams' novel Watership Down, published in 1972 (and its 1978 film adaptation), as well as Disney's Robin Hood as oft-cited examples.[7] Internet newsgroup discussion in the 1990s created some separation between fans of "funny animal" characters and furry characters, meant to avoid the baggage that was associated with the term "furry".[9]

During the 1980s, furry fans began to publish fanzines, developing a diverse social group that eventually began to schedule social gatherings. By 1989, there was sufficient interest to stage the first furry convention.[10] The convention was called Confurence 0, and it was held at the Holiday Inn Bristol Plaza in Costa Mesa, California.[11] Once the Internet became accessible to the general population in the 1990s, it became the most popular means for furry fans to socialize.[12] The newsgroup alt.fan.furry was created in November 1990, and virtual environments such as MUCKs also became popular places on the internet for fans to meet and communicate.[13]

Inspiration
Allegorical novels, including works of both science fiction and fantasy, and cartoons featuring anthropomorphic animals are often cited as the earliest inspiration for the fandom.[7] A survey conducted in 2007 suggested that, when compared with a non-furry control group, a higher proportion of those self-identifying as furries liked cartoons "a great deal" as children and recalled watching them significantly more often, as well as being more likely to enjoy works of science fiction than those outside of the community.[14]

Activities
According to a survey from 2008, most furries believe that visual art, conventions, literature, and online communities are strongly important to the fandom.[15] The furry fandom is male-dominated, with surveys reporting around 80% male respondents.[16][15][17]

Crafts

Sculpture at Further Confusion
Fans with craft skills create their own plush toys, sometimes referred to as plushies, and also build elaborate costumes called fursuits,[18] which are worn for fun or to participate in parades, convention masquerades, dances, or fund-raising charity events (as entertainers).[19] Fursuits range from designs featuring simple construction resembling some entertainment and sports mascots[14] to those with more sophisticated features such as moving jaw mechanisms, animatronic parts, prosthetic makeup, and other features. Fursuits range in price from $500, for mascot-like designs, to an upwards of $10,000 for models incorporating animatronics.[20] While about 80% of furries do not own a full fursuit,[16][15][14] often citing their expensive cost as the decisive factor,[14] a majority of them hold positive feelings towards fursuiters and the conventions in which they participate.[16][15] Some fans may also wear "partial" suits consisting simply of ears and a tail, or a head, paws, and a tail.[14] A much larger proportion of individuals who attend conventions own a full or partial fursuit—45%, according to a survey done at Anthrocon 2018—which has been attributed to convention attendees' generally higher likelihood to be able to afford to buy a fursuit if they can afford convention travel expenses.[21]

Furry fans also pursue puppetry, recording videos and performing live shows such as Rapid T. Rabbit and Friends and the Funday PawPet Show, and create furry accessories, such as ears or tails.[22]

Role-playing

Main article: Fursona

Cartoon anthropomorphic vixen, an example of a furry character
Anthropomorphic animal characters created by furry fans, known as fursonas,[23] are used for role-playing in MUDs,[24] on internet forums, or on electronic mailing lists.[25] A variety of species are employed as the basis of these personas, although many furry fans (for example over 60% of those surveyed in 2007) choose to identify themselves with carnivorans.[26][27] The longest-running online furry role-playing environment is FurryMUCK, which was established in 1990.[28] Many furry fans had their first exposure to the fandom come from multiplayer online role-playing games.[29][unreliable source?] Another popular online furry social game is called Furcadia, created by Dragon's Eye Productions. There are also several furry-themed areas and communities in the virtual world Second Life.[30]

Conventions
Main article: Furry convention

Furry fans prepare for a race at Midwest FurFest 2006.
Sufficient interest and membership has enabled the creation of many furry conventions in North America and Europe. A furry convention is for the fans to get together to buy and sell artwork, participate in workshops, wear costumes, and socialize.[31] Anthrocon, in 2008, the largest furry convention with more than 5,861 attendees,[32] is estimated to have generated approximately $3 million to Pittsburgh's economy that year.[33] Another convention, Further Confusion, held in San Jose each January, closely follows Anthrocon in scale and attendance. $470,000 was raised in conventions for charity from 2000 to 2009.[34] As of December 2022, Midwest FurFest is the world's largest furry convention.[35][36][37] It had a self-reported 2019 attendance of 11,019.[38]

The first known furry convention, ConFurence,[7] is no longer held; Califur has replaced it, as both conventions were based in Southern California. A University of California, Davis survey suggested that about 40% of furries had attended at least one furry convention.[16]

Websites and online communities
The internet contains a multitude of furry websites and online communities, such as art community websites Fur Affinity, Inkbunny, SoFurry and Weasyl; and WikiFur, a collaborative furry wiki.[39]

There are several webcomics featuring animal characters created by or for furry fans; as such, they may be referred to as furry comics. One such comic, T.H.E. Fox, was first published on CompuServe in 1986, predating the World Wide Web by several years,[40] while another, Kevin and Kell by Bill Holbrook, has been awarded both a Web Cartoonists' Choice Award and an Ursa Major Award.[41][42]

The Ursa Major Award is given in the field of furry fandom works and are the main awards in the field of anthropomorphism.[43][44] It has been awarded to many comics and animated series over the years, including Helluva Boss (2021),[45][46] Beastars (2020),[47][48] while BNA: Brand New Animal (2020),[49][47] Centaurworld (2021),[45] Aggretsuko (2020),[49][47] Kipo and the Age of Wonderbeasts (2020),[49][47] and Odd Taxi (2021).[45][47] and Helluva Boss episodes such as "Murder Family" (2020),[49][47] "Loo Loo Land" (2020),[49][47] and "The Circus"(2022)[50] were nominated for the "Best Dramatic Series" category. Some of these series also feature LGBT characters, such as Helluva Boss[51][52] and Kipo and the Age of Wonderbeasts.[53][54][55] In a review of Helluva Boss in 2022, Brendan Kachel of the furry site Flayrah, wrote that while Loona is the "only one character who is truly furry" and a "furry sex goddess", they would still "recommend furries at least try the series."[56]

IT industry and tech
It is often suggested that "furries run the internet", as members of the furry community are overrepresented in the IT industry, often in senior or other important positions.[57][58]

Furry lifestyle
See also: Shapeshifting and Otherkin
The phrases furry lifestyle and furry lifestyler first appeared in July 1996 on the newsgroup alt.fan.furry during an ongoing dispute within the online community. The Usenet newsgroup was created to accommodate discussion beyond furry art and literature, and to resolve disputes concerning what should or should not be associated with the fandom; its members quickly adopted the term furry lifestylers, and still consider the fandom and the lifestyle to be separate social entities. They have defined and adopted an alternative meaning of the word furry specific to this group: "a person with an important emotional/spiritual connection with an animal or animals, real, fictional, or symbolic."[59]

In their 2007 survey, Gerbasi et al. examined what it meant to be a furry, and proposed a taxonomy in which to categorise different "types" of furries. The largest group—38% of those surveyed—described their interest in furry fandom predominantly as a "route to socializing with others who share common interests such as anthropomorphic art and costumes."[60] However they also identified furries who saw themselves as "other than human", or who desired to become more like the furry species which they identified with.[12][14]

Sexual aspects
See also: Yiff
According to four different surveys 14–25% of the fandom members report homosexuality, 37–52% bisexuality, 28–51% heterosexuality, and 3–8% other forms of alternative sexual relationships.[16][17][61][62] Approximately half of the respondents reported being in a relationship, of which 76% were in a relationship with another member of the furry fandom.[16] Examples of sexual aspects within the furry fandom include erotic art and furry-themed cybersex.[63][64] The term "yiff" is sometimes used to indicate sexual activity or sexual material within the fandom—this applies to sexual activity and interaction within the subculture whether in the form of cybersex or offline.[65][66]

Sexual attraction to furry characters is a polarizing issue. In one survey with 4,300 furry respondents, 37% answered that sexual attraction is important in their furry activities, 38% were ambivalent, and 24% answered that it has little or nothing to do with their furry activities.[62] In an earlier online survey, 33% of furry respondents answered that they have a "significant sexual interest in furry", another 46% stated they have a "minor sexual interest in furry", and the remaining 21% stated they have a "non-sexual interest in furry". The survey specifically avoided adult-oriented websites to prevent bias.[17]

Another survey at a furry convention in 2013 found that 96.3% of male furry respondents reported viewing furry pornography, compared with 78.3% of female; males estimated 50.9% of all furry art they view is pornographic, compared with 30.7% for females. The respondents to the survey had a slight preference for pornographic furry artwork over non-pornographic artwork. 17.1% of males reported that when they viewed pornography it was exclusively or near-exclusively furry pornography, and only about 5% reported that pornography was the top factor that got them into the fandom.[67]

Public perception and media coverage
Early portrayal of the furries in magazines such as Wired,[68] Loaded,[69] Vanity Fair,[70] and the syndicated sex column "Savage Love" focused mainly on the sexual aspect of the furry fandom. Fictional portrayals of the furry fandom have appeared in television shows such as The Simpsons,[71][72] ER,[73] CSI: Crime Scene Investigation,[74] The Drew Carey Show,[75] Sex2K on MTV,[76] Entourage,[77] 1000 Ways to Die,[78] Tosh.0,[79][80] Check It Out! with Dr. Steve Brule,[81] and 30 Rock.[82] Most furry fans claim that these media portrayals are misconceptions,[83][84] while more recent coverage focuses on addressing the myths and stereotypes that have come to be associated with the furry fandom.[85] A reporter attending Anthrocon 2006 noted that "despite their wild image from Vanity Fair, MTV and CSI, furry conventions aren't about kinky sex between weirdos gussied up in foxy costumes", that conference attendees were "not having sex more than the rest of us",[86] and that the furry convention was about "people talking and drawing animals and comic-book characters in sketchbooks."[65] In October 2007, a Hartford Advocate reporter attended FurFright 2007 undercover because of media restrictions. She learned that the restrictions were intended to prevent misinformation, and reported that the scandalous behavior she had expected was not evident.[87] Recent coverage of the furry fandom has been more balanced. According to Ian Wolf, a 2009 article from the BBC entitled "Who are the furries?" was the first piece of journalism to be nominated for an Ursa Major Award, the main award given in the field of anthropomorphism.[12][88][89]

Milwaukee Brewers broadcaster Jim Powell was sharing a hotel with Anthrocon 2007 attendees a day before the convention and reported a negative opinion of the furries.[90] Several downtown Pittsburgh businesses welcome furries during the event, with local business owners creating special T-shirts and drawing paw prints in chalk outside their shops to attract attendees.[91] Dr. Samuel Conway, CEO of Anthrocon, said that "For the most part, people give us curious stares, but they're good-natured curious stares. We're here to have fun, people have fun having us here, everybody wins".[92] Positive coverage was generated following a furry convention that was held in a Vancouver hotel where a number of Syrian refugees were being temporarily housed. Despite some concerns and warnings by staff that there could be a seriously negative culture clash if the two groups interacted, the refugee children were on the whole delighted to meet the convention goers, especially the ones in fursuits, who seemed like cartoon characters come to life.[93][94]

According to Furry survey, about half of furries perceive public reaction to the fandom as negative; less than a fifth stated that the public responded to them more negatively than they did most furries.[15] Furry fans' belief that they will be portrayed as "mainly obsessed with sex" has led to distrust of the media and social researchers.[12]

In addition, the fandom has grown to be such a significant demographic that by 2016, the film company Walt Disney Studios marketed their animated feature film Zootopia in pre-release to the fandom to encourage interest in the film, which proved a major critical and commercial success.[95]

In 2021 and 2022, media coverage in Canada and the United States focused on false rumors about litter boxes in schools being provided for furries, which was part of a cultural backlash amplified by conservative and far-right politicians against transgender accommodations in schools.[96][97][98]

Sociological aspects

Some furry fans create and wear costumes called "fursuits" depicting their characters.
The International Anthropomorphic Research Project (IARP), a team of social scientists from various disciplines led by Plante, Reysen, Roberts, and Gerbasi, has been collecting data on the furry fandom using numerous methodologies. Their 2016 publication collects several peer-reviewed and self-published studies into a single volume.[99][100] Among their findings were that the average adult furry is between 23 and 27 years of age, with more than 75% of furries reporting being 25 years of age or younger, and 88% of adult furries being under the age of 30. Minors were not included in the study for professional ethics reasons. However, IARP estimated that 20% were under the age of 18.[100]: 4–7  67.1% of furries identified themselves as male on the surveys, while 23.3% identified as female. While only 2% of furries identified themselves as transgender, 10% of furries identified themselves as genderqueer/non-binary.[100]: 10–11  83–90% of furries self-identify as White, with small minorities of furries self-identifying as Asian (2–4%), Black (2–3%), and Hispanic (3%).[100]: 7–10  21% of furries consider themselves to be bronies, 44% consider themselves to be anime fans, and 11% consider themselves sport fans.[100]: 32–33  Furries, as a group, are more politically liberal and less religious than the average American or other comparable fan groups such as anime fans,[100]: 18  while still containing contentious groups such as neo-Nazis and alt-right activists whose affiliation is partly in jest and partly in earnest.[101] In terms of religious preference, 23.5% of furries self-identified as Christian, 16.8% as atheist, 16.8% as agnostic, 11.0% as Pagan/Wiccan, 2.4% as Buddhist, 1.2% as Jewish, 1.1% as Deist, 0.9% as Satanist, and 26.2% as "other" (including "participants who had their own belief systems, were undecided, refused to answer, or had uncommon belief systems").[100]: 16  Approximately 70% of adult furries have either completed, or are currently completing post-secondary education.[100]: 12  A Pittsburgh-based researcher has found that up to 15% of furries may have autism spectrum disorder, compared with the about 2% in the general population estimated by the CDC. The 15% figure includes people who may have never received a diagnosis but self-identify as autistic.[102]

One of the most universal behaviors in the furry fandom is the creation of a fursona—an anthropomorphic animal representation or avatar. More than 95% of furries have a fursona. Nearly half of furries report that they have only ever had one fursona to represent themselves; relatively few furries have had more than three or four fursonas; in part, this is due to the fact that, for many furries, their fursonas are a personally significant, meaningful representation of their ideal self. The most popular fursona species include wolves, foxes, dogs, large felines, and dragons. Data suggests that there is generally no association between personality traits and different fursona species.[100]: 50–74  However, furries report different degrees of personality traits when thinking of themselves in their everyday identity compared with their fan identity.[100]: 129–133  Some furries identify as partly non-human: 35% say they do not feel 100% human (compared with 7% of non-furries), and 39% say they would be 0% human if they could (compared with 10% of non-furries).[100]: 78 

Inclusion and belongingness are central themes in the furry fandom: compared with members of other fandoms such as anime or fantasy sports, furries are significantly more likely to identify with other members of their fan community. On average, half of a furry's friends are also furries themselves.[100]: 123–133  Furries rate themselves higher (compared with a comparison community sample of non-furries) on the degree of global awareness (knowledge of the world and felt connections to others in the world), global citizenship identification (psychological connection with global citizens), and environmental sustainability.[100]: 18 

See also
Topics
Animal roleplay
Costumed character
Human–animal hybrid
Kemonomimi
People
Samuel Conway
Dominique McLean
Documentaries
A Tail of Identity
Fursonas
The Fandom
Related fandoms/subcultures
Brony
Kemonā
References
 Staeger, Rob (July 26, 2001). "Invasion of the Furries". The Wayne Suburban. Archived from the original on 2020-08-28. Retrieved 2009-05-20.
 Matthews, Dylan (March 27, 2015). "9 questions about furries you were too embarrassed to ask". Vox. Archived from the original on July 29, 2016. Retrieved 2016-08-07.
 Aaron, Michael (May 12, 2017). "More Than Just a Pretty Face: Unmasking Furry Fandom". Psychology Today. Archived from the original on February 18, 2021. Retrieved September 15, 2017.
 Kurutz, Daveen Rae (June 17, 2006). "It's a furry weekend in Pittsburgh". Pittsburgh Tribune-Review. Archived from the original on March 3, 2016. Retrieved 2006-06-30.
 Waller, Reed. (1995). The collected 'Omaha': the cat dancer; Vol. 1. Worley, Kate. (1st Fantagraphics books ed.). Seattle, Wash.: Fantagraphics Books. ISBN 1-56097-161-4. OCLC 122275829.
 Skinn, Dez. (2004). Comix: the underground revolution. New York: Thunder's Mouth Press. pp. 71, 106. ISBN 1-56025-572-2. OCLC 55592337. A furry animal turned erotic dancer...Omaha...is full of nubile animals of all sexual persuasions. Omaha...integrated sex into the storyline rather than just for shock value
 Patten, Fred (2012-07-15). "Retrospective: An Illustrated Chronology of Furry Fandom, 1966–1996". Flayrah. Archived from the original on 2016-04-05. Retrieved 2012-07-15.
 Patten, Fred. "The Yarf! reviews". ANTHRO. Archived from the original on 2016-03-13. Retrieved 2007-09-24.
 Sandler, Kevin S. (1998). Reading the Rabbit: Explorations in Warner Bros. Animation. New Brunswick, N.J.: Rutgers University Press. p. 202. ISBN 0-8135-2537-3. OCLC 37890394. [The distinction between "furry" and "funny animal"] is largely because of the baggage the term 'furry' carries with it, as a number of people see 'furries' [to be] obsessed with the sexuality of their fictitious characters.
 Patten, Fred (2017). Furry Fandom Conventions, 1989-2015. McFarland. 57. ISBN 9781476663814. Archived from the original on 2023-04-08. Retrieved 2023-03-19.
 Klee, Miles (Oct 16, 2016). "Here's some amazing raw footage from the world's first furry convention". The Daily Dot. Archived from the original on 28 June 2018. Retrieved 28 June 2018.
 Winterman, Denise (November 13, 2009). "Who are the furries?". BBC News Magazine. Archived from the original on 2020-11-09. Retrieved 2009-11-29.
 Stamper, Chris (March 29, 1996). "Furry Muckity-Muck". The Netly News. Archived from the original on 2007-09-27. Retrieved 2007-04-13.
 Gerbasi, Kathleen; Paolone, Nicholas; Higner, Justin; Scaletta, Laura; Bernstein, Penny; Conway, Samuel; Privitera, Adam (2008). "Furries From A to Z (Anthropomorphism to Zoomorphism)" (PDF). Society & Animals. 16 (3): 197–222. doi:10.1163/156853008X323376. Archived (PDF) from the original on 2018-09-28. Retrieved 2017-03-18.
 Osaki, Alex "Klisoura". "Furry Survey". Archived from the original on 2008-09-15. Retrieved 2008-08-08.
 University of California, Davis Department of Psychology (May 5, 2007). "Furry Survey Results". Archived from the original on July 27, 2011. Retrieved 2007-05-05.
 Kyle Evans (2008). "The Furry Sociological Survey" (PDF). Archived from the original (PDF) on 2013-09-04. Retrieved 2012-09-01.
 Riggs, Adam (2004). Critter Costuming: Making Mascots and Fabricating Fursuits. Ibexa Press.
 Larson, Alina (January 23, 2003). "Animal Instincts: Fans of Furry Critters Convene to Help Mankind". Tri-Valley Herald. ANG Newspapers. Archived from the original on September 21, 2019. Retrieved 2009-05-20.
 "Furries Descend On Pittsburgh". KDKA-TV. June 16, 2006. Archived from the original on 2007-01-26. Retrieved 2006-06-30.
 "Anthrocon 2018 Study". Furscience.com. 2018. Retrieved January 31, 2024.
 Irwin, Charles & Watterson, Summer (April 24, 2002). "A 'furry' tale for a foxy college student". The Olympian. Archived from the original on September 11, 2009. Retrieved 2008-09-03.
 Gaudio, Greg (August 23, 2008). "Lions and foxes and cat-dragons walk on two legs in Beach". The Virginian-Pilot. Archived from the original on February 11, 2009. Retrieved 2008-09-07.
 Mitchell, Don (March 23, 1995). "From MUDs To Virtual Worlds". Social Computing Group, Microsoft. Archived from the original on May 19, 2009. Retrieved 2009-11-06.
 Howells, Shelley (October 1, 2002). "Secret lives of strange and furry". The New Zealand Herald.
 Gerbasi, Kathleen; Paolone, Nicholas; Higner, Justin; Scaletta, Laura; Bernstein, Penny; Conway, Samuel; Privitera, Adam (2008). "Furries From A to Z (Anthropomorphism to Zoomorphism)". Society & Animals. 3: 205.
 Werner, Christian. "Och, sind die süüüüß!". Zeit Online Zuender (in German). Zeit Online. Archived from the original on 2008-09-06. Retrieved 2008-09-06.
 Mulligan, Jessica; Patrovsky, Bridgette (2003). Developing Online Games: An Insider's Guide. New Riders. pp. 452. ISBN 1-59273-000-0. 1990 [...] FurryMUCK opens. It features avatars who are anthropomorphic animals.
 Baldwin, Denis (August 2006). "Walk With the Animals: Local furries explain it's not about perversion, furpiles and plush". Ann Arbor Paper. 2 (1). Archived from the original on 2007-02-04. Retrieved 2007-02-02. Many furs' first introduction to the fandom is through on-line MUCKs or MOOs, such as Furry Muck, the graphic FurCadia, or even through sites that try to poke fun at the fandom, such as Something Awful, or Portal of Evil.
 Peralta, Eyder (May 28, 2006). "In Second Life, the World is Yours". Houston Chronicle. Archived from the original on October 12, 2007. Retrieved 2007-08-13.
 Jorgensen, Karl. "What is a furry convention like?". Furry Fandom Infocenter. Archived from the original on 2019-09-21. Retrieved 2019-09-21.
 "Anthrocon website official". Anthrocon. Archived from the original on 2014-09-24. Retrieved 2014-09-21.
 Brandolph, Adam (June 28, 2008). "Furry convention a $3 million cash cow for city businesses". Pittsburgh Tribune-Review. Archived from the original on April 14, 2009. Retrieved 2008-07-04.
 Parry, Laurence (January 17, 2010). "2009 charity donations down; $470,000 raised this decade". Flayrah. Archived from the original on January 21, 2010. Retrieved 2010-02-02.
 Sonious (Tantroo McNally) (2017-12-04). "Midwest FurFest usurps Anthrocon's record and becomes the world's largest furry convention". Flayrah. Archived from the original on 2020-12-03. Retrieved 2020-06-13.
 "FurFest: Inside the world's 'largest' furry convention". Retrieved 2023-12-07.
 "Thousands attend world's 'largest' furry convention". The Irish Times. Retrieved 2023-12-07.
 "Midwest FurFest 2019 Metrics—Thanks to all our attendees for making this possible—We couldn't have done it without you!". Midwest FurFest. 2020-01-20. Archived from the original on 2022-02-26. Retrieved 2020-06-13 – via official Facebook account.
 Melissa Meinzer (2006-06-29). "Animal Passions". Pittsburgh City Paper. Archived from the original on 2012-05-09. Retrieved 2012-04-08.
 The Commodore 64/128 RoundTable (1994). "Interview with Joe Ekaitis". Archived from the original on 2011-01-12. Retrieved 2007-01-12.
 "2001 Winners and Nominees". Web Cartoonist's Choice Awards. 2001-02-19. Archived from the original on 2009-12-31. Retrieved 2007-12-04.
 "Award Winners 2003". Ursa Major Awards. Archived from the original on 2007-11-09. Retrieved 2007-11-09.
 TheChainedWolf (March 14, 2020). "Ursa Major Awards 2009: predictions and forlorn hopes". FurteanTimes.com/Flayrah. Archived from the original on November 29, 2020. Retrieved March 2, 2021.
 Patten, Fred (July 21, 2013). "The Ursa Major Awards". Cartoon Research. Archived from the original on September 20, 2015. Retrieved March 2, 2021.
 dronon (March 18, 2022). "Voting is open for the 2021 Ursa Major Awards". Flayrah. Archived from the original on March 8, 2022. Retrieved March 22, 2022.
 Perry, Laurence (May 18, 2022). "'Shine', 'Awoo!' take 2021 Ursa Major Awards by landslides; K. Garrison wins three". Flayrah. Archived from the original on May 18, 2022. Retrieved May 22, 2022.
 dronon (March 14, 2020). "Voting opens for the 2020 Ursa Major Awards". Flayrah. Archived from the original on March 2, 2021. Retrieved March 2, 2021.
 Dronon (May 3, 2021). "Winners of the 2020 Ursa Major Awards". Flayrah. Archived from the original on May 3, 2021. Retrieved March 28, 2022.
 "Voting". Ursa Major Awards. Archived from the original on March 1, 2021. Retrieved March 2, 2021.
 "Award Winners 2022". Ursa Major Awards. Archived from the original on June 9, 2023. Retrieved July 5, 2023.
 Mackcey, Joshua S. (December 14, 2022). "10 LGBTQ+ Cartoons That We Loved in 2022". Into. Archived from the original on March 24, 2023. Retrieved July 5, 2023.
 Dumas, Zoe (July 2, 2023). "Why Helluva Boss Is the Best Web Series Right Now". MovieWeb. Archived from the original on July 5, 2023. Retrieved July 5, 2023.
 "Netflix's Newest Animation Pickup Has A Black And Gay Cast, But Isn't A "Black" Or "Gay" Cartoon". Quirktastic. January 21, 2021. Archived from the original on April 11, 2021. Retrieved 2020-07-08.
 Radulovic, Petrana (January 15, 2020). "Kipo and the Age of Wonderbeasts treats coming out like just another part of life". Polygon. Archived from the original on January 19, 2020. Retrieved 2020-07-08.
 Johnson, Kevin (June 24, 2024). "How Kipo and the Age of Wonderbeasts Codes Blackness". Den of Geek. Archived from the original on June 27, 2020. Retrieved 2020-07-08.
 Kachel, Brendan (July 31, 2022). "What the hell is 'Helluva Boss'?". Flayrah. Archived from the original on March 31, 2023. Retrieved July 5, 2023.
 Reeve, Dylan (2022-01-11). "Who runs the internet? Furries". The Spinoff. Retrieved 2024-07-11.
 Robinson, Kylie (2022-03-11). "How Furries Came to Rule the Tech Industry". Business Insider. Retrieved 2024-07-11.
 "alt.lifestyle.furry - Frequently Asked Questions". May 8, 2001. Archived from the original on August 21, 2006. Retrieved 2006-08-26.
 Gerbasi, Kathleen; Paolone, Nicholas; Higner, Justin; Scaletta, Laura; Bernstein, Penny; Conway, Samuel; Privitera, Adam (2008). "Furries From A to Z (Anthropomorphism to Zoomorphism)". Society & Animals. 3: 220.
 Alex Osaki (June 27, 2008). "State of the Fandom" (PDF). Furry Research Center. Archived (PDF) from the original on March 4, 2016. Retrieved March 22, 2015.
 Gerbasi; et al. (2011). "International Online Furry Survey: Winter 2011". Archived from the original on 2013-03-08. Retrieved 2012-09-01.
 Bardzell, Jeffery, and Shaowen Bardzell. Sex-Interface-Aesthetics: The Docile Avatars and Embodied Pixels of Second Life BDSM. Indiana University, 2005.
 Stuttaford, Thomas; Godson, Suzi (December 8, 2007). "I like dressing up as a bear during sex". The Times. London. Archived from the original on June 15, 2011. Retrieved 2007-12-11. (further details)
 Meinzer, Melissa (June 29, 2006). "Animal Passions: The furries come to town—and our correspondent tails along". Pittsburgh City Paper. Archived from the original on August 27, 2007. Retrieved 2007-05-25.
 Padva, Gilad (2005). "Dreamboys, Meatmen and Werewolves: Visualizing Erotic Identities in All-Male Comic Strips". Sexualities. 8 (5): 587–99. doi:10.1177/1363460705058395. S2CID 143653150.
 Plante, C. N., Reysen, S., Roberts, S. E., & Gerbasi, K. C. (2013). International Anthropomorphic Research Project: Furry Fiesta 2013 Summary
 Josh Quittner (March 1994), "Johnny Manhattan Meets the Furry Muckers", Wired, People describe themselves as furry cuddly animals; more times than not, they have furry cuddly animal sex. FurryMuckers like to write long, loving, animal-sexy descriptions of themselves
 "Heavy Petting". Loaded magazine. March 1998.
 Gurley, George (March 2001). "Pleasures of the fur". Vanity Fair. Archived from the original on 2011-03-01. Retrieved 2011-03-22.
 "Flaming Moe". The Simpsons. Season 22. Episode 11. 2011-01-16. Fox Broadcasting Company.
 "Do Pizza Bots Dream of Electric Guitars". The Simpsons. Season 32. Episode 15. 2021-03-14. Fox Broadcasting Company.
 "Fear of Commitment". ER. Season 7. Episode 20. 2001-03-05. NBC.
 "Fur and Loathing". CSI: Crime Scene Investigation. Season 4. Episode 5. 2003-10-30. CBS.
 "Mama Told Me I Should Come". The Drew Carey Show. Season 8. Episode 6. 2002-10-21. ABC. See The Drew Carey Show on WikiFur for more information.
 MTV. "Sex2K Fursuit Video". Archived from the original on 2011-08-16. Retrieved 2006-08-26.
 "The Day Fuckers". Entourage. Season 4. Episode 7. July 28, 2007. HBO.
 "Death Over Easy". 1000 Ways to Die. Season 1. Episode 4. February 8, 2009. Spike.
 Jordan (2011-08-10). "Tosh.O Web Redemption: The Larper". Larping. Archived from the original on 2014-11-29. Retrieved 2010-11-11.
 Markos (2013-09-05). "Kusa the Arctic Fox gets Web Redemption on Comedy Central's Tosh.0". Furry News Network. Archived from the original on 2014-11-29.
 "Animals". Check It Out! with Dr. Steve Brule. Season 2. Episode 5. 2012-04-15. Adult Swim.
 "Emanuelle Goes to Dinosaur Land". 30 Rock. Season 4. Episode 21. 2010-05-13. NBC.
 Baldwin, Denis (August 2006). "Walk With the Animals: Local furries explain it's not about perversion, furpiles and plush". Ann Arbor Paper. Archived from the original on 2007-02-04. Retrieved 2007-02-02.
 Belser, Ann (June 18, 2006). "All about 'furry fandom' at confab". Pittsburgh Post-Gazette. Archived from the original on June 22, 2006. Retrieved 2006-06-30.
 Togneri, Chris (July 6, 2007). "Furries purr over Pittsburgh reception". Pittsburgh Tribune-Review. Archived from the original on July 12, 2007. Retrieved 2007-07-14.
 Meinzer, Melissa (February 2, 2006). "Fur Ball In The Works". Pittsburgh City Paper. Archived from the original on August 28, 2007. Retrieved 2007-05-25.
 Abel, Jennifer (November 1, 2007). "Hell Hath No Furries". Hartford Advocate. Advocate Weekly Newspapers. Archived from the original on 2010-04-26. Retrieved 26 April 2010.
 "Award Winners 2009". Ursa Major Awards. May 3, 2010. Archived from the original on June 10, 2010. Retrieved June 25, 2010.
 TheChainedWolf (2010-03-14). "Ursa Major Awards 2009: predictions and forlorn hopes". FurteanTimes.com/Flayrah. Archived from the original on 2020-11-29. Retrieved 2010-11-11.
 "The Brewers Meet the Furries". Deadspin. July 6, 2007. Archived from the original on July 10, 2007. Retrieved 2007-06-07.
 Parry, Laurence (July 17, 2007). "Anthrocon 2007 draws thousands to Pittsburgh for furry weekend". Wikinews. Archived from the original on March 12, 2009. Retrieved 2009-11-06.
 "Furry Convention Creates Wild Scene In Pittsburgh". WPXI News. June 26, 2008. Archived from the original on December 5, 2008. Retrieved 2008-07-04.
 Ferreras, Jesse (March 10, 2016). "Syrian Refugees Get Put Up in Same Hotel As Furries. Kids LOVE It". The Huffington Post. Archived from the original on 27 December 2016. Retrieved 27 December 2016.
 Brennan, Christopher (March 10, 2016). "Syrian refugee children dance with furries after being placed in same hotel as VancouFur convention". New York Daily News. Archived from the original on 7 January 2017. Retrieved 27 December 2016.
 Notopoulos, Katie (2 March 2016). "Proof Disney Is Actually Marketing 'Zootopia' to Furries". Buzzfeed. Archived from the original on 16 February 2021. Retrieved 25 April 2020.
 Todd, Dorman (2020-05-13). "School litter box fever will not die in Iowa". The Gazette. Archived from the original on 2022-10-05. Retrieved 2022-10-06. The solution, obviously, is to take tens of millions of dollars from public schools and give it to private schools, because parents should be scared to send their kids to public schools.
 Dalbey, Beth (2022-09-07). "Debunked School Restroom Litter Box Claims Resurface With New Year". Patch.com. Archived from the original on 2022-10-05. Retrieved 2022-10-05.
 Nolan Brown, Elizabeth (2022-03-29). "No, Schools Aren't Accommodating Students Who Identify as Animals". Reason.com. Archived from the original on 2022-09-05. Retrieved 2022-09-05.
 Gerbasi, Kathleen; Plante, Courtney; Reysen, Stephen; Roberts, Sharon (2015). "The origins of the international anthropomorphic research project". In Howl, Thurston (ed.). Furries among us: Essays on furries by the most prominent members of the fandom. Nashville, TN: Thurston Howl Publications. pp. 102–105. ISBN 978-0990890263.
 Plante, Courtney N.; Reysen, Stephen; Roberts, Sharon E.; Gerbasi, Kathleen C. (2016). FurScience! A summary of five years of research from the International Anthropomorphic Research Project (PDF). Waterloo, Ontario: FurScience. ISBN 978-0-9976288-0-7. Archived from the original on April 24, 2017.
 Kiberd, Roisin (January 12, 2017). "Pony Nationalism and the Furred Reich: Inside the Alt-Furry's Online Zoo". Vice Media. Archived from the original on January 15, 2017. Retrieved January 25, 2017.
 Boden, Sarah (July 10, 2019). "For Some With Autism, Furry Culture Offers Comfort And Acceptance". 90.5 WESA. Retrieved June 23, 2023.
Further reading
Ferreday, Debra. "Becoming deer: Nonhuman drag and online utopias." Feminist Theory 12.2 (2011): 219–225.
Hilton, Craig. "Furry Fandom—An Insider's View from the Outside", parts 1 & 2. South Fur Lands #2 & #3, 1995, 1996.
Martin, Watts. Mange: the need for criticism in furrydom 1994, 1998 (Internet Archive mirror)
Morgan, Matt. Creature Comfort: Anthropomorphism, Sexuality and Revitalization in the Furry Fandom. Diss. Mississippi State University, 2008.
Probyn-Rapsey, Fiona. "Furries and the Limits of Species Identity Disorder: A Response to Gerbasi et al." Society and Animals 19.3 (2011): 294–301.
Plante, C. N., Reysen, S., Roberts, S.E., & Gerbasi, K. C. (2016). FurScience! A summary of Five Years of Research from the International Anthropomorphic Research Project. Waterloo, Ontario: FurScience.
Nothing., 
Пздц там ещё и арты в подгузниках..

NAAIN,’’’’’’’’’’’’’’’’’
казнить нахуй

любимка, 
Вас казнили нахуй

cheddrillogames #killtf,
Ну нахер

ЧВК NAAIN ТРЭШ +,
я лучше с сурсом поебусь если честно

ЧВК NAAIN ТРЭШ +, 
арч ван лав
#techporn #unixporn

「」Colin「」 [ | Roblox] ️#Wypher,
Ну, а что такого. Это же обычная база по фуррям

NAAIN, 
убейся

NAAIN,


Markinim ^_^, 
стул

ЧВК NAAIN ТРЭШ +, 
и вот как я кинул ребут экран магическим образом загорелся.

ЧВК NAAIN ТРЭШ +,
ахуеть инновация

「」Colin「」 [ | Roblox] ️#Wypher,
Прон стики можно?

「」Colin「」 [ | Roblox] ️#Wypher,
.

NAAIN, 
снесу ебло

「」Colin「」 [ | Roblox] ️#Wypher,
Как так та

「」Colin「」 [ | Roblox] ️#Wypher,
Ай похуй кину

NAAIN,
казнить

любимка,
Вас казнили нахуй

「」Colin「」 [ | Roblox] ️#Wypher,
Чоэтозапиздец

「」Colin「」 [ | Roblox] ️#Wypher
Блять телега ахуела

「」Colin「」 [ | Roblox] ️#Wypher,
Вымогает премиум какому-то нн

「」Colin「」 [ | Roblox] ️#Wypher,


ЧВК NAAIN ТРЭШ +,
ну типа<><><><><<><<><>><><><><><<><<><>><><><><><<><<><>><><><><><<><<><>><><><><><<><<><>><><><><><<><<><>>

ЛУКОЙЛ СИЛА СЛАВА  НАШИМ  ОТРАВИТЕЛЯМ 
ПРЕКРАСНЫЙ ЗАПАХ БЕНЗИНА
КУПИЛ У ВАС МАШИНУ ХУНДАЙ СОНАТУ

ЗАПАХЛО БЕНЗИНОМ.ЗАПАХЛО ЛУКОЙЛОМ. ЛУКОЙЛ- ЭТО СИЛА!ЛУКОЙЛЭТО СЛАВА!ГДЕ ПРОКУРОРЫ? ГДЕ СЛЕДОВАТЕЛИ ?ГДЕ САН СТАНЦИЯ?НЕТУ НИКОГО. ВСЁ ПОПРЯТАЛИСЬ ЗА БАБКИ ЛУКОЙЛ.

 Жди докс,
сват,
деанон,
ОМОН,
ФБР,
ФСБ,
снайперов,
вагнеров,
офицеров,
редановцев,
вайперов,
фурри в памперсах,
танкистов,
спецназ,
ГРУ,
спортсменов,
чеченских боевиков,
СС,
ФБИ,
ВСУ,
КГБ,<><><><><<><<><>><><><><><<><<><>><><><><><<><<><>><><><><><<><<><>><><><><><<><<><>>
накаченных таджиков с автоматами,
милиционеров,
разведчиков,
диверсантов,
кибершпионов,
пограничников,
парашютистов,
морпехов,
артиллеристов,
инженеров-саперов,
контрразведчиков,
наемников,
десантников,
радистов,
военных врачей,
пилотов,
штурманов,
космонавтов,
геодезистов,
инструкторов по выживанию,
пожарных,
сантехников,
электриков,
водителей бронетехники,
грузчиков,
строителей укреплений,
психологов,
логистов,
переводчиков,
судей,
следователей,
прокуроров,
адвокатов,
учителей военной подготовки,
журналистов военной тематики,
инженеров-строителей,
ветеринаров,
физиотерапевтов,
психотерапевтов,
офтальмологов,
стоматологов,
хирургов,
анестезиологов,
реаниматологов,
лаборантов,
геологов,
гидрологов,
метеорологов,
экологов,
агрономов,
зоологов,
биологов,
химиков,
физиков,
математиков,
программистов,
дизайнеров,
архитекторов,
искусствоведов,
историков,
философов,
лингвистов,
педагогов,
социологов,
экономистов,
юристов,
политологов,
психологов,
астрономов,
генетиков,
нейробиологов,
робототехников,
нанотехнологов,
энергетиков,
транспортников,
связистов,
геодезистов,
гидротехников,
мелиораторов,’’’’’’’’’’’’’’’’’’’’’’’’
лесоводов,
охотоведов,
рыбоводов,
виноделов,
пивоваров,
кондитеров,
поваров,
шеф-поваров,
барменов,
официантов,
гостиничников,
туристов,
гидов,
экскурсоводов,
спортсменов-профессионалов,
любителей спорта,
фитнес-тренеров,
йогов,
массажистов,
астрологов,
гадалок,
психологов-консультантов,
психотерапевтов-психоаналитиков,
гипнотерапевтов,
нутрициологов,
диетологов,
фитотерапевтов,
гомеопатов,
акупунктуристов,
мануальных терапевтов,
реабилитологов,
ортопедов,
травматологов,
стоматологов-ортодонтов,
стоматологов-хирургов,
стоматологов-педиатров,
оптомет и гостей из Краснодара...экономистов,
юристов,
политологов,
психологов,
астрономов,
генетиков,
нейробиологов,
робототехников,
нанотехнологов

From Wikipedia, the free encyclopedia
English alphabet

An English-language pangram written with the FF Dax Regular typeface
Script type	Alphabet
Time period	c. 16th century – present
Languages	English
Related scripts
Parent systems	
(Proto-writing)
Egyptian hieroglyphs
Proto-Sinaitic script
Phoenician alphabet
Greek alphabet
Old Italic alphabet
Latin alphabet
English alphabet
Child systems	
ISO basic Latin alphabet
Cherokee syllabary
Scots alphabet
Osage alphabet
Saanich writing system
ISO 15924
ISO 15924	Latn (215), ​Latin

 This article contains phonetic transcriptions in the International Phonetic Alphabet (IPA). For an introductory guide on IPA symbols, see Help:IPA. For the distinction between [ ], / / and ⟨ ⟩, see IPA § Brackets and transcription delimiters.
Modern English is written with a Latin-script alphabet consisting of 26 letters, with each having both uppercase and lowercase forms. The word alphabet is a compound of alpha and beta, the names of the first two letters in the Greek alphabet. Old English was first written down using the Latin alphabet during the 7th century. During the centuries that followed, various letters entered or fell out of use. By the 16th century, the present set of 26 letters had largely stabilised:

A aB bC cD dE eF fG gH hI iJ jK kL lM mN nO oP pQ qR rS sT tU uV vW wX xY yZ z
There are 5 vowel letters and 19 consonant letters—as well as Y and W, which may function as either type.

Written English has a large number of digraphs, such as ⟨ch⟩, ⟨ea⟩, ⟨oo⟩, ⟨sh⟩, and ⟨th⟩. Diacritics are generally not used to write native English words, which is unusual among orthographies used to write the languages of Europe.

Letter names

English alphabet from 1740, with some unusual letter names. Note the use of long s.


1	2	3	4	5	6	7
А а	Б б	В в	Г г	Д д	Е е	Ё ё
						
(а)	(бэ)	(вэ)	(гэ)	(дэ)	(е)	(ё)
8	9	10	11	12	13	14
Ж ж	З з	И и	Й й	К к	Л л	М м
						
(жэ)	(зэ)	(и)	(и краткое)	(ка)	(эль)	(эм)
15	16	17	18	19	20	21
Н н	О о	П п	Р р	С с	Т т	У у
						
(эн)	(о)	(пэ)	(эр)	(эс)	(тэ)	(у)
22	23	24	25	26	27	28
Ф ф	Х х	Ц ц	Ч ч	Ш ш	Щ щ	Ъ ъ
						
(эф)	(ха)	(цэ)	(че)	(ша)	(ща)	(твёрдый знак)
29	30	31	32	33
Ы ы	Ь ь	Э э	Ю ю	Я я
				
(ы)	(мягкий знак)	(э или э оборотное)	(ю)	(я)

Iris | ???, [26.07.2024 01:22]
ыы кфг редактировать и писать мылырды строк ради сервиса ыы

Rarg one HAMSTER COMBAT купить квартиру дёшево, [26.07.2024 01:22]
Ок

linxilw, [26.07.2024 01:22]
тих

Iris | ???, [26.07.2024 01:22]
саси арч енджойер

Rarg one HAMSTER COMBAT купить квартиру дёшево, [26.07.2024 01:22]
С мамой твоей

dobr2, [26.07.2024 01:23]
Прости конечно но он меня сильно выбесил

Iris | ???, [26.07.2024 01:23]
что можно подогнать

linxilw, [26.07.2024 01:23]
рарг не мутит никого большое и оски тоже не кидайте друг другу пж

dobr2, [26.07.2024 01:23]
Вернись в будущее из своего 2021 года как салават

Iris | ???, [26.07.2024 01:23]
а ты не ахуел ли случаем

Rarg one HAMSTER COMBAT купить квартиру дёшево, [26.07.2024 01:23]
Зачем? Сами виноваты

Iris | ???, [26.07.2024 01:23]
в муте чучело не хочешь посидеть

dobr2, [26.07.2024 01:23]
Хорошо, он первый провацирует а потом начинает

Rarg one HAMSTER COMBAT купить квартиру дёшево, [26.07.2024 01:23]
Зачем?

dobr2, [26.07.2024 01:23]
Начни разваиватся

linxilw, [26.07.2024 01:24]
в смысле зачем, просто так мутв выдавать?

linxilw, [26.07.2024 01:24]
или что

Shadow %0/x0, [26.07.2024 01:24]
почитай чат сверху что вообще произошло

dobr2, [26.07.2024 01:24]
Он ещё стикеры отклбчал

Rarg one HAMSTER COMBAT купить квартиру дёшево, [26.07.2024 01:24]
Так сами они сами бесить начинают, лол

linxilw, [26.07.2024 01:24]
бляя

linxilw, [26.07.2024 01:24]
нбанутьмя

linxilw, [26.07.2024 01:24]
скинь в лс че было

Rarg one HAMSTER COMBAT купить квартиру дёшево, [26.07.2024 01:25]
Ой, какой я плохой, а ты такой хороший и ваще я фу

dobr2, [26.07.2024 01:25]
Да я хороший

Амогус, [26.07.2024 01:25]
Да он хороший

dobr2, [26.07.2024 01:25]
Завидно?

, [26.07.2024 01:25]
злоі рарг

dobr2, [26.07.2024 01:25]
Ещё позвала будет?

, [26.07.2024 01:25]
злодій

Амогус, [26.07.2024 01:25]
Дооо

Rarg one HAMSTER COMBAT купить квартиру дёшево, [26.07.2024 01:26]
Дооо

Rarg one HAMSTER COMBAT купить квартиру дёшево, [26.07.2024 01:26]
Добр2 супер герой прям

Амогус, [26.07.2024 01:26]
Да

Rarg one HAMSTER COMBAT купить квартиру дёшево, [26.07.2024 01:26]
Супер мен настоящий

Амогус, [26.07.2024 01:26]
Да

Rarg one HAMSTER COMBAT купить квартиру дёшево, [26.07.2024 01:26]
Человек паук билять

linxilw, [26.07.2024 01:26]
чей парень

Амогус, [26.07.2024 01:26]
Да

dobr2, [26.07.2024 01:26]
Он антик

Rarg one HAMSTER COMBAT купить квартиру дёшево, [26.07.2024 01:26]
Города спасает

Амогус, [26.07.2024 01:26]
Да

Shadow %0/x0, [26.07.2024 01:27]
ж

linxilw, [26.07.2024 01:27]
что за сообщение на пол экрана

dobr2, [26.07.2024 01:27]
Вот

Shadow %0/x0, [26.07.2024 01:27]
лан

Rarg one HAMSTER COMBAT купить квартиру дёшево, [26.07.2024 01:27]
Переплетение яичных волокон

Shadow %0/x0, [26.07.2024 01:27]
бро НЕ знает что такое сарказм

Protogenchik, [26.07.2024 01:28]
Хомяк

linxilw, [26.07.2024 01:28]
ну так ало, варн по факту по заслуге

linxilw, [26.07.2024 01:28]
хщ

Амогус, [26.07.2024 01:28]
Вот это хомяк новый

Амогус, [26.07.2024 01:28]
За шифр?

Protogenchik, [26.07.2024 01:29]
Да

Амогус, [26.07.2024 01:30]
Ладно

dobr2, [26.07.2024 01:34]
Покажи

dobr2, [26.07.2024 01:34]
ХАХААХА

John Dave Harris, [26.07.2024 01:34]
рико

Амогус, [26.07.2024 01:34]
Рип

dobr2, [26.07.2024 01:34]
Доооо

ko1o ☮, [26.07.2024 01:47]
Та у меня такое чувство что я её когда-то лайкал в саундклауде, но сейчас нигде найти не могу

ko1o ☮, [26.07.2024 01:47]
Это пиздец

John Dave Harris, [26.07.2024 01:47]
впервые слушу

dobr2, [26.07.2024 01:47]
У меня такое чувство что слышал но не могу сказать на все 100

John Dave Harris, [26.07.2024 01:47]
помочь не могу

ko1o ☮, [26.07.2024 01:48]
Бля(

Xterr, [26.07.2024 01:49]
ток в тиктоке слышал

ko1o ☮, [26.07.2024 01:49]
Недавно?

ko1o ☮, [26.07.2024 01:49]
Если да, то попробуй найти видос и скинуть, плз

John Dave Harris, [26.07.2024 02:31]
да

Амогус, [26.07.2024 02:32]
Спакоиной ночи

Амогус, [26.07.2024 02:32]
Брадочг

John Dave Harris, [26.07.2024 02:33]
и тебе

John Dave Harris, [26.07.2024 02:33]
я тоже спать

John Dave Harris, [26.07.2024 02:33]
фильм закончился

John Dave Harris, [26.07.2024 02:33]
все занялись сексмом

Амогус, [26.07.2024 02:34]
Да

Амогус, [26.07.2024 02:34]
Хеппи энд

ChatKeeperBot, [26.07.2024 02:40]
— Как вас зовут?
 — Василий.
 — Дети есть?
 — Да, сын Василий и дочь Василиса.
 — А животные дома есть?
 — Кот Васька.
 — К сожалению, мы не можем вас принять на должность креативного менеджера.

| TheFavorite | •~•, [26.07.2024 02:59]
Что у вас тут?

| TheFavorite | •~•, [26.07.2024 02:59]
Я в метро херачу

𝚓𝚎𝚝𝚝 ϟ, [26.07.2024 02:59]
Ночь

| TheFavorite | •~•, [26.07.2024 03:00]
Пиздец вот это ночь

𝚓𝚎𝚝𝚝 ϟ, [26.07.2024 03:00]
Пвшли одінаАдін

| TheFavorite | •~•, [26.07.2024 03:00]
Не

| TheFavorite | •~•, [26.07.2024 03:00]
Не

| TheFavorite | •~•, [26.07.2024 03:00]
Я в штурм пошел

𝚓𝚎𝚝𝚝 ϟ, [26.07.2024 03:00]
Фууу какащке

| TheFavorite | •~•, [26.07.2024 03:01]
Иди нахуй денег нету:(

𝚓𝚎𝚝𝚝 ϟ, [26.07.2024 03:01]
Я фармило у меня 10 лямов

𝚓𝚎𝚝𝚝 ϟ, [26.07.2024 03:01]
Ооыы

𝚓𝚎𝚝𝚝 ϟ, [26.07.2024 03:01]
Уро

| TheFavorite | •~•, [26.07.2024 03:01]
Похуй

𝚓𝚎𝚝𝚝 ϟ, [26.07.2024 03:01]
На зомби режим иди

| TheFavorite | •~•, [26.07.2024 03:01]
Я человек пиздатый мне похуй на балик

| TheFavorite | •~•, [26.07.2024 03:02]
Иди нахуй в эту помойку не пойду

| TheFavorite | •~•, [26.07.2024 03:02]
Там хоть и фармить можно

𝚓𝚎𝚝𝚝 ϟ, [26.07.2024 03:02]
Имба режим, халявная радка

| TheFavorite | •~•, [26.07.2024 03:02]
Я лучше по старинке

| TheFavorite | •~•, [26.07.2024 03:02]
Лучше по старинке апаться

Text role in AI
Text data plays a vital role in the field of artificial intelligence (AI), as it serves as the primary input for training and developing various language-based AI models and algorithms. With the advancement of natural language processing (NLP) techniques, AI systems have become increasingly proficient in their ability to understand, generate, and analyze text data. This essay will explore the significance of text data in AI and delve into the intelligence and comprehension achieved by modern AI systems when working with textual information. - Text enables machines to understand and process human language. Through the use of various techniques, text data can be collected, preprocessed, and used in AI systems for a wide range of applications such as natural language processing, sentiment analysis, and chatbots. However, there are challenges and limitations associated with working with text data in AI. Preprocessing techniques are applied to improve the quality of text data before it is fed into AI models. Additionally, different methods for representing textual information as numerical vectors are employed to facilitate machine learning algorithms. The training and evaluation of text-based AI models involve selecting appropriate algorithms/architectures and performance metrics specific to textual tasks. Ethical considerations surrounding the usage of text data in AI should also be taken into account.

At its core, AI aims to replicate and emulate human-like intelligence. Text data, which encompasses a vast array of written information ranging from documents to social media posts, provides an incredibly rich source for training AI models. By leveraging massive amounts of text data, AI systems can learn to recognize patterns, understand context, and generate coherent and meaningful responses.

One key area where the intelligence of AI models shines is in natural language understanding. Using techniques like word embeddings and deep learning models such as neural networks, AI systems can comprehend the meaning behind textual information. They can extract semantic relationships, identify key concepts, and even infer sentiments contained within texts. This level of comprehension allows AI to tackle complex tasks such as document classification, sentiment analysis, and question-answering with remarkable accuracy.

Furthermore, AI systems have demonstrated proficiency in the generation of human-like text. Through techniques like language modeling and sequence-to-sequence learning, AI models can generate natural-sounding sentences, paragraphs, and even entire articles. This intelligence has been employed in a variety of applications, including automated content generation, dialogue systems, and machine translation. The ability to generate coherent text that adheres to the grammar and context presents exciting possibilities for AI's integration into various industries.

Moreover, AI's comprehension of text data extends beyond understanding isolated sentences. AI models can grasp the nuances of long-form text and detect relationships between paragraphs or even entire documents. This comprehension allows AI to summarize lengthy texts, extract pertinent information, and provide contextually relevant responses. Such capabilities prove invaluable in scenarios such as information retrieval, literature analysis, and automated summarization.

AI's deep understanding of text data is not only limited to English but also extends across multiple languages. Through multilingual training and translation models, AI systems can comprehend and generate text in various languages, bridging communication gaps and fostering inclusion in today's globalized world. This level of linguistic comprehension enables AI to provide translation services, language learning assistance, and international communication tools, further enriching its repertoire of capabilities.

Despite AI's impressive intelligence in dealing with text data, challenges still persist. AI systems sometimes struggle with understanding sarcasm, irony, or other forms of nuanced language use. Additionally, biases inherent in training data can lead to undesired outcomes, perpetuating discrimination and misinformation. Researchers and developers are actively working on mitigating these challenges to ensure AI's competence and ethical use of text data.

Text data refers to any form of written or spoken language that is processed by an AI system. It includes documents, emails, social media posts, customer reviews, and more. Text data can be collected from various sources such as websites, databases, or user-generated content platforms like social media networks. Once collected, this raw text needs to be processed before it can be used effectively by an AI system.

One common application where text data is utilized in AI is natural language processing (NLP). NLP involves teaching machines to understand and generate human language through computational linguistics techniques. By analyzing patterns in large amounts of textual information using algorithms like machine learning or deep learning models., NLP enables machines to perform tasks such as speech recognition , sentiment analysis automatic summarization ,and machine translation.

Sentiment analysis examines the emotions expressed within a piece of text.Researchers Biswas et al.(2018) conducted a study titled "Leadership In Action: How Top Hackers Behave" utilizing big-data approaches with text-mining Sentiment analysis plays a vital role in understanding public opinion towards products/services or tracking trends on social media platforms. For example, companies can analyze customer feedback to identify areas for improvement or gauge public sentiment towards their brand.

Chatbots are another popular application of text data in AI. These computer programs simulate human conversation and provide automated responses based on the input received from users. They are commonly used for customer support or information retrieval purposes. Text data is essential for training chatbots as it helps them understand user queries and generate appropriate responses.

In conclusion, text data serves as the backbone of AI's language-based capabilities. AI systems have demonstrated substantial intelligence and comprehension when working with textual information, enabling them to understand, generate, and analyze text with remarkable accuracy. The ability to comprehend, summarize, and generate text comes with immense possibilities, including applications in various industries, multilingual communication, and assistance in knowledge dissemination. However, challenges remain in terms of nuanced language comprehension and avoiding biases. Continued research and development are necessary to overcome these obstacles and unlock the full potential of text data in AI.

Text based Applications in AI
Text mining: Text mining is the process of extracting knowledge from text data. This can be used for a variety of purposes, such as: Sentiment analysis: Text mining can be used to analyze the sentiment of text, which can be useful for understanding how people feel about a product, service, or issue. Topic modeling: Text mining can be used to identify the topics of text documents. This can be useful for organizing and summarizing large amounts of text data. Fraud detection: Text mining can be used to identify fraudulent activity, such as credit card fraud or insurance fraud.

Optical character recognition (OCR) is the process of converting text from images into machine-readable text. OCR is used in a variety of applications, including:

Document scanning: OCR is used to scan documents into digital format. This can be useful for archiving documents or making them accessible to people with disabilities.
E-commerce: OCR is used to extract text from product labels and product descriptions. This information can then be used to populate product listings on e-commerce websites. Banking: OCR is used to read check images and deposit them into bank accounts.
Natural language processing (NLP) deals with the interaction between computers and human (natural) languages. NLP is used in a wide variety of applications, including:

Machine translation: NLP is used to translate text from one language to another. This is a valuable tool for businesses that want to reach a global audience. Speech recognition: NLP is used to recognize speech and convert it into text. This is a useful feature for smartphones and other devices that allow users to interact with them by voice.
Chatbots: NLP is used to create chatbots, which are computer programs that can simulate conversation with humans. Chatbots are often used in customer service applications, where they can answer questions and resolve issues without the need for human intervention.
Some examples of text data use cases:
Sentiment analysis: Sentiment analysis is the process of determining the sentiment of a piece of text, such as whether it is positive, negative, or neutral. This can be useful for understanding how people feel about a product, service, or issue. For example, a company might use sentiment analysis to track how people are reacting to their marketing campaign.image.png
Topic modeling: Topic modeling is the process of identifying the topics of a piece of text. This can be useful for organizing and summarizing large amounts of text data. For example, a research team might use topic modeling to analyze a large corpus of scientific papers in order to identify the emerging trends in their field.image.png

Question answering: Question answering is the process of automatically answering questions posed in natural language. This can be useful for a variety of applications, such as customer service chatbots, educational tools, and search engines. For example, a customer service chatbot might use question answering to answer questions about a product or service.image.png

Identify spam: Spam is unsolicited electronic messages that are sent in bulk. Spam can be a nuisance and can also be used for malicious purposes. Text data can be used to identify spam by looking for patterns in the text that are common in spam messages.image.png
Detect fraud: Fraud is a type of deception that is used to gain an unfair advantage. Text data can be used to detect fraud by looking for patterns in the text that are common in fraudulent activities. For example, text data can be used to detect credit card fraud by looking for patterns in the text of credit card transactions that are likely to be fraudulent.image.png

Generate creative text formats: Text data can be used to generate creative text formats, such as poems, code, scripts, musical pieces, email, letters, etc. This can be useful for a variety of applications, such as generating marketing copy, creating chatbots, and writing creative content.image.png

Translate text from one language to another: Machine translation is the process of translating text from one language to another. Text data can be used to train machine translation models, which can then be used to translate text between different languages.image.png

Extract information from documents: Text data can be used to extract information from documents. This can be useful for a variety of applications, such as extracting product information from product descriptions, extracting customer feedback from reviews, and extracting medical information from patient records.image.png

Categorize text into different classes: Text data can be categorized into different classes, such as product reviews, customer support tickets, and news articles. This can be useful for organizing and managing text data.image.png

Text based Datasets to consider
Amazon Review Dataset: This dataset contains over 1.5 million customer reviews of Amazon products. The reviews are labeled as positive, negative, or neutral. This dataset is a great resource for sentiment analysis and topic modeling.image.png

Google Books Engrams: This dataset contains over 100 billion words from Google Books. The words are tokenized and stemmed, and they are grouped into n-grams. This dataset is a great resource for natural language processing tasks, such as text classification and text similarity.image.png

Blogger Corpus: This dataset contains over 1 million blog posts from a variety of blogs. The posts are labeled with the topic of the blog. This dataset is a great resource for topic modeling and text classification.image.png

Enron Data Set: This dataset contains over 600,000 emails from Enron employees. The emails are labeled with the sender and recipient of the email, as well as the date and time of the email. This dataset is a great resource for natural language processing tasks, such as sentiment analysis and topic modeling.image.png

SMS Spam Collection in English: This dataset contains over 500,000 SMS messages, of which about 80% are spam. The messages are labeled as spam or ham. This dataset is a great resource for spam detection.image.png

Challenges and Limitations:
Ambiguity and Missing Context
Text data inherently contains ambiguity, making it challenging for AI systems to interpret and process accurately. Context is often essential for understanding the meaning and intent behind text. As language is highly nuanced, AI models struggle to grasp subtle contextual cues, leading to potential misinterpretations.
Inadequate Training Data
Developing robust AI models requires large-scale and diverse training datasets. Gathering and annotating such data can be time-consuming, costly, and subject to bias. Limited or biased training data can hinder the performance and generalization capabilities of AI systems, making it crucial to address data biases and ensure representative datasets.
Multilingual and Cultural Variances
Language is deeply rooted in culture, and different languages exhibit unique characteristics. AI models trained on one language may face difficulties when processing other languages. Multilingual text data poses challenges in terms of translations, correct interpretations, and understanding cultural nuances, requiring specialized techniques for effective processing.
Words and phrases Meanings
Working with text data in AI comes with its own set of challenges and limitations. One common challenge is ambiguity within the language itself. Words and phrases can have multiple meanings depending on the context in which they are used (Chen & Xia, 2022). This makes it difficult for machines to accurately interpret textual information without additional context.
Benefits and improvements in Text through NLP
Text classification: NLP tools can be used to classify text into different categories, such as product reviews, customer support tickets, or news articles. This can help to improve the efficiency of customer service, product development, and marketing campaigns. Sentiment analysis: NLP tools can be used to determine the sentiment of text, such as whether it is positive, negative, or neutral. This can be used to understand customer satisfaction, identify potential problems, and track the effectiveness of marketing campaigns.
Machine translation: NLP tools can be used to translate text from one language to another. This can be used to expand into new markets, provide customer support in multiple languages, and reach a wider audience.
Question answering: NLP tools can be used to answer questions about text. This can be used to provide customer support, answer FAQs, and generate personalized content. In addition to these specific applications, NLP can also be used to improve the quality and efficiency of text data analysis in general. For example, NLP tools can be used to:

Identify and correct errors: NLP tools can be used to identify and correct errors in text, such as grammatical errors, spelling errors, and typos. This can help to improve the accuracy of text data analysis.
Extract keywords and concepts: NLP tools can be used to extract keywords and concepts from text. This can help to identify the key topics in a text, which can be used to improve the efficiency of text data analysis.
Summarize text: NLP tools can be used to summarize text. This can help to reduce the amount of text that needs to be analyzed, which can save time and improve the efficiency of text data analysis.
Overall, NLP can provide a number of benefits for text data analysis. These benefits include improved accuracy, efficiency, and scalability. As NLP technology continues to develop, it is likely that these benefits will only increase.
NLP Tasks in Text Data:
Tokenization: This involves breaking text down into individual words or phrases.
Part-of-speech tagging: This involves identifying the part of speech of each word or phrase.
Named entity recognition: This involves identifying named entities, such as people, places, and organizations.
Sentiment analysis: This involves identifying the sentiment of a piece of text, such as whether it is positive, negative, or neutral.
Topic modeling: This involves identifying the topics of a piece of text.
Preprocessing of text data by an NLP system. This involves a number of steps, such as:
Removing noise: This involves removing unwanted text, such as punctuation, stop words, and HTML tags.
Normalizing text: This involves converting text to a consistent format, such as lowercasing all words.
Stemming: This involves reducing words to their root form.
Lemmatization: This involves grouping together words that have the same meaning.
Contributions and Future Directions:
Advanced Natural Language Processing (NLP) Models
The utilization of text data has driven the development of sophisticated NLP models, such as transformer-based architectures like BERT and GPT. These models leverage large text corpora to learn language representations and can perform a range of tasks, including language translation, text summarization, and sentiment analysis with remarkable accuracy.

Chatbots and Virtual Assistants
Whether for customer service or personal assistance, chatbots and virtual assistants are gaining prominence in various industries. Text data plays a pivotal role in training these conversational AI systems, enabling them to engage in human-like interactions, understand user intents, and provide relevant responses in real-time.

Semantic Understanding and Contextual Understanding
Recent advancements in AI, fueled by text data, have allowed for improved semantic understanding and contextual understanding. Advanced models leverage pre-trained language representations, combined with fine-tuning on specific tasks, to grasp intricate semantic nuances and interpret context more accurately.

Steps to overcome challenges in AI
To overcome these challenges, preprocessing techniques are applied to raw text data before feeding it into AI systems . Tokenization, refers to splitting raw texts into individual words or tokens , stemming/lemmatization ,which reduces words to their base form enable better analysis by eliminating unnecessary variations such as plurals or verb conjugations.

Various methods exist for representing textual information as numerical vectors ,such as bag-of-words representation word embeddings Bag-of-words representation represents texts purely based on the presence or absence of specific words within them but fails to capture semantic relationships between words On the other hand, word embeddings encode words into dense vector representations that preserve semantic similarity between them (Laippala et al., 2021).

When training and evaluating text-based AI models,.Selecting a suitable algorithm/architecture plays a crucial role.The dataset needs to be split into training/validation/test sets ensure proper evaluation of the model. Performance metrics specific to textual tasks, such as accuracy, precision/recall, are used to assess the effectiveness of AI models.

Ethical considerations
Despite these advancements in utilizing text data in AI, there are ethical considerations that must be addressed. With the increasing amount of personal and sensitive information contained within textual data, it is crucial to handle this data with care and ensure privacy protection (Chaves et al., 2022). Additionally, biases or discriminatory outcomes may arise from using text data in AI applications if not properly monitored and controlled.
Conclusion:
Text data lies at the heart of AI-powered language processing, unlocking tremendous potential in understanding human communication. Despite the challenges it presents, it remains an indispensable resource for expanding the capabilities of AI systems. As researchers continue to explore new techniques and gather diverse data, text data will continue to enhance AI's ability to comprehend, generate, and interact with human language, driving us closer to the realization of truly intelligent systems.

Applications such as natural language processing, sentiment analysis, and chatbots rely heavily on text data for their functionality. However, challenges like ambiguity and limitations associated with relying solely on text need to be considered. Preprocessing techniques help enhance the quality of text data by tokenization , stemming/lemmatization

Different methods for representing textual information enable efficient processing by machine learning algorithms with bag-of-words representation capturing word presence/absence but lacking semantic relationships ,and word embeddings encoding semantic similarity between words being important examples.

Training and evaluating text-based AI models involve selecting appropriate algorithms/architectures , splitting datasets into training/validation/test sets ,and using performance metrics specific to textual tasks.Ethical considerations should also be taken into account when handling sensitive or personal information contained within textual data, addressing potential biases or discriminatory outcomes that may arise from utilizing this type of data.

Works Cited
Chen, Z., & Xia, H. "CrossData: Leveraging Text-Data Connections for Authoring Data Documents." CHI Conference on Human Factors in Computing Systems, CHI '22, 27 Apr. 2022, 

Chaves, A., Kesiku, C., & Garcia-Zapirain, B. "Automatic Text Summarization of Biomedical Text Data: A Systematic Review." Information, vol. 13, no. 8, 2022, p. 393,

Biswas, B., Mukhopadhyay, A., & Gupta, G. "Leadership in Action: How Top Hackers Behave" A Big-Data Approach with Text-Mining and Sentiment Analysis." Proceedings of the 51st Hawaii International Conference on System Sciences, Hawaii International Conference on System Sciences, 2018, 

Laippala, V., Egbert, J., Biber, D., & Kyröläinen, A.-J. "Exploring the role of lexis and grammar for the stable identification of register in an unrestricted corpus of web documents." Language Resources and Evaluation, vol. 55, no. 3, 2021, pp. 757-788, 

import numpy as np
import pandas as pd
import re
import matplotlib.pyplot as plt
df = pd.read_csv('/kaggle/input/2023-kaggle-ai-report/kaggle_writeups_20230510.csv')
df
Competition Launch Date	Title of Competition	Competition URL	Date of Writeup	Title of Writeup	Writeup	Writeup URL


df.info()
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 3127 entries, 0 to 3126
Data columns (total 7 columns):
 #   Column                   Non-Null Count  Dtype 
---  ------                   --------------  ----- 
 0   Competition Launch Date  3127 non-null   object
 1   Title of Competition     3127 non-null   object
 2   Competition URL          3127 non-null   object
 3   Date of Writeup          3127 non-null   object
 4   Title of Writeup         3127 non-null   object
 5   Writeup                  3125 non-null   object
 6   Writeup URL              3127 non-null   object
dtypes: object(7)
memory usage: 171.1+ KB
df.describe()
Competition Launch Date	Title of Competition	Competition URL	Date of Writeup	Title of Writeup	Writeup	Writeup URL
count	3127	3127	3127	3127	3127	3125	3127
unique	309	310	310	3117	2469	3115	3127
top	08/30/2022 17:23:07	Feedback Prize - English Language Learning		04/25/2020 13:17:57	1st place solution	<p>Thanks to my teammates @dott1718 and @chris..
freq	45	45	45	2	44	2	1
df.count()
Competition Launch Date    3127
Title of Competition       3127
Competition URL            3127
Date of Writeup            3127
Title of Writeup           3127
Writeup                    3125
Writeup URL                3127
dtype: int64
df.count().plot()
<Axes: >

import pandas as pd
import matplotlib.pyplot as plt

columns = ["Writeup", "Competition URL", "Competition Launch Date"]

for column in columns:
    df[column].value_counts().plot(kind="bar")

plt.title("write up Data")

plt.show()

print(arXiv_meta.shape)
arXiv_meta.head()
(2250223, 14)
id	submitter	authors	title	comments	journal-ref	doi	report-no	categories	license	abstract	versions	update_date	authors_parsed
0	0704.0001	Pavel Nadolsky	C. Bal\'azs, E. L. Berger, P. M. Nadolsky, C.-...	Calculation of prompt diphoton production cros...	37 pages, 15 figures; published version	Phys.Rev.D76:013009,2007	10.1103/PhysRevD.76.013009	ANL-HEP-PR-07-12	hep-ph	None	A fully differential calculation in perturba...	[{'version': 'v1', 'created': 'Mon, 2 Apr 2007...	2008-11-26	[[Balázs, C., ], [Berger, E. L., ], [Nadolsky,...
1	0704.0002	Louis Theran	Ileana Streinu and Louis Theran	Sparsity-certifying Graph Decompositions	To appear in Graphs and Combinatorics	None	None	None	math.CO cs.CG		We describe a new algorithm, the 
(
k
,
ℓ
)
-...	[{'version': 'v1', 'created': 'Sat, 31 Mar 200...	2008-12-13	[[Streinu, Ileana, ], [Theran, Louis, ]]
2	0704.0003	Hongjun Pan	Hongjun Pan	The evolution of the Earth-Moon system based o...	23 pages, 3 figures	None	None	None	physics.gen-ph	None	The evolution of Earth-Moon system is descri...	[{'version': 'v1', 'created': 'Sun, 1 Apr 2007...	2008-01-13	[[Pan, Hongjun, ]]
3	0704.0004	David Callan	David Callan	A determinant of Stirling cycle numbers counts...	11 pages	None	None	None	math.CO	None	We show that a determinant of Stirling cycle...	[{'version': 'v1', 'created': 'Sat, 31 Mar 200...	2007-05-23	[[Callan, David, ]]
4	0704.0005	Alberto Torchinsky	Wael Abu-Shammala and Alberto Torchinsky	From dyadic 
Λ
α
 to $\Lambda_{\a...	None	Illinois J. Math. 52 (2008) no.2, 681-689	None	None	math.CA math.FA	None	In this paper we show how to compute the $\L...	[{'version': 'v1', 'created': 'Mon, 2 Apr 2007...	2013-10-15	[[Abu-Shammala, Wael, ], [Torchinsky, Alberto, ]]

Lua
Материал из Википедии — свободной энциклопедии
Запрос «Луа» перенаправляется сюда; см. также другие значения.
Об использовании языка Lua в Википедии см. Википедия:Модули.

Стиль этой статьи неэнциклопедичен или нарушает нормы литературного русского языка.
Статью следует исправить согласно стилистическим правилам Википедии.
Lua
Изображение логотипа
Класс языка	язык программирования
Появился в	1993[3]
Автор	Роберту Иерузалимски,
Валдемар Селиш,
Луиш Энрике ди Фигейреду
Разработчик	Роберту Иерузалимски[1]
Расширение файлов	.lua[4][5], .luna, .lunaire или .anair
Выпуск	
5.4.7 (25 июня 2024)[2]
Испытал влияние	C++, Клу, Simple Object Language[вд], DEL[вд], Снобол, Модула, Модула-2 и Scheme
Лицензия	лицензия MIT[6][7]
Сайт	lua.org (англ.)​ (порт.)
ОС	кроссплатформенность[8]
Логотип Викисклада Медиафайлы на Викискладе
Lua (лу́а, с порт. — «луна»[9]) — скриптовый язык программирования, разработанный в подразделении Tecgraf (Computer Graphics Technology Group) Католического университета Рио-де-Жанейро[англ.] (Бразилия). Интерпретатор языка является свободно распространяемым, с открытым исходным кодом на языке программирования Си.

По идеологии и реализации язык Lua ближе всего к JavaScript, в частности, он также реализует прототипную модель ООП, но отличается паскалеподобным синтаксисом и более мощными и гибкими конструкциями. Характерной особенностью Lua является реализация большого числа программных сущностей минимумом синтаксических средств. Так, все составные пользовательские типы данных (массивы, структуры, множества, очереди, списки) реализуются через механизм таблиц, а механизмы объектно-ориентированного программирования, включая множественное наследование — с использованием метатаблиц, которые также отвечают за перегрузку операций и ряд других возможностей.

Lua предназначен для пользователей, не являющихся профессиональными программистами, вследствие чего большое внимание уделено простоте дизайна и лёгкости обучения. Язык широко используется для создания тиражируемого программного обеспечения (например, на нём написан графический интерфейс пакета Adobe Lightroom). Также получил известность как язык программирования уровней и расширений во многих играх[10], в том числе Garry’s Mod, Roblox, Minetest.


Содержание
1	История
2	Общая характеристика
3	Синтаксис
3.1	Лексика
3.2	Комментарии
3.3	Типы данных
3.4	Операции
3.5	Таблицы
3.6	Замыкания
4	Средства и методы программирования
4.1	Метатаблицы
4.2	Объектно-ориентированное программирование
5	Примеры кода
6	Реализация
7	Использование
7.1	Игры
7.2	LuaTeX
7.3	RPM
8	IDE
9	См. также
10	Примечания
11	Литература
12	См. также
13	Примечания
14	Ссылки
14.1	Lua на русском
История
Язык разработан подразделением Tecgraf (группа технологий компьютерной графики) Католического университета Рио-де-Жанейро в Бразилии, история языка ведёт отсчёт с 1993 года. Авторы языка — Роберту Иерузалимски, Луиш Энрике ди Фигейреду (Luiz Henrique de Figueiredo) и Валдемар Селиш (Waldemar Celes). Lua распространяется свободно, с открытым исходным кодом на языке Си.

Как отметил Луиш Энрике ди Фигейреду, Lua — единственный язык программирования, разработанный в развивающейся стране и получивший всемирное признание, которое, в частности, выразилось в приглашении на конференцию HOPL[англ.][11].

Историческими родителями языка были языки конфигурирования и описания данных SOL (Simple Object Language) и DEL (Data-Entry Language)[12], они были независимо разработаны в Tecgraf в 1992—1993 годах для добавления некоторой гибкости в два отдельных проекта (оба были интерактивными графическими приложениями для конструкторских нужд в компании Petrobras). В SOL и DEL отсутствовали какие-либо управляющие конструкции, и Petrobras чувствовал растущую необходимость в добавлении к ним полноценного программирования.

Как пишет автор языка в The Evolution of Lua:[13]

В 1993 году единственным реальным претендентом был Tcl, который был специально создан для встраивания в приложения. Однако у Tcl был непривычный синтаксис, не было хорошей поддержки описания данных, и запускался он только на платформах Unix. Мы не рассматривали Лисп или Scheme из-за их недружелюбного синтаксиса. Python был ещё во младенческом возрасте. В атмосфере «сделай сам», которая тогда царила в Tecgraf, было вполне естественно, что мы решили разработать свой собственный скриптовый язык. Из-за того, что большинство пользователей не было профессиональными программистами, языку следовало избегать замысловатого синтаксиса и семантики. Реализация нового языка должна быть легко портируема, так как клиенты Tecgraf имели очень разнообразные платформы. Наконец, поскольку мы ожидали, что другим продуктам Tecgraf также понадобится встроенный скриптовый язык, новый язык должен следовать примеру SOL и предоставляться в виде библиотеки с API на C.

Lua 1.0 была спроектирован таким образом, что конструкторы объектов, тогда чуть отличавшиеся от текущего лёгкого и гибкого стиля, включали в себя синтаксис языка SOL (отсюда название Lua: по-португальски sol — «солнце», lua — «луна»). Управляющие конструкции Lua в основном заимствованы из Модулы-2 (if, while, repeat/until), хотя на них также повлияли Клу (параллельное присваивание, множественное возвращаемое значение функции как более простая альтернатива вместо передачи параметров по ссылке или явных указателей), C++ («отличная идея объявлять локальные переменные лишь тогда, когда они нужны»), Снобол и awk (ассоциативные массивы). Создатели Lua также признают, что единый вездесущий механизм структурирования данных в Лиспе и Scheme (связный список) оказал большое влияние на их решение о выборе таблиц в качестве основной структуры данных для Lua[14].

Версии Lua вплоть до 5.0 выпускались под лицензией, подобной лицензии BSD. Начиная с версии 5.0 и выше Lua распространяется под лицензией MIT. Обе лицензии являются разрешительными и практически идентичны.

Общая характеристика
Язык предназначен для использования в качестве отдельного либо встроенного в приложение скриптового языка. Он изначально создавался достаточно простым и компактным, чтобы поместиться на различных платформах и обеспечить приемлемую производительность. Также при проектировании учитывались требования простоты обучения и возможности использования не профессиональными программистами.

Lua — это процедурный динамически типизированный модульный язык с автоматическим управлением памятью. Включает базовые элементы для поддержки функционального и объектного стилей программирования. Таким образом, язык можно cчитать мультипарадигменным. Встроенные средства параллельного программирования позволяют писать многопоточные программы только средствами языка, не обращаясь к API операционной системы или внешним библиотекам. Так как основным назначением Lua является встраивание, он имеет эффективные средства межъязыкового взаимодействия, ориентированные, главным образом, на вызов библиотек Си и на работу в Си-окружении.

Язык поддерживает небольшое количество встроенных типов данных: логические значения, числа, строки, функции, потоки. Типичные комбинированные структуры данных, такие как массивы, наборы, списки и записи, отсутствуют, вместо всех их используется одна базовая структура Lua — таблица (см. ниже). Отдельный тип userdata предназначен специально для низкоуровневого программирования и обмена данными с внешним кодом на других языках. Функции в Lua являются объектами первого класса, могут присваиваться и передаваться в параметрах. Поддерживаются замыкания, есть возможность создания функций высших порядков. Объектная система прототипная, отсутствует явная поддержка наследования, однако оно легко реализуется с помощью метатаблиц.

Вообще, Lua стремится обеспечить гибкие метафункции, которые могут быть расширены по мере необходимости, а не поставлять набор функций, специфичных для конкретной парадигмы программирования. Как результат, основа языка проста и легко адаптируема к большинству приложений. Предоставляя минимальный набор базовых средств, Lua пытается найти баланс между мощностью и размером.

Синтаксис
Синтаксис Lua в основном построен на основе поздних паскалеподобных языков, таких как Модула-2 или Оберон. Формат записи текста — свободный, команды в тексте программы разделяются любыми пробельными символами. Допускается, но не является обязательным применение точки с запятой для разделения операций.

В одном из интервью Роберту Иерузалимски заметил, что синтаксис Lua — это компромиссное решение, которое он был вынужден принять, чтобы упростить освоение языка непрофессиональными программистами. Он охарактеризовал этот синтаксис как «довольно многословный», отметив, что лично для себя предпочёл бы более краткую нотацию[11].

Лексика
Основной алфавит языка — английский, в строковых литералах допускается использование символов других языков. Идентификаторы могут состоять из букв, цифр и знака подчёркивания, но не могут начинаться с цифры или совпадать с одним из ключевых слов. Руководство по языку не рекомендует использовать идентификаторы, начинающиеся с подчёркивания, так как такие идентификаторы используются для системных целей.

Язык регистрозависимый, все ключевые слова пишутся в нижнем регистре, идентификаторы, различающиеся только регистром букв, считаются различными. Следующие 22 ключевых слова не могут быть использованы для имён[15]:

  and   break  do     else elseif 
  end   false  goto   for  function 
  if    in     local  nil  not 
  or    repeat return then true
  until while
Комментарии
Для комментариев используется синтаксис, аналогичный реализованному в Аде, SQL и VHDL:

-- Простой однострочный комментарий в Lua начинается с двойного минуса и продолжается до конца строки.
dim = { "one", "two", "three" } -- Строчный комментарий не обязан начинаться с начала строки, 
                                -- он может следовать за другими языковыми конструкциями,
                                -- поясняя их.
--[[Многострочный комментарий начинается с идущих подряд за двумя минусами двух открывающихся квадратных скобок
  и продолжается до двух подряд закрывающихся квадратных скобок. Как здесь: ]] 

-- Интересный эффект можно получить сочетанием строчных и многострочных комментариев: 
--[[ Чтобы раскомментировать код ниже, достаточно добавить в этой строке пробел между минусами и скобками.
for i=1,#dim do
  print(dim[i])
end
-- Если выше между минусами и скобками будет добавлен пробел, то 
--]] -- здесь конец многострочного комментария превратится в обычный строчный
Типы данных
Lua представляет собой язык с неявным динамическим определением типов данных. Переменная языка может содержать значения любого типа. Все значения в Lua могут храниться в переменных, использоваться в качестве аргументов при вызове функций и возвращаться в виде результата их выполнения.

В Lua восемь основных типов:

nil (неопределенный)
boolean (логический)
number (числовой)
string (строковый)
function (функция)
userdata (пользовательские данные)
thread (поток)
table (таблица)
nil — это тип значения nil [пустое значение], главное свойство которого — отличаться от всех остальных значений и обозначать отсутствие пригодного значения.

К типу boolean относятся значения false (ложь) и true (истина).

К типу number относятся обычно вещественные числа (double). В первых версиях Lua целые числа не выделялись в отдельный тип; такое решение мотивируется тем, что вещественное представление позволяет точно представить достаточно широкий диапазон целых чисел. Начиная с версии 5.3 добавлена возможность явного определения целого или вещественного формата числа. Внутреннее представление чисел можно изменить при сборке интерпретатора.

Тип string обозначает массивы символов. Строки Lua могут содержать любые 8-битные символы, включая ноль ('\0'). Строки неизменяемы. Строковые литералы могут записываться в одинарных или двойных кавычках, служебные символы помещаются в них в стандартной для C нотации с ведущим обратным слэшем. Многострочные литералы ограничиваются двумя подряд открывающимися и двумя подряд закрывающимися квадратными скобками.

Встроенная в язык поддержка Юникода отсутствует, хотя допускается использование символов UTF-8 в строковых литералах, а сама система представления UTF-8 позволяет вводить, выводить и частично обрабатывать строки в этой кодировке стандартными системными средствами. В последние версии Lua входит библиотека utf8, обеспечивающая более развитую поддержку UTF-8, существуют также библиотеки сторонних разработчиков, предоставляющие средства работы с Юникод-строками в различных кодировках.

Функции в Lua являются полноправными объектами, допускающими присваивание, передачу функции в параметре и возврат функции как одного из значений. Тип thread имеют сопрограммы, тип userdata предназначен для представления внешних данных, полученных или предоставляемых из/в код на другом языке (главным образом, на C/C++).

Операции
Присваивание
Оператором присваивания служит символ =. Подобно таким скриптовым языкам, как Perl, Python, Ruby и Icon, допускает параллельное присваивание. В простейшем случае это позволяет писать выражения вида:
  x, y = y, x
В отличие, например, от языка Go, параллельное присваивание в Lua очень либерально, оно не требует точного соответствия числа переменных числу значений. Если значений больше, чем переменных, то последние значения отбрасываются, если значений меньше — последние переменные в списке получают значение nil.
Сравнения и логические операторы
Операторы сравнения: <, >, <=, >=, ==, ~= (последние два означают, соответственно, сравнение на равенство и на неравенство). Сравнения на равенство и неравенство применимы к любым типам данных, прочие — только к строкам и числам.
Логические операторы: and, or, not — логические «и», «или» и «не», соответственно, могут применяться к значениям любых типов и возвращают true либо false. В параметрах этих операция значения nil и false считаются ложными, любые другие значения — истинными. В отличие от C и ряда других языков, даже числовой нуль (0) или пустая строка ("") с точки зрения логических операторов представляют значение «истина». Вычисление бинарных логических операторов традиционно выполняется до тех пор, пока результат не будет определён, причём в качестве результата возвращается последнее вычисленное подвыражение. Поэтому их можно использовать как тернарный оператор ?: в языке Си:
-- аналогично r = ( a < b)? f(a) : f(b); в Си, 
r = ( a < b ) and f(a) or f(b)
-- r получит значение функции f() от меньшего из двух значений: a и b,
-- при условии, что f(a) не равно nil или false.
Арифметические операторы
+ — сложение;
- — вычитание;
* — умножение;
/ — деление;
- — унарный минус;
% — остаток от деления;
^ — возведение в степень.
Все арифметические операторы поддерживают вещественные операнды, давая предсказуемый результат. Так, x^0.5 возвращает квадратный корень из x, x^(-1/3) — значение, обратное кубическому корню из x. Оператор % определяется выражением: a % b = a - math.floor(a / b) * b, где функция math.floor() вычисляет целую часть своего аргумента. Для целых аргументов его результат вполне обычен. Для вещественного делимого нужно учитывать, что операция не производит никаких дополнительных округлений или отбрасывания дробной части, поэтому результат сохранит дробную часть делимого. Например, math.pi % 2 вернёт не 1, а 1.1415926535898. Такая реализация даёт некоторые дополнительные возможности. Например, для усечения x до трёх знаков после запятой достаточно взять выражение x = x % 0.001

Таблицы
Таблица в Lua — это динамический гетерогенный ассоциативный массив, то есть множество пар «ключ-значение». Ключами могут быть значения любых типов Lua, кроме nil. Ключи также могут быть литералами (идентификаторами) Lua. Запись nil в элемент таблицы равносильна удалению данного элемента.

Таблицы являются единственным в Lua составным типом данных. Они являются фундаментом для всех пользовательских типов данных, таких как структуры, массивы, множества и другие:

-- Таблица общего вида:
empty = {} -- Пустая таблица
empty[1] = "первый"        -- Добавление элемента с целым индексом
empty[3] = "второй"        -- Добавление элемента с целым индексом
empty["третий"] = "третий" -- Добавление элемента со строковым индексом
empty[1] = nil             -- Удаление элемента из таблицы  

-- Классический массив - строки индексируются по умолчанию целыми числами, начиная с 1
days1 = {"понедельник", "вторник", "среда", "четверг", "пятница", "суббота", "воскресенье"}

-- Массив с произвольной индексацией
days2 = {[0]="воскресенье", [1]="понедельник", [2]="вторник", [3]="среда", [4]="четверг", [5]="пятница", [6]="суббота"}

-- Запись (структура) - значения различных типов индексируются литералами
person = {tabnum = 123342,                   -- Табельный номер
          fio = "Иванов Степан Васильевич",  -- Ф.И.О.
          post = "слесарь-инструментальщик", -- Должность
          salary = 25800.45,                 -- Оклад
          sdate = "23.10.2013",              -- Дата приёма на работу
          bdate = "08.08.1973"}              -- Дата рождения 

pfio = person.fio --Обращение к элементу структуры.

-- Множество - индексы используются для хранения значений
workDays = {["понедельник"]=true, ["вторник"]=true, ["среда"]=true, ["четверг"]=true, ["пятница"]=true}
workDays["суббота"] = true -- Добавление субботы в число рабочих дней
workDays["среда"] = nil    -- По средам больше не работаем

-- Проверка, является ли d рабочим днём
if workDays[d] then 
  print (d.." - рабочий день")
else
  print (d.." - выходной день")
end
Мультимножества (множества, которые могут содержать более одного экземпляра одного и того же элемента) реализуются аналогично последнему примеру, только в качестве значений используются не логические, а целые — счётчики числа соответствующих элементов в множестве. Связанные списки могут быть представлены как массивы двухэлементных массивов, хранящих значение и ссылку на следующий элемент. Многомерные массивы могут быть реализованы как массивы массивов. Более сложные структуры, такие как очереди, графы, сети также реализуются на основе таблиц, конкретный способ реализации определяется задачей.

Замыкания
Lua поддерживает концепцию замыканий, например:

function makeaddfunc(x)
  -- Возвращает новую анонимную функцию, которая добавляет x к аргументу
  return function(y)
    -- Когда мы ссылаемся на переменную x, которая вне текущей области,
    -- и время жизни которой меньше, чем этой анонимной функции, 
    -- Lua создаёт замыкание.
    return x + y
  end
end
plustwo = makeaddfunc(2) -- т.е plustwo = function(y) return 2 + y end
print(plustwo(5)) -- Выводит 7
Каждый раз, когда вызывается makeaddfunc, создаётся новое замыкание для переменной x, так что каждая возвращаемая анонимная функция будет ссылаться на свой параметр x. Как и у любого другого объекта Lua, временем жизни замыкания управляет сборщик мусора.

Средства и методы программирования
Метатаблицы
Механизм метатаблиц обеспечивает многие возможности, в других языках предоставляемые за счёт введения отдельных синтаксических механизмов. Метатаблицы по структуре являются обычными таблицами Luа, подчиняющимися всем правилам и ограничениям языка. Особенность их состоит в применении. Метатаблица хранит дополнительные метаданные типов и объектов, то есть информацию о параметрах и функциях, связанных с ними. Сведения, хранящиеся в метатаблицах, используются интерпретатором Lua, их использование позволяет изменить или расширить функциональность программных объектов.

Метатаблица в Lua может быть связана со значением любого типа. Скалярные типы данных (все, кроме userdata и таблиц) имеют общие метатаблицы для каждого типа. Таблицы и значения типа userdata имеют индивидуальные ссылки на метатаблицы в каждом экземпляре. Изменять метатаблицы всех типов, кроме таблиц, можно только посредством внешнего кода на Си. Непосредственно из Lua доступны только метатаблицы таблиц.

Созданная «с нуля» таблица Lua не имеет метатаблицы (её ссылка на метатаблицу равна nil). Но метатаблица для неё может быть в любой момент создана либо получена от другой таблицы. Встроенная функция getmetatable(t) возвращает метатаблицу таблицы t, а функция setmetatable(t, m) устанавливает для таблицы t метатаблицу m.

Для метатаблиц документирован набор полей, которые могут использоваться интерпретатором языка. Для указания на особую роль этих полей для них принято специальное правило именования: их идентификаторы начинаются с двух подчёркиваний. Некоторые из таких полей содержат информацию о специфических свойствах объекта, к которому относится метатаблица. Например, параметр __mode, когда он задан, может превратить таблицу в слабую, то есть таблицу, все ссылки на объекты которой являются слабыми ссылками. Но значениями большинства возможных полей метатаблицы являются так называемые метаметоды, то есть ссылки на функции, которые интерпретатор вызывает при определённых условиях. Общая логика использования метаметодов интерпретатором состоит в следующем: когда интерпретатор встречает в программе операцию, которая не определена для объекта-операнда, он обращается к связанной с операндом метатаблице, находит в ней соответствующий метаметод и вызывает его.

--[[ Создание операции сложения для таблиц ]]
-- Операнды
t1 = {1,2,3}     
t2 = {10,20,30}  
-- Создание метатаблицы
mt = {}
-- Запись в метатаблицу метаметода "__add"
mt.__add = function(a, b) 
             local res = {}
             for k in pairs(a) do res[k] = a[k] + b[k] end
             return res
           end
-- Привязка метатаблицы к таблице t1
setmetatable(t1, mt)

-- Теперь сложение таблиц - корректная операция
t3 = t1 + t2
-- соединяем с t3 метатаблицу с метаметодом __tostring
setmetatable(t3, {__tostring=function(t) 
                    local res = "\n"
                    for _,v in pairs(t) do 
                      res = res .. tostring(v) .. "-"
                    end
                    return res.."\n"
                  end})
-- В результате будет выведено: "11-22-33-"
for _,v in ipairs(t3) do 
  io.write (v,",")
end
print(tostring(t3))  -- выведет "11,22,33,"
В Lua поддерживаются метаметоды для всех арифметических операций и операций сравнения, так что с их помощью можно реализовать арифметику для любых объектов, созданных программистом. Помимо стандартных, можно использовать так называемые «библиотечные» метаметоды, которые поддерживаются не ядром языка, а конкретными библиотеками. В примере выше это метаметод __tostring, поддерживаемый библиотекой string; этот метод выполняет конвертацию таблицы в строку.

Наибольший интерес представляет поле __index. Обращение к нему происходит тогда, когда интерпретатор пытается прочитать элемент таблицы, но не находит его. Поле __index может ссылаться либо на таблицу, либо на метод. В первом случае интерпретатор, не найдя искомого значения в основной таблице, будет искать его в таблице __index. Во втором вместо обращения к таблице будет происходить вызов этого метода. Задавая таблицы или метаметоды для данного поля, в Lua можно реализовать наследование, сокрытие данных объекта, отслеживание операций с данными таблицы и многое другое.

Объектно-ориентированное программирование
Основой для ООП в Lua являются таблицы. В принципе, таблица и есть объект в ООП-смысле, так как она может иметь поля, именованные с помощью идентификаторов, и хранить в этих полях произвольные значения (свойства объекта) и функции для реализации поведения объекта (методы объекта). Некоторый синтаксический сахар, предоставляемый Lua, делает описание и обращение с объектами более привычным для программистов, имеющих опыт работы с традиционными ООП-языками. Понятия «класса» в Lua нет, поэтому описывается отдельный объект и все поля и методы относятся именно к нему. Свойства описываются аналогично элементам таблицы с ключами-идентификаторами, методы — как поля-функции. Подобно классическому Оберону, описание методов включает явное указание в первом параметре так называемого «получателя» — параметра, который при вызове метода ссылается на объект, для которого он вызван. Но, помимо стандартного обращения к полю таблицы через точку, которое требует и в вызове метода явно указывать получателя, Lua поддерживает дополнительный синтаксис: когда в вызове или описании метода его заголовок записываются в виде «Объект:метод», то получатель не указывается. При этом в теле метода он всё равно доступен под именем self:

-- Объект
Account = {                     -- Объект "счёт"
  id, name, balance=0,          -- свойства объекта: номер, название, баланс
  credit = function (self, v)   -- метод "расход" - описание внутри объекта с явным указанием получателя
    if self.balance < v then error "Недостаточно денег на счёте" end
    self.balance = self.balance - v
  end
}

function Account:debet(v)       -- метод "приход" - внешнее сокращённое описание (self не указывается)
  self.balance = self.balance + v
end

Account.debet(Account, 10000)   -- вызов метода - полный вариант
Account:credit(5000)            -- вызов метода - сокращённый вариант
Наследование, в том числе множественное, реализуется с помощью метатаблиц и метаметодов. Также с помощью метаметодов можно реализовать сокрытие данных и контролируемый доступ к полям таблицы-объекта. Если сравнивать данный подход с другими языками, где всё вышеперечисленное реализуется с помощью специальных языковых средств, то можно заметить, что реализация Lua сложнее и требует более тщательного кодирования, но обеспечивает бо́льшую гибкость и упрощает интерпретатор.

Примеры кода
Классическая программа «Hello, world!» на Lua выглядит так:

print("Hello, world!")
Факториал — пример рекурсивной функции:

function factorial(n)
  if n == 0 then
    return 1
  else
    return n * factorial(n - 1)
  end
end
Цикл со счётчиком:

for i = 1,5 do
     -- инструкции/операции
end
Работа с функциями как с объектами первого класса демонстрируется в следующем примере, в котором модифицируется поведение функции print:

do
  local oldprint = print   -- Сохраняем текущую функцию print как oldprint
  function print(s)        -- Переопределяем функцию print
    if s == "foo" then
      oldprint("bar")
    else
      oldprint(s)
    end
  end
end
Любой будущий вызов print теперь будет перенаправлен к новой функции, и благодаря поддержке в Lua лексического контекста старая функция print будет доступна только посредством новой, модифицированной функции print. Lua также поддерживает замыкания, как описано выше, в соответствующем разделе.

Ключевой особенностью Lua является расширяемая семантика, механизм метатаблиц даёт большие возможности по настройке уникального поведения для таблиц Lua. В следующем примере демонстрируется «бесконечная» таблица. Для любого 
�
{\displaystyle n} fibs[n] даст 
�
{\displaystyle n}-е число Фибоначчи с использованием мемоизации.

fibs = { 1, 1 } -- Первоначальные значения для fibs[1] и fibs[2].
setmetatable(fibs, { 
  __index = function(name, n)            -- Вызов функции, если fibs[n] не существует.
    name[n] = name[n - 1] + name[n - 2]  -- Расчёт и мемоизация fibs[n].
    return name[n]                       
  end
})
Lua позволяет использовать логические операторы and и or для ввода тернарных конструкций, как, например, в C#, или обращение к одному из существующих объектов.

do
    local num = tonumber(io.read()) -- Записывание в переменную введённой из консоли информации и преобразование её к целочисленному типу
    print(num == 1 and "Вы ввели правильное число" or "Вы ввели неправильное число") -- Если переменная num равняется 1, тогда в консоли выведится текст после and, во всех остальных случаях после or
end
Обращение к существующей таблице и получение значения по первому индексу:

do
    local tbl = nil
    local tbl2 = {1}
    print( (tbl or tbl2)[1] ) -- Выведится число 1, так как в таблице tbl2 на индексе 1 присвоено это значение
end
Вызов функции из одной из существующих таблиц:

do
    local tbl = nil
    local tbl2 = {}
    tbl2.DoSomething = function() print("Делать что-то") end
    (tbl or tbl2).DoSomething()
end
Реализация
Как и многие интерпретируемые языки программирования, реализация Lua имеет отдельно компилятор с исходного языка в исполняемый байт-код и виртуальную машину для исполнения сгенерированного байт-кода. Причём байт-код — это не команды стековой машины, а команды некоего виртуального процессора с несколькими регистрами, что повышает эффективность исполнения. В стандартной виртуальной машине Lua используется распределение памяти со сборкой мусора (аналогично Java или .NET).

Lua использует единый строковый пул, что позволяет снизить расходы памяти на хранение строк.

Для задач, критичных по времени, имеется JIT-компилятор Lua — LuaJIT[16]. Также разработан компилятор llvm-lua[17], генерирующий код для виртуальной машины LLVM, предоставляющей возможность последующей компиляции в очень эффективный машинный код для процессоров различной архитектуры.

Использование
См. также категорию: Программное обеспечение, использующее Lua
В настоящее время используется в различных проектах, где требуется встроить достаточно быстрый и нетрудный в освоении скриптовый язык программирования — например, в разработке игр, где Lua часто используется в качестве прослойки между игровым движком и данными для написания сценариев поведения и взаимодействия объектов. Благодаря компактности применим и в портативных устройствах, в частности, один из графических микрокалькуляторов Texas Instruments, а именно, TI-Nspire CX, использует язык LUA помимо традиционного для такого класса устройств Бейсика.

Игры
Первыми в разработку компьютерных игр язык Lua внедрила компания LucasArts начиная с игры Grim Fandango[18]. Авторы языка в своём докладе на конференции HOPL[англ.] вспоминают, что в январе 1997 они получили сообщение от Брета Могилефски, главного разработчика Grim Fandango, где он писал, что, прочитав о языке в статье 1996 года в Dr. Dobb’s Journal, он планирует заменить используемый ими самодельный скриптовый язык SCUMM на Lua[19]. В результате им был создан игровой движок GrimE, используемый также более поздним квестом от LucasArts — Escape from Monkey Island.

В 2003 году в результате опроса на сайте GameDev.net Lua был признан самым популярным скриптовым языком для разработки игр[10].

Примером игры, программируемой с помощью Lua, является World of Warcraft[20][21]. На языке Lua описываются уровни игры-головоломки Enigma[22].

Доступен ряд свободных игровых движков, программируемых на Lua, таких, как Defold[23][неавторитетный источник][значимость факта?], аркадный движок LÖVE[24][25], игровой конструктор Novashell[26] и ориентированный на квесты (преимущественно — текстовые) INSTEAD[27].

Также используется в авиасимуляторе X-Plane, в движке X-Ray для S.T.A.L.K.E.R[28].

Для популярной игры Minecraft созданы модификации ComputerCraft и его более совершенный аналог OpenComputers, которые добавляют компьютеры, программируемые на языке Lua[29].

Известная игра Garry's Mod программируется, а также поддерживает модификации, написанные на Lua.

Команда Croteam (разработчики Serious Sam и The Talos Principle) использует Lua в скриптах начиная с версии Serious Engine 3.5[30].

Для игры GTA: San Andreas создаются модификации, написанные на языке Lua и поддерживаемые плагином Moonloader.[31] Также игра Multi Theft Auto поддерживает программирование скриптов на языке Lua.

Игровая платформа Roblox использует Lua в качестве языка кодирования игр и управления игровой средой[32].

Сообществом игры Satisfactory создан мод Ficsit-Networks, дающий возможность программировать какие-либо действия на языке Lua[33].

В игре Factorio используется Lua для создания модов.[34][35]

В игре Dual Universe используется для внутри игровой механики и программирования игровых блоков[значимость?]

LuaTeX
Программа компьютерной вёрстки LuaTeX, расширенная версия pdfTeX, использует Lua как встроенный скриптовый язык[36].

RPM
Пакетный менеджер RPM содержит встроенный интерпретатор Lua[37].

IDE
Существует как минимум две «родные» среды разработки для Lua:

ZeroBrane Studio[38] — мультиплатформенная среда разработки, написанная на самом Lua.
Decoda — среда разработки под Windows, написанная на C++, с богатыми возможностями отладки Lua-скриптов, в том числе в работающих приложениях. На 2018 год последний выпуск среды датировался 2014 годом и имеет статус бета-версии.
Кроме того, Lua поддерживается некоторыми универсальными IDE, в частности:

Geany;
Lua Development Tools[39] для среды Eclipse;
плагин EmmyLua для среды IntelliJ IDEA, также оснащённый проверкой синтаксиса «на лету» и развитой системой аннотаций типов[40];
расширение для Visual Studio Code с поддержкой IntelliSense, подсветки синтаксиса, форматирования кода, отладки.
Существовал модуль поддержки Lua для среды NetBeans, но его развитие прекратилось в 2013 году и он доступен только для версии NetBeans 7.4 и более ранних. В NetBeans 8 плагин не поддерживается.

C++ (читается си-плюс-плюс[2][3]) — компилируемый, статически типизированный язык программирования общего назначения.

Поддерживает такие парадигмы программирования, как процедурное программирование, объектно-ориентированное программирование, обобщённое программирование. Язык имеет богатую стандартную библиотеку, которая включает в себя распространённые контейнеры и алгоритмы, ввод-вывод, регулярные выражения, поддержку многопоточности и другие возможности. C++ сочетает свойства как высокоуровневых, так и низкоуровневых языков[4][5]. В сравнении с его предшественником — языком C — наибольшее внимание уделено поддержке объектно-ориентированного и обобщённого программирования[5].

C++ широко используется для разработки программного обеспечения, являясь одним из самых популярных языков программирования[мнения 1][мнения 2]. Область его применения включает создание операционных систем, разнообразных прикладных программ, драйверов устройств, приложений для встраиваемых систем, высокопроизводительных серверов, а также компьютерных игр. Существует множество реализаций языка C++, как бесплатных, так и коммерческих и для различных платформ. Например, на платформе x86 это GCC, Clang, Visual C++, Intel C++ Compiler, Embarcadero (Borland) C++ Builder и другие. C++ оказал огромное влияние на другие языки программирования, в первую очередь на Java и C#.

Синтаксис C++ унаследован от языка Си. Изначально одним из принципов разработки было сохранение совместимости с Си. Тем не менее, C++ не является в строгом смысле надмножеством Си: множество программ, которые могут одинаково успешно транслироваться как компиляторами Си, так и компиляторами C++, довольно велико, но не включает все возможные программы на Си.


Содержание
1	История
1.1	Создание
1.2	Развитие и стандартизация языка
1.3	История названия
1.4	Философия C++
2	Обзор языка
2.1	Типы
2.2	Наследование
2.3	Полиморфизм
2.4	Инкапсуляция
2.4.1	Друзья
2.5	Специальные функции
2.6	Шаблоны
3	Стандартная библиотека
3.1	Общая структура
3.2	Состав
3.3	Реализации
4	Отличия от Си
4.1	Совместимость с Си
4.2	Новые возможности
4.3	C++ не включает в себя C
4.4	Средства C, которых рекомендуется избегать
5	Дальнейшее развитие
5.1	Общие направления развития C++
5.2	Стандарт C++11: дополнения в ядре языка
6	Примеры программ
6.1	Пример № 1
6.2	Пример № 2
7	Сравнение с альтернативными языками
7.1	C++ и Ада
7.2	C++ и Java
7.3	C++ и C
7.4	C++ и функциональные и скриптовые языки
8	Критика
8.1	О критике C++ в целом
8.2	Критика отдельных элементов и концепций
8.2.1	Контроль за поведением
8.2.2	Компонентное и объектно-ориентированное программирование
8.2.3	Метапрограммирование
8.2.4	Кроссплатформенность
8.3	Отсутствие возможностей
8.4	Избыточные и опасные возможности
8.4.1	Встроенные средства обхода ограничений
8.4.2	Неконтролируемая макроподстановка
8.4.3	Проблемы перегрузки
8.5	Вычислительная эффективность
8.5.1	Результирующий объём исполнимого кода
8.5.2	Потенциал оптимизации
8.5.3	Эффективное управление памятью
8.6	Результативность
8.6.1	Качество и культура программирования
8.6.2	Исправление исправного
8.6.3	Сложность ради самой сложности
8.6.4	Саботаж
8.6.5	Ненадёжность продукта
8.6.6	Менеджмент проектов
9	Влияние и альтернативы
10	Примечания
11	Литература
12	Ссылки
История
Исторический этап развития[6]	Год
Язык BCPL	1966
Язык Би (оригинальная разработка Томпсона под UNIX)	1969
Язык Си	1972
«Си с классами»	1980
C84	1984
Cfront (выпуск E)	1984
Cfront (выпуск 1.0)	1985
Множественное/виртуальное наследование	1988
Обобщённое программирование (шаблоны)	1991
ANSI C++ / ISO-C++	1996
ISO/IEC 14882:1998	1998
ISO/IEC 14882:2003	2003
C++/CLI	2005
TR1	2005
C++11	2011
C++14	2014
C++17	2017
C++20	2020
C++23	2023
C++26	2024
Создание
Язык возник в начале 1980-х годов, когда сотрудник фирмы Bell Labs Бьёрн Страуструп придумал ряд усовершенствований к языку Си под собственные нужды[7]. Когда в конце 1970-х годов Страуструп начал работать в Bell Labs над задачами теории очередей (в приложении к моделированию телефонных вызовов), он обнаружил, что попытки применения существовавших в то время языков моделирования оказались неэффективными, а применение высокоэффективных машинных языков слишком сложно из-за их ограниченной выразительности. Так, язык Симула имеет такие возможности, которые были бы очень полезны для разработки большого программного обеспечения, но работает слишком медленно, а язык BCPL достаточно быстр, но слишком близок к языкам низкого уровня и не подходит для разработки большого программного обеспечения.

Вспомнив опыт своей диссертации, Страуструп решил дополнить язык C (преемник BCPL) возможностями, имевшимися в языке Симула. Язык Си, будучи базовым языком системы Unix, на которой работали компьютеры Bell, является быстрым, многофункциональным и переносимым. Страуструп добавил к нему возможность работы с классами и объектами. В результате практические задачи моделирования оказались доступными для решения как с точки зрения времени разработки (благодаря использованию cимулаподобных классов), так и с точки зрения времени вычислений (благодаря быстродействию C). В первую очередь в C были добавлены классы (с инкапсуляцией), наследование классов, строгая проверка типов, inline-функции и аргументы по умолчанию. Ранние версии языка, первоначально именовавшегося «C with classes» («Си с классами»), стали доступны с 1980 года.

Разрабатывая «Си с классами», Страуструп написал программу cfront — транслятор, перерабатывающий исходный код своего языка в исходный код простого Си. Это позволило работать над новым языком и использовать его на практике, применяя уже имевшуюся в unix-инфраструктуру для разработки на Си. Новый язык неожиданно для автора приобрёл большую популярность среди коллег и вскоре Страуструп уже не мог лично поддерживать его, отвечая на тысячи вопросов.

К 1983 году в язык были добавлены новые возможности, такие как виртуальные функции, перегрузка функций и операторов, ссылки, константы, пользовательский контроль над управлением свободной памятью, улучшенная проверка типов и новый стиль комментариев (//). Получившийся язык уже перестал быть просто дополненной версией классического C и был переименован из C с классами в «C++». Его первый коммерческий выпуск состоялся в октябре 1985 года.

До начала официальной стандартизации язык развивался в основном силами Страуструпа в ответ на запросы программистского сообщества. Функцию стандартных описаний языка выполняли написанные Страуструпом печатные работы по C++ (описание языка, справочное руководство и так далее). Лишь в 1998 году был ратифицирован международный стандарт языка C++: ISO/IEC 14882:1998 «Standard for the C++ Programming Language»; после принятия технических исправлений к стандарту в 2003 году — следующая версия этого стандарта — ISO/IEC 14882:2003[8].

Развитие и стандартизация языка
В 1985 году вышло первое издание «Языка программирования C++», обеспечивающее первое описание этого языка, что было чрезвычайно важно из-за отсутствия официального стандарта. В 1989 году состоялся выход C++ версии 2.0. Его новые возможности включали множественное наследование, абстрактные классы, статические функции-члены, функции-константы и защищённые члены. В 1990 году вышло «Комментированное справочное руководство по C++», положенное впоследствии в основу стандарта. Последние обновления включали шаблоны, исключения, пространства имён, новые способы приведения типов и булевский тип. В качестве основы для хранения и доступа к обобщённым алгоритмам была выбрана Стандартная библиотека шаблонов (STL), разработанная Александром Степановым и Менг Ли[англ.].

Стандартная библиотека C++ также развивалась вместе с ним. Первым добавлением к стандартной библиотеке C++ стали потоки ввода-вывода, обеспечивающие средства для замены традиционных функций C printf и scanf. Позднее самым значительным развитием стандартной библиотеки стало включение в неё Стандартной библиотеки шаблонов.

Официальная стандартизация языка началась в 1998 году, когда был опубликован стандарт языка ISO/IEC 14882:1998 (известный как C++98)[9], разработанный комитетом по стандартизации C++ (ISO/IEC JTC1/SC22/WG21 working group). Стандарт C++ не описывал способов именования объектов, некоторых деталей обработки исключений и других возможностей, связанных с деталями реализации, что делает несовместимым объектный код, созданный различными компиляторами. Однако для этого третьими лицами создано множество стандартов для конкретных архитектур и операционных систем.
В 2003 году опубликован стандарт C++ ISO/IEC 14882:2003, где исправлены выявленные ошибки и недочёты предыдущей версии стандарта. В 2005 году опубликован отчёт Library Technical Report 1 (кратко называемый TR1). Не являясь официально частью стандарта, отчёт описывает расширения стандартной библиотеки, которые, по мнению авторов, должны были быть включены в следующую версию стандарта. Степень поддержки TR1 улучшается почти во всех поддерживаемых компиляторах языка C++.
С 2009 года велась работа по обновлению предыдущего стандарта. Предварительная версия называлась C++09, в следующем году её переименовали в C++0x. Стандарт был опубликован в 2011 году под названием C++11. В него включены дополнения в ядре языка и расширение стандартной библиотеки, в том числе большая часть TR1.
Следующая версия стандарта, C++14, вышла в августе 2014 года. Она содержит в основном уточнения и исправления ошибок предыдущей версии.
Стандарт C++17, опубликованный в декабре 2017 года, включил в стандартную библиотеку параллельные версии стандартных алгоритмов и удалил некоторые устаревшие и крайне редко используемые элементы.
Последняя стабильная на текущий момент действующая версия стандарта — C++20. Помимо прочего, он содержит принципиальное новшество — поддержку модулей.
Стандарт C++23 на данный момент активно обсуждается комитетом ISO.
C++ продолжает развиваться, чтобы отвечать современным требованиям. Одна из групп, разрабатывающих язык C++ и направляющих комитету по стандартизации C++ предложения по его улучшению — это Boost, которая занимается, в том числе, совершенствованием возможностей языка путём добавления в него особенностей метапрограммирования.

Никто не обладает правами на язык C++, он является свободным. Однако сам документ стандарта языка (за исключением черновиков) не доступен бесплатно[10]. В рамках процесса стандартизации ISO выпускает несколько видов изданий. В частности, технические доклады и технические характеристики публикуются, когда «видно будущее, но нет немедленной возможности соглашения для публикации международного стандарта.» До 2011 года было опубликовано три технических отчёта по C++: TR 19768: 2007 (также известный как C++, Технический отчёт 1) для расширений библиотеки в основном интегрирован в C++11, TR 29124: 2010 для специальных математических функций, и TR 24733: 2011 для десятичной арифметики с плавающей точкой. Техническая спецификация DTS 18822:. 2014 (по файловой системе) была утверждена в начале 2015 года, и остальные технические характеристики находятся в стадии разработки и ожидают одобрения[11].

В марте 2016 года в России была создана рабочая группа РГ21 C++. Группа была организована для сбора предложений к стандарту C++, отправки их в комитет и защиты на общих собраниях Международной организации по стандартизации (ISO)[12].

История названия
Имя языка, полученное в итоге, происходит от оператора унарного постфиксного инкремента C ++ (увеличение значения переменной на единицу). Имя C+ не было использовано потому, что является синтаксической ошибкой в C и, кроме того, это имя было занято другим языком. Язык также не был назван D, поскольку «является расширением C и не пытается устранять проблемы путём удаления элементов C»[7].

Философия C++
В книге «Дизайн и эволюция C++»[13] Бьёрн Страуструп описывает принципы, которых он придерживался при проектировании C++. Эти принципы объясняют, почему C++ именно такой, какой он есть. Некоторые из них:

Получить универсальный язык со статическими типами данных, эффективностью и переносимостью языка C.
Непосредственно и всесторонне поддерживать множество стилей программирования, в том числе процедурное программирование, абстракцию данных, объектно-ориентированное программирование и обобщённое программирование.
Дать программисту свободу выбора, даже если это даст ему возможность выбирать неправильно.
Максимально сохранить совместимость с C, тем самым делая возможным лёгкий переход от программирования на C.
Избежать разночтений между C и C++: любая конструкция, допустимая в обоих языках, должна в каждом из них обозначать одно и то же и приводить к одному и тому же поведению программы.
Избегать особенностей, которые зависят от платформы или не являются универсальными.
«Не платить за то, что не используется» — никакое языковое средство не должно приводить к снижению производительности программ, не использующих его.
Не требовать слишком усложнённой среды программирования.
Обзор языка
Стандарт C++ состоит из двух основных частей: описание ядра языка и описание стандартной библиотеки.

Первое время язык развивался вне формальных рамок, спонтанно, по мере встававших перед ним задач. Развитию языка сопутствовало развитие кросс-компилятора cfront. Новшества в языке отражались в изменении номера версии кросс-компилятора. Эти номера версий кросс-компилятора распространялись и на сам язык, но применительно к настоящему времени речь о версиях языка C++ не ведут. Лишь в 1998 году язык стал стандартизированным.

C++ поддерживает как комментарии в стиле C (/* комментарий */), так и однострочные (// вся оставшаяся часть строки является комментарием), где // обозначает начало комментария, а ближайший последующий символ новой строки, который не предварён символом \ (либо эквивалентным ему обозначением ??/), считается окончанием комментария. Плюс этого комментария в том, что его не обязательно заканчивать, то есть обозначать окончание комментария.
Спецификатор inline для функций. Функция, определённая внутри тела класса, является inline по умолчанию. Данный спецификатор является подсказкой компилятору и может встроить тело функции в код вместо её непосредственного вызова.
Квалификаторы const и volatile. В отличие от С, где const обозначает только доступ на чтение, в C++ переменная с квалификатором const должна быть инициализирована. volatile используется в описании переменных и информирует компилятор, что значение данной переменной может быть изменено способом, который компилятор не в состоянии отследить. Для переменных, объявленных volatile, компилятор не должен применять средства оптимизации, изменяющие положение переменной в памяти (например, помещающие её в регистр) или полагающиеся на неизменность значения переменной в промежутке между двумя присваиваниями ей значения.
Пространства имён (namespace). Пример:
namespace Foo
{
   const int x = 5;
}

const int y = Foo::x;
Специальным случаем является безымянное пространство имён. Все имена, описанные в нём, доступны только в текущей единице трансляции и имеют локальное связывание. Пространство имён std содержит в себе стандартные библиотеки C++.

Для работы с памятью введены операторы new, new[], delete и delete[]. В отличие от библиотечных malloc и free, пришедших из C, данные операторы производят инициализации объекта. Для классов — это вызов конструктора, для POD-типов инициализацию можно либо не проводить(new Pod;) либо провести инициализацию нулевыми значениями (new Pod(); new Pod {};).
Типы
В C++ доступны следующие встроенные типы. Типы C++ практически полностью повторяют типы данных в C:

символьные: char, wchar_t, char16_t и char32_t, в стандарте C++11 и char8_t в стандарте C++20);
целочисленные знаковые: signed char, short int, int, long int (и long long, в стандарте C++11);
целочисленные беззнаковые: unsigned char, unsigned short int, unsigned int, unsigned long int (и unsigned long long, в стандарте C++11);
с плавающей точкой: float, double, long double;
логический: bool, имеющий значения либо true, либо false.
Операции сравнения возвращают тип bool. Выражения в скобках после if, while приводятся к типу bool[14].

Язык ввёл понятие ссылок, а со стандарта C++11 — rvalue-ссылки и передаваемые ссылки (англ. forwarding reference). (см. Ссылка (C++))

C++ добавляет к C объектно-ориентированные возможности. Он вводит классы, которые обеспечивают три самых важных свойства ООП: инкапсуляцию, наследование и полиморфизм.

В стандарте C++ под классом (class) подразумевается пользовательский тип, объявленный с использованием одного из ключевых слов class, struct или union, под структурой (structure) подразумевается класс, определённый через ключевое слово struct, и под объединением (union) подразумевается класс, определённый через ключевое слово union. В зависимости от использованного ключевого слова меняются также и некоторые свойства самого класса. Например, в классе, объявленным через struct, члены без вручную прописанного модификатора доступа будут по умолчанию иметь публичный уровень доступа, а не приватный.

В теле определения класса можно указать как объявления функций, так и их определение. В последнем случае функция является встраиваемой (inline). Нестатические функции-члены могут иметь квалификаторы const и volatile, а также ссылочный квалификатор (& или &&).

Наследование
C++ поддерживает множественное наследование. Базовые классы (классы-предки) указываются в заголовке описания класса, возможно, со спецификаторами доступа. Наследование от каждого класса может быть публичным, защищённым или закрытым:

Доступ члена базового класса/режим наследования	private-член	protected-член	public-член
private-наследование	недоступен	private	private
protected-наследование	недоступен	protected	protected
public-наследование	недоступен	protected	public
По умолчанию базовый класс наследуется как private.

В результате наследования класс-потомок получает все поля классов-предков и все их методы; можно сказать, что каждый экземпляр класса-потомка содержит подэкземпляр каждого из классов-предков. Если один класс-предок наследуется несколько раз (это возможно, если он является предком нескольких базовых классов создаваемого класса), то экземпляры класса-потомка будет включать столько же подэкземпляров данного класса-предка. Чтобы избежать такого эффекта, если он нежелателен, C++ поддерживает концепцию виртуального наследования. При наследовании базовый класс может объявляться виртуальным; на все виртуальные вхождения класса-предка в дерево наследования класса-потомка в потомке создаётся только один подэкземпляр.

См. также: Виртуальное наследование
Полиморфизм
C++ поддерживает динамический полиморфизм и параметрический полиморфизм.

Параметрический полиморфизм представлен:

Аргументами по умолчанию для функций. К примеру, для функции void f(int x, int y=5, int z=10), вызовы f(1), f(1,5) и f(1,5,10) эквивалентны.
Перегрузка функций: функция с одним именем может иметь разное число и разные по типу аргументы. Например :
void Print(int x);
void Print(double x);
void Print(int x, int y);
Частным случаем перегрузки функций можно считать перегрузку операторов.
Механизмом шаблонов
Динамический полиморфизм реализуется с помощью виртуальных методов и иерархии наследования. Полиморфным в C++ является тип, имеющий хотя бы один виртуальный метод. Пример иерархии:

class Figure
{
public:
    virtual void Draw() = 0; // чистый виртуальный метод
    virtual ~Figure();       // при наличии хотя бы одного виртуального метода деструктор следует сделать виртуальным
};

class Square : public Figure
{
public:
    void Draw() override;
};

class Circle : public Figure
{
public:
    void Draw() override;
};
Здесь класс Figure является абстрактным (и, даже, интерфейсным), так как метод Draw не определён. Объекты данного класса нельзя создать, зато можно использовать ссылки или указатели с типом Figure. Выбор реализации метода Draw будет производиться во время выполнения исходя из реального типа объекта.

Инкапсуляция
Инкапсуляция в C++ реализуется через указание уровня доступа к членам класса: они бывают публичными (открытыми, public), защищёнными (protected) и приватными (закрытыми, private). В C++ структуры формально отличаются от классов лишь тем, что по умолчанию уровень доступа к членам класса и тип наследования у структуры публичные, а у класса — приватные.

Доступ	private	protected	public
Сам класс	да	да	да
Друзья	да	да	да
Наследники	нет	да	да
Извне	нет	нет	да
Проверка доступа происходит во время компиляции, попытка обращения к недоступному члену класса вызовет ошибку компиляции.

Друзья
Функции-друзья — это функции, не являющиеся функциями-членами и тем не менее имеющие доступ к защищённым и закрытым членам класса. Они должны быть объявлены в теле класса как friend. Например:

class Matrix {
    friend Matrix Multiply(Matrix m1, Matrix m2);
};
Здесь функция Multiply может обращаться к любым полям и функциям-членам класса Matrix.

Дружественным может быть объявлен как весь класс, так и функция-член класса. Четыре важных ограничения, накладываемых на отношения дружественности в C++:

Дружественность не транзитивна. Если A объявляет другом B, а B, в свою очередь, объявляет другом C, то C не становится автоматически другом для A. Для этого A должен явно объявить C своим другом.
Дружественность не взаимна. Если класс A объявляет другом класс B, то он не становится автоматически другом для B. Для этого должно существовать явное объявление дружественности A в классе B.
Дружественность не наследуется. Если A объявляет класс B своим другом, то потомки B не становятся автоматически друзьями A. Для этого каждый из них должен быть объявлен другом A в явной форме.
Дружественность не распространяется на потомков. Если класс A объявляет B другом, то B не становится автоматически другом для классов-потомков A. Каждый потомок, если это нужно, должен объявить B своим другом самостоятельно.
В общем виде это правило можно сформулировать следующим образом: «Отношение дружественности существует только между теми классами (классом и функцией), для которых оно явно объявлено в коде, и действует только в том направлении, в котором оно объявлено».

Специальные функции
Класс по умолчанию может иметь шесть специальных функций: конструктор по умолчанию, конструктор копирования, конструктор перемещения, деструктор, оператор присваивания копированием, оператор присваивания перемещением. Также можно явно определить их все (см. Правило трёх).

class Array {
public:
	Array() = default; // компилятор создаст конструктор по умолчанию сам
	Array(size_t _len) :
			len(_len) {
		val = new double[_len];
	}
	Array(const Array & a) = delete;  // конструктор копирования явно удалён
	Array(Array && a); // конструктор перемещения
	~Array() {
		delete[] val;
	}
	Array& operator=(const Array& rhs); // оператор присваивания копированием
	Array& operator=(Array&& rhs); // оператор присваивания перемещением
	double& operator[](size_t i) {
		return val[i];
	}
	const double& operator[](size_t i) const {
		return val[i];
	}

protected:
	std::size_t len = 0; // инициализация поля
	double* val {nullptr};
};
Конструктор вызывается для инициализации объекта (соответствующего типа) при его создании, а деструктор — для уничтожения объекта. Класс может иметь несколько конструкторов, но деструктор может иметь только один. Конструкторы в C++ не могут быть объявлены виртуальными, а деструкторы — могут, и обычно объявляются для всех полиморфных типов, чтобы гарантировать правильное уничтожение доступного по ссылке или указателю объекта независимо от того, какого типа ссылка или указатель. При наличии хотя бы у одного из базовых классов виртуального деструктора, деструктор класса потомка автоматически становится виртуальным.

Шаблоны
Основная статья: Шаблоны C++
Шаблоны позволяют порождать функции и классы, параметризованные определённым типом или значением. Например, предыдущий класс мог бы реализовывать массив для любого типа данных:

template <typename T>
class Array {
    ...
    T& operator[](size_t i) {
		return val[i];
	}
protected:
	std::size_t len {0}; // инициализация поля
	T* val {nullptr};
};
Стандартная библиотека
Основная статья: Стандартная библиотека C++
Общая структура
Стандартная библиотека C++ включает в себя набор средств, которые должны быть доступны для любой реализации языка, чтобы обеспечить программистам удобное пользование языковыми средствами и создать базу для разработки как прикладных приложений самого широкого спектра, так и специализированных библиотек. Стандартная библиотека C++ включает в себя часть стандартной библиотеки Си. Стандарт C++ содержит нормативную ссылку на стандарт C от 1990 года и не определяет самостоятельно те функции стандартной библиотеки, которые заимствуются из стандартной библиотеки Си.

Доступ к возможностям стандартной библиотеки C++ обеспечивается с помощью включения в программу (посредством директивы #include) соответствующих стандартных заголовочных файлов. Всего в стандарте C++11 определено 79 таких файлов. Средства стандартной библиотеки объявляются как входящие в пространство имён std. Заголовочные файлы, имена которых соответствуют шаблону «cX», где X — имя заголовочного файла стандартной библиотеки C без расширения (cstdlib, cstring, cstdio и пр.), содержат объявления, соответствующие данной части стандартной библиотеки Си. Стандартные функции библиотеки Си также находятся в пространстве имён std.

Состав
Стандартная библиотека включает в себя следующие разделы:

Поддержка языка. Включает средства, которые необходимы для работы программ, а также сведения об особенностях реализации. Выделение памяти, RTTI, базовые исключения, пределы значений для числовых типов данных, базовые средства взаимодействия со средой, такие как системные часы, обработка сигналов UNIX, завершение программы.
Стандартные контейнеры. В стандартную библиотеку входят шаблоны для следующих контейнеров: динамический массив (vector), статический массив (array), одно- и двунаправленные списки (forward_list, list), стек (stack), дек (deque), ассоциативные массивы (map, multimap), множества (set, multiset), очередь с приоритетом (priority_queue).
Основные утилиты. В этот раздел входит описание основных базовых элементов, применяемых в стандартной библиотеке, распределителей памяти и поддержка времени и даты в стиле C.
Итераторы. Обеспечивают шаблоны итераторов, с помощью которых в стандартной библиотеке реализуется стандартный механизм группового применения алгоритмов обработки данных к элементам контейнеров.
Алгоритмы. Шаблоны для описания операций обработки, которые с помощью механизмов стандартной библиотеки могут применяться к любой последовательности элементов, в том числе к элементам в контейнерах. Также в этот раздел входят описания функций bsearch() и qsort() из стандартной библиотеки C.
Строки. Шаблоны строк в стиле C++. Также в этот раздел попадает часть библиотек для работы со строками и символами в стиле Си.
Ввод-вывод. Шаблоны и вспомогательные классы для потоков ввода-вывода общего вида, строкового ввода-вывода, манипуляторы (средства управления форматом потокового ввода-вывода в стиле C++).
Локализация. Определения, используемые для поддержки национальных особенностей и форматов представления (дат, валют и так далее) в стиле C++ и в стиле Си.
Диагностика. Определения ряда исключений и механизмов проверки утверждений во время выполнения (assert). Поддержка обработки ошибок в стиле Си.
Числа. Определения для работы с комплексными числами, математическими векторами, поддержка общих математических функций, генератор случайных чисел.
Контейнеры, строки, алгоритмы, итераторы и основные утилиты, за исключением заимствований из библиотеки C, собирательно называются STL (Standard Template Library — стандартная шаблонная библиотека). Изначально эта библиотека была отдельным продуктом и её аббревиатура расшифровывалась иначе, но потом она вошла в стандартную библиотеку C++ в качестве неотъемлемого элемента. В названии отражено то, что для реализации средств общего вида (контейнеров, строк, алгоритмов) использованы механизмы обобщённого программирования (шаблоны C++ — template). В работах Страуструпа подробно описываются причины, по которым был сделан именно такой выбор. Основными из них являются бо́льшая универсальность выбранного решения (шаблонные контейнеры, в отличие от объектных, могут легко использоваться для не объектных типов и не требуют наличия общего предка у типов элементов) и его техническая эффективность (как правило, операции шаблонного контейнера не требуют вызовов виртуальных функций и могут легко встраиваться (inline), что в итоге даёт выигрыш в производительности).

Начиная со стандарта C++11 добавились следующие возможности:

Добавлена библиотека <regex>, реализующая общепринятые механизмы поиска и подстановки с помощью регулярных выражений.
Добавлена поддержка многопоточности.
Атомарные операции
unordered-варианты ассоциативных массивов и множеств.
Умные указатели, обеспечивающие автоматическое освобождение выделенной памяти.
Реализации
STL до включения в стандарт C++ была сторонней разработкой, вначале — фирмы HP, а затем — SGI. Стандарт языка не называет её «STL», так как эта библиотека стала неотъемлемой частью языка, однако многие люди до сих пор используют это название, чтобы отличать её от остальной части стандартной библиотеки (потоки ввода-вывода (iostream), подраздел C и другие).

Проект под названием STLport[15], основанный на SGI STL, осуществляет постоянное обновление STL, IOstream и строковых классов. Некоторые другие проекты также занимаются разработкой частных применений стандартной библиотеки.

Отличия от Си

Генеалогия и взаимовлияние версий Си и C++ (по «Краткому курсу» Страуструпа)
Совместимость с Си
Основная статья: Несовместимость Си и C++
Выбор именно C в качестве базы для создания нового языка программирования объясняется тем, что язык C:
является многоцелевым, лаконичным и относительно низкоуровневым языком;
подходит для решения большинства системных задач;
исполняется везде и на всём;
стыкуется со средой программирования UNIX.
— Б. Страуструп. Язык программирования C++. Раздел 1.6[16]
Несмотря на ряд известных недостатков языка Си, Страуструп пошёл на его использование в качестве основы, так как «в Си есть свои проблемы, но их имел бы и разработанный с нуля язык, а проблемы C нам известны». Кроме того, это позволило быстро получить прототип компилятора (cfront), который лишь выполнял трансляцию добавленных синтаксических элементов в оригинальный язык Си.

По мере разработки C++ в него были включены другие средства, которые перекрывали возможности конструкций Си, в связи с чем неоднократно поднимался вопрос об отказе от совместимости языков путём удаления устаревших конструкций. Тем не менее, совместимость была сохранена из следующих соображений:

сохранение действующего кода, написанного изначально на C и прямо перенесённого в C++;
исключение необходимости переучивания программистов, ранее изучавших C (им требуется только изучить новые средства C++);
исключение путаницы между языками при их совместном использовании («если два языка используются совместно, их различия должны быть или минимальными, или настолько большими, чтобы языки было невозможно перепутать»).
Новые возможности
Логотип Викиучебника	Имеется викиучебник по теме «Си++»
Новые возможности C++ включают объявления в виде выражений, преобразования типов в виде функций, операторы new и delete, тип bool, ссылки, расширенное понятие константности, подставляемые функции, аргументы по умолчанию, переопределения, пространства имён, классы (включая и все связанные с классами возможности, такие как наследование, функции-члены, виртуальные функции, абстрактные классы и конструкторы), переопределения операторов, шаблоны, оператор ::, обработку исключений, динамическую идентификацию и многое другое. Язык C++ также во многих случаях строже относится к проверке типов, чем C.

В C++ появились комментарии в виде двойной косой черты (//), которые были в предшественнике C — языке BCPL.

Некоторые особенности C++ позднее были перенесены в C, например, ключевые слова const и inline, объявления в циклах for и комментарии в стиле C++ (//). В более поздних реализациях C также были представлены возможности, которых нет в C++, например макросы va_arg и улучшенная работа с массивами-параметрами.

C++ не включает в себя C
Несмотря на то, что большая часть кода C будет справедлива и для C++, C++ не является надмножеством C и не включает его в себя. Существует и такой верный для C код, который неверен для C++. Это отличает его от Objective C, ещё одного усовершенствования C для ООП, как раз являющегося надмножеством C.

Существуют и другие различия. Например, C++ не разрешает вызывать функцию main() внутри программы, в то время как в C это действие правомерно. Кроме того, C++ более строг в некоторых вопросах; например, он не допускает неявное приведение типов между несвязанными типами указателей и не разрешает использовать функции, которые ещё не объявлены.

Более того, код, верный для обоих языков, может давать разные результаты в зависимости от того, компилятором какого языка он оттранслирован. Например, на большинстве платформ следующая программа печатает «С», если компилируется компилятором C, и «C++» — если компилятором C++. Так происходит из-за того, что символьные константы в C (например, 'a') имеют тип int, а в C++ — тип char, а размеры этих типов обычно различаются.

#include <stdio.h>

int main()
{
    printf("%s\n", (sizeof('a') == sizeof(char)) ? "C++" : "C");
    return 0;
}
Средства C, которых рекомендуется избегать
По замечанию Страуструпа, «чем лучше вы знаете C, тем труднее вам будет избежать программирования на C++ в стиле C, теряя при этом потенциальные преимущества C++». В связи с этим он даёт следующий набор рекомендаций для программистов на C, чтобы в полной мере воспользоваться преимуществами C++:

Не использовать макроопределения #define. Для объявления констант применять const, групп констант (перечислений) — enum, для прямого включения функций — inline, для определения семейств функций или типов — template.
Не использовать предварительные объявления переменных. Объявлять переменные в блоке, где они реально используются, всегда совмещая объявление с инициализацией.
Отказаться от использования malloc()[17] в пользу оператора new, от realloc()[18] — в пользу типа vector. Более безопасным будет использование умных указателей, таких как shared_ptr и unique_ptr, доступных с одиннадцатой версии стандарта.
Избегать бестиповых указателей, арифметики указателей, неявных приведений типов, объединений, за исключением, возможно, низкоуровневого кода. Использовать «новые» преобразования типов как более точно выражающие действительные намерения программиста и более безопасные.
Свести к минимуму использование массивов символов и строк в стиле C, заменив их на типы string и vector из STL. Вообще не стремиться создавать собственные реализации того, что уже имеется в стандартной библиотеке.
Дальнейшее развитие
Текущий стандарт языка ISO/IEC 14882:2020 был опубликован в декабре 2020 года. Неофициально его обозначают как C++20. Следующая версия стандарта, запланированная на 2024 год, имеет неофициальное обозначение C++23.

Общие направления развития C++
По мнению автора языка Бьёрна Страуструпа[19][20][21], говоря о дальнейшем развитии и перспективах языка, можно выделить следующее:

В основном дальнейшее развитие языка будет идти по пути внесения дополнений в стандартную библиотеку. Одним из основных источников этих дополнений является известная библиотека Boost.
Изменения в ядре языка не должны приводить к снижению уже достигнутой эффективности C++. С точки зрения Страуструпа, предпочтительнее внесение в ядро нескольких серьёзных больших изменений, чем множества мелких правок.
Базовыми направлениями развития C++ на ближайшее время является расширение возможностей и доработка средств обобщённого программирования, стандартизация механизмов параллельной обработки, а также доработка средств безопасного программирования, таких как различные проверки и безопасные преобразования типов, проверка условий и так далее.
В целом C++ спроектирован и развивается как мультипарадигменный язык, впитывающий в себя различные методы и технологии программирования, но реализующий их на платформе, обеспечивающей высокую техническую эффективность. Поэтому в будущем не исключено добавление в язык средств функционального программирования, автоматической сборки мусора и других отсутствующих в нём сейчас механизмов. Но в любом случае это будет делаться на имеющейся платформе высокоэффективного компилируемого языка.
Хотя формально одним из принципов C++ остаётся сохранение совместимости с языком C, фактически группы по стандартизации этих языков не взаимодействуют, а вносимые ими изменения не только не коррелируют, но и нередко принципиально противоречат друг другу идеологически. Так, элементы, которые новые стандарты C добавляют в ядро, в стандарте C++ являются элементами стандартной библиотеки и в ядре вообще отсутствуют, например, динамические массивы, массивы с фиксированными границами, средства параллельной обработки. Как считает Страуструп, объединение разработки этих двух языков принесло бы большую пользу, но оно вряд ли возможно по политическим соображениям. Так что практическая совместимость между C и C++ постепенно будет утрачиваться.
Стандарт C++11: дополнения в ядре языка
Основная статья: C++11
Явно определяемые константные функции и выражения constexpr.
Универсальная инициализация.
Конструкторы и операторы присваивания с семантикой переноса.
Вывод типов.
Для применения в шаблонах, там, где затруднительно указать конкретный тип переменной, введены два новых механизма: переменные типа auto и описание decltype.
Цикл по коллекции.
Вслед за многими современными языками в C++ введена конструкция «цикл по коллекции» вида for (type &x: array) {...}. Здесь тело цикла выполняется для каждого элемента коллекции array, а x в каждой итерации будет ссылаться на очередной элемент коллекции. В качестве коллекции может выступать C-массив или любой контейнер стандартной библиотеки, для которого определены итераторы begin и end.
Лямбда-выражения.
Добавлена возможность объявлять лямбда-выражения (безымянные функции, определяемые в точке применения), в том числе зависящие от внешних переменных (замыкания). Лямбда-выражения могут присваиваться переменным и использоваться везде, где требуется функция соответствующего типа, например, в алгоритмах стандартной библиотеки.
Изменения в описании виртуальных методов.
Добавлен необязательный модификатор override, который употребляется в объявлении метода, замещающего виртуальный метод родительского класса. Описание замещения с override вызывает проверку на наличие в родительском классе замещаемого метода и на совпадение сигнатур методов.
Добавлен также модификатор final, как и в Java, запрещающий дальнейшее замещение помеченного им метода. Также final может быть объявлен класс — в таком случае от него запрещено наследовать новые классы.
Добавлена возможность описания вариативных шаблонов.
Различные синтаксические дополнения.
Определено ключевое слово для константы — нулевого указателя: nullptr.
Внесены изменения в семантику и, частично, синтаксис перечислений и объединений. Добавлена возможность создавать типобезопасные перечисления, с объединений снят ряд ограничений на структуру.
От компилятора требуется правильный лексический разбор текста программы с несколькими закрывающимися угловыми скобками подряд (ранее последовательность «>>» воспринималась однозначно как операция побитового сдвига вправо, поэтому в записи вложенных шаблонных конструкций требовалось обязательно разделять знаки «больше» пробелами или переводами строк).
Примеры программ
Пример № 1
Это пример программы Hello, world!, которая выводит сообщение в консоль, используя стандартную библиотеку, и завершается.

#include <iostream>

// Импортируем все объявления в пространстве имён "std" в глобальное пространство имён.
using namespace std;

int main()
{
    cout << "Hello, world!" << endl;
    return 0;
}
Пример № 2
Современный C++ позволяет решать простым способом и более сложные задачи. Этот пример демонстрирует, кроме всего прочего, использование контейнеров стандартной библиотеки шаблонов (STL).

#include <iostream> // для использования std::cout
#include <vector> // содержит динамический массив
#include <map> // содержит тип данных словарь
#include <string>

using namespace std;

int main()
{    
    // Объявляем ассоциативный контейнер со строковыми ключами и данными в виде векторов строк.
    map<string, vector<string> > items;

    // Добавим в этот ассоциативный контейнер пару человек и дадим им несколько предметов.
    items["Anya"].push_back("scarf");
    items["Dmitry"].push_back("tickets");
    items["Anya"].push_back("puppy");

    // Переберём все объекты в контейнере
    for(const auto& person : items) {
        // person - это пара двух объектов: person.first - это его имя,
        // person.second - это список его предметов (вектор строк)
        cout << person.first << " is carrying " << person.second.size() << " items" << endl;
    }
}
В этом примере для простоты импортируются все имена из пространства имён std. В настоящей же программе так делать не рекомендуется, так как можно столкнуться с коллизией имён. Язык позволяет импортировать отдельные объекты:

#include <vector>

int main()
{
    using std::vector;
    vector<int> my_vector;
}
В C++ (как и в C), если выполнение программы доходит до конца функции main(), то это эквивалентно return 0;. Это неверно для любой другой функции, кроме main().

Сравнение с альтернативными языками
Известно несколько исследований, в которых была сделана попытка более или менее объективно сравнить несколько языков программирования, одним из которых является C++. В частности:

В научной статье «Haskell vs. Ada vs. C++ vs. Awk vs. …» Пауля Худака и Марка Джонса[22] даётся отчёт об исследовании ряда императивных и функциональных языков на решении модельной задачи быстрого прототипирования ГИС-системы военного назначения.
В научной статье «DSL implementation in metaocaml, template haskell, and C++» четырёх авторов[23] проводится методичное исследование применения C++ и двух функциональных языков в роли базовых инструментов для языково-ориентированного программирования методом порождающего программирования.
В работе Лутца Прехельта[24] рассмотрено семь языков (C, C++, Java, Perl, Python, Rexx и Tcl) в задаче написания простой программы преобразования телефонных номеров в слова по определённым правилам.
В статье Дэвида Велера «Ada, C, C++, and Java vs. The Steelman»[25] приведено сопоставление языков Ада, C++, Си, Java с документом «Steelman[англ.]» — списком требований к языку для военных разработок встроенных систем, который был выработан комитетом по языку высокого уровня Министерства обороны США в 1978 году. Хотя этот документ сильно устарел и не учитывает многих существенных свойств современных языков, сравнение демонстрирует, что C++ по набору востребованных в отрасли возможностей не так уж сильно отличается от языков, которые можно считать его реальными конкурентами.
Статья Мэтью Формента и Михаэля Гиллингса[26] описывает исследование[27] реализации на шести языках — C++, C, C#, Java, Perl, Python, — трёх специфичных алгоритмов, применяемых в биоинформатике: метод ближайших соседей, глобальное выравнивание последовательностей (Алгоритм Нидлмана — Вунша) и парсинг результатов BLAST.
C++ и Ада
Язык Ада близок к C++ по набору возможностей и по сферам применения: это компилируемый структурный язык с Симула-подобным объектно-ориентированным дополнением (та же модель «Алгол с классами», что и в C++), статической типизацией, средствами обобщённого программирования, предназначенный для разработки крупных и сложных программных систем. В то же время он принципиально отличается по идеологии: в отличие от C++, Ада строилась на основе предварительно тщательно проработанных условий производителей сложного ПО с повышенными требованиями к надёжности, что наложило отпечаток на синтаксис и семантику языка.

Прямых сравнений эффективности кодирования на Аде и C++ немного. В упомянутой выше статье[22] решение модельной задачи на Аде привело к получению кода примерно на 30 % меньшего по объёму (в строках), чем на C++. Сравнение свойств самих языков приводится во многих источниках, например, в статье Джима Роджерса на AdaHome[28] содержится перечисление более 50 пунктов различий свойств этих языков, большая часть которых — в пользу Ады (больше возможностей, более гибкое поведение, меньше вероятность ошибок). Хотя многие утверждения сторонников Ады спорны, а часть из них явно устарела, в целом можно заключить:

Синтаксис Ады гораздо строже, чем C++. Язык требует соблюдения дисциплины программирования, не поощряет «программистские трюки», стимулирует написание простого, логичного и легко понимаемого кода, удобного в сопровождении.
В отличие от C++, Ада максимально типобезопасна. Развитая система типов позволяет, при соблюдении дисциплины их объявления и использования, максимально полно статически контролировать корректность использования данных и защищает от случайных ошибок. Автоматические преобразования типов сведены к минимуму.
Указатели в Аде контролируются гораздо более строго, чем в C++, а адресная арифметика доступна только через отдельную системную библиотеку.
Настраиваемые модули Ады по возможностям аналогичны шаблонам C++, но обеспечивают лучший контроль.
Ада имеет встроенную в язык модульность и стандартизованную систему раздельной компиляции, тогда как C++ применяет включение текстовых файлов и внешние средства управления компиляцией и сборкой.
Встроенная многозадачность Ады включает параллельные задачи и механизм их коммуникации (входы, рандеву, оператор select). В C++ всё это реализуется только на уровне библиотек.
Ада строго стандартизована, за счёт чего обеспечивает лучшую переносимость.
В статье Стефена Цейгера из Rational Software Corporation[29], утверждается, что в целом разработка на Аде обходится на 60 % дешевле, и приводит к получению кода, имеющего в 9 раз меньше дефектов, чем на Си. Хотя эти результаты не могут быть прямо перенесены на C++, но всё же представляют интерес с учётом того, что многие недостатки C++ унаследованы от Си.

C++ и Java
Java не может считаться в полной мере заменой C++, она создана как безопасный язык с низким порогом вхождения для разработки прикладных пользовательских приложений с высокими показателями портируемости[30] и принципиально непригодна для некоторых типов приложений, которые разрабатываются на C++. Однако в пределах своей области Java составляет вполне реальную конкуренцию C++. В качестве преимуществ Java обычно называют:

Безопасность: отсутствие поддержки указателей и адресной арифметики, автоматическое управление памятью со сборкой мусора, встроенные средства, защищающие от распространённых ошибок программ C++, таких как переполнение буфера или выход за границы массива.
Наличие разработанной системы модулей и раздельной компиляции, значительно более быстрой и менее подверженной ошибкам, чем препроцессор и ручная сборка C++.
Полная стандартизация и исполнение в виртуальной машине, развитое окружение, включающие библиотеки для графики, интерфейса пользователя, доступа к базам данных прочих типовых задач, как следствие — реальная многоплатформенность.
Встроенная многопоточность.
Объектная подсистема Java в значительно более высокой степени, чем C++, отвечает фундаментальному принципу ООП «всё — объект». Интерфейсы позволяют обеспечить большинство преимуществ множественного наследования, не вызывая его негативных эффектов.
Рефлексия значительно более развита, чем в C++ и позволяет реально определять и изменять структуру объектов во время работы программы.
В то же время использование сборщика мусора и виртуальной машины создают труднопреодолимые ограничения. Программы на Java, как правило, медленнее, требуют значительно больше памяти, к тому же виртуальная машина изолирует программу от операционной системы, делая невозможным низкоуровневое программирование.

Эмпирическое исследование[24] не обнаружило существенной разницы в скорости разработки на C++ и на Java. Исследование[26] также показало, что представление о существенной разнице в скорости программ на этих языках не всегда верно: в двух из трёх тестов скорость работы приложений на Java и C++ оказалась сравнима. В то же время Java лаконичнее — разница в объёме кода составила порядка 10-15 %.

C++ и C
Оригинальный Си продолжает развиваться, на нём разрабатываются многие масштабные проекты: он является основным языком разработки операционных систем, на нём написаны игровые движки многих динамических игр и большое число прикладных приложений. Ряд специалистов утверждает, что замена Си на C++ не повышает эффективности разработки, но приводит к ненужному усложнению проекта, снижению надёжности и увеличению затрат на сопровождение. В частности:

По мнению Линуса Торвальдса, «C++ провоцирует на написание … значительного объёма кода, не имеющего принципиального значения с точки зрения функциональности программы»[мнения 3].
Поддержка ООП, шаблоны и STL не являются решающим преимуществом C++, так как всё, для чего они применяются, реализуемо и средствами Си. При этом устраняется раздувание кода, а некоторое усложнение, которое к тому же далеко не обязательно, компенсируется большей гибкостью, более простым тестированием, лучшими показателями производительности.
Автоматизация доступа к памяти в C++ увеличивает затраты памяти и замедляет работу программ.
Использование исключений C++ вынуждает следовать RAII, приводит к росту исполняемых файлов, замедлению программ. Дополнительные трудности возникают в параллельных и распределённых программах. Показательно, что стандарт кодирования на C++ компании Google прямо запрещает использование исключений[31].
Код на C++ сложнее для понимания и тестирования, его отладка затрудняется использованием сложных иерархий классов с наследованием поведения и шаблонов. К тому же в средах программирования на C++ больше ошибок, как в компиляторах, так и в библиотеках.
Многие детали поведения кода стандартом C++ не специфицированы, что ухудшает переносимость и может являться причиной трудно обнаруживаемых ошибок.
Квалифицированных программистов на Си существенно больше, чем на C++.
Нет убедительных данных о преимуществе C++ перед Си ни по производительности программистов, ни по свойствам программ. Хотя есть исследования[32], утверждающие, что программисты на Си тратят около 30-40 % общего времени разработки (не считая отладки) на управление памятью, при сопоставлении общей производительности разработчиков[22] Си и C++ оказываются близки.

В низкоуровневом программировании значительная часть новых возможностей C++ оказывается неприменимой из-за увеличения накладных расходов: виртуальные функции требуют динамического вычисления реального адреса (RVA), шаблоны приводят к раздуванию кода и ухудшению возможностей оптимизации, библиотека времени исполнения (RTL) очень велика, а отказ от неё лишает большинства возможностей C++ (хотя бы из-за недоступности операций new/delete). В результате программисту придётся ограничиться функционалом, унаследованным от Си, что делает бессмысленным применение C++:

… единственный способ иметь хороший, эффективный, низкоуровневый и портируемый C++ сводится к тому, чтобы ограничиться всеми теми вещами, которые элементарно доступны в Си. А ограничение проекта рамками Си будет означать, что люди его не выкинут, и что будет доступно множество программистов, действительно хорошо понимающих низкоуровневые особенности и не отказывающихся от них из-за идиотской ерунды про «объектные модели».
… когда эффективность является первостепенным требованием, «преимущества» C++ будут огромной ошибкой.
— Линус Торвальдс,[33]
C++ и функциональные и скриптовые языки
В одном эксперименте[22] скриптовые и функциональные языки, в частности, Haskell, показали 2-3 кратный выигрыш во времени программирования и объёме кода по сравнению с программами на C++. С другой стороны, программы на C++ оказались во столько же раз быстрее. Авторы признают, что полученные ими данные не составляют репрезентативной выборки и воздерживаются от категоричных выводов.

В другом эксперименте[34] строгие функциональные языки (Standard ML, OCaml) показали общее ускорение разработки в 10 раз (в основном за счёт раннего выявления ошибок) при примерно равных показателях быстродействия (использовалось множество компиляторов в нескольких режимах).

В исследовании Лутца Прехельта[24] по результатам обработки около 80 решений, написанных добровольцами, получены, в частности, следующие выводы:

Perl, Python, Rexx, Tcl обеспечили скорость разработки вдвое больше, чем C, C++ и Java, причём полученный код был также вдвое короче.
Программы на скриптовых языках потребляли примерно вдвое больше памяти, чем C/C++.
Критика

Содержимое этой статьи нуждается в чистке.
Текст содержит много маловажных, неэнциклопедичных или устаревших подробностей. Пожалуйста, улучшите статью в соответствии с правилами написания статей.
О критике C++ в целом
Чаще всего критики не противопоставляют C++ какой-либо другой конкретный язык, а утверждают, что отказ от использования единственного языка, имеющего многочисленные недостатки, в пользу декомпозиции проекта на подзадачи, решаемые на различных, наиболее подходящих для них, языках, делает разработку существенно менее трудоёмкой при одновременном повышении показателей качества программирования[35][36]. По этой же причине критикуется сохранение совместимости с Си: если часть задачи требует низкоуровневых возможностей, разумнее выделить эту часть в отдельную подсистему и написать её на Си.

В свою очередь, сторонники C++ заявляют, что устранение технических и организационных проблем межъязыкового взаимодействия за счёт использования одного универсального языка вместо нескольких специализированных важнее, чем потери от несовершенства этого универсального языка, то есть сама широта набора возможностей C++ является оправданием недостатков каждой отдельной возможности; в том числе недостатки, унаследованные от Си, оправданы преимуществами совместимости (см. выше).

Таким образом, одни и те же свойства C++ — объём, сложность, эклектичность и отсутствие конкретной целевой ниши применения — рассматривается сторонниками как «главное достоинство», а критиками — как «главный недостаток».

Критика отдельных элементов и концепций
Контроль за поведением
Идеология языка смешивает «контроль за поведением» с «контролем за эффективностью»: принцип «не платишь за то, что не используешь»[⇨] предполагает, что обеспечение полного контроля программиста за всеми аспектами исполнения программы на довольно низком уровне является необходимым и достаточным условием достижения высокой эффективности кода. В действительности для сколько-нибудь крупных программ это неверно: возложение на программиста низкоуровневой оптимизации, которую качественный компилятор предметно-ориентированного языка способен выполнить заведомо более эффективно, приводит лишь к росту объёма кода, повышению трудоёмкости программирования и снижению показателей понимаемости и тестируемости кода. Таким образом, принцип «не платить за то, что не используется» в действительности не даёт желаемых выгод в эффективности, но негативно сказывается на качестве.

Компонентное и объектно-ориентированное программирование
По мнению Алана Кэя, объектная модель «Алгол с классами», использованная в C++, уступает модели «всё — объект»[37], используемой в Objective-C, по общем объёму возможностей, показателям повторного использования кода, понимаемости, модифицируемости и тестируемости.

Модель наследования C++ сложна, трудна в реализации и при этом провоцирует создание сложных иерархий с неестественными отношениями между классами (например, наследование вместо вложения). Результатом становится создание сильно зацепленных классов с нечётко разделённым функционалом. Например, в [38] приводится учебно-рекомендательный пример реализации класса «список» как подкласса от класса «элемент списка», который, в свою очередь, содержит функции доступа к другим элементам списка. Такое отношение типов является абсурдом с точки зрения математики и невоспроизводимо на более строгих языках. Идеология некоторых библиотек требует ручного приведения типов вверх и вниз по иерархии классов (static_cast и dynamic_cast), что нарушает типобезопасность языка. Высокая вязкость решений на C++ может требовать повторной разработки значительных частей проекта при необходимости внесения минимальных изменений на поздних стадиях разработки. Яркий пример подобных проблем можно найти в[35].

Как отмечает Ян Джойнер[39], C++ ошибочно отождествляет инкапсуляцию (то есть помещение данных внутрь объектов и отделение реализации от интерфейса) и сокрытие реализации. Это усложняет доступ к данным класса и требует реализовывать его интерфейс практически исключительно через функции доступа (что, в свою очередь, увеличивает объём кода и усложняет его).

Совпадение типов в C++ определяется на уровне идентификаторов, а не сигнатур. Это делает невозможной подстановку компонентов, основанную на совпадении интерфейсов, из-за чего включение в систему новой функциональности, реализованной на уровне библиотек, требует ручной модификации уже имеющегося кода[40]. Как отмечает Линус Торвальдс[33], в C++ «код кажется абстрактным лишь до тех пор, пока не возникает необходимость его изменить».

Критика C++ с позиций ООП приведена в работе[39].

Метапрограммирование
Порождающее метапрограммирование C++ основано на шаблонах и препроцессоре, оно трудоёмко и ограничено по возможностям. Система шаблонов C++ фактически является вариантом примитивного функционального языка программирования, исполняемого на этапе компиляции. Этот язык почти не пересекается с самим C++, из-за чего потенциал роста сложности абстракций оказывается ограниченным. Программы, использующие шаблоны C++, имеют крайне низкие показатели понимаемости и тестируемости, а само разворачивание шаблонов порождает неэффективный код, так как язык шаблонов не предоставляет никаких средств для оптимизации (см. также раздел #Вычислительная эффективность). Встраиваемые предметно-специфичные языки, реализуемые таким образом, всё равно требуют знания самого C++, что не обеспечивает полноценного разделения труда. Таким образом, возможности C++ по расширению возможностей самого C++ весьма ограничены[41][42].

Кроссплатформенность
Для написания портируемого кода на C++ требуется огромное мастерство и опыт, и «небрежные» коды на C++ с высокой вероятностью могут оказаться непортируемыми[43]. По мнению Линуса Торвальдса, для обеспечения на C++ портируемости, аналогичной Си, программист должен ограничиться возможностями C++, унаследованными от Си[33]. Стандарт содержит множество элементов, определённых как «implementation-defined» (например, размер указателей на методы классов в различных компиляторах варьируется в диапазоне от 4 до 20 байт[44]), что ухудшает портируемость программ с их использованием.

Директивный характер стандартизации языка, неполная обратная совместимость и противоречивость требований разных версий стандарта приводят к проблемам в переносе программ между различными компиляторами и даже версиями одних и тех же компиляторов.

Отсутствие возможностей
Рефлексивное метапрограммирование
Интроспекция в C++ реализована отдельно от основной системы типов, что делает её практически бесполезной. Наибольшее, что можно получить — параметризацию поведения на заранее известном наборе вариантов. Это препятствует применению C++ в большинстве подходов к реализации искусственного интеллекта.
Функциональное программирование
Явная поддержка функционального программирования присутствует только в стандарте C++0x, ранее пробел устранялся библиотеками (Loki, Boost), использующими язык шаблонов, но их качество значительно уступают решениям, встроенным в функциональные языки[пояснения 1], как и качеству реализаций возможностей C++ (таких как ООП) посредством функциональных языков. Реализованные в C++ возможности ФП не дают возможности применения присущих функциональному программированию оптимизационных методик[⇨], а ограничиваются вызовами функциональных библиотек и реализацией отдельных методов. Это практически не даёт преимуществ в проектировании программ (см. Соответствие Карри — Ховарда).
Избыточные и опасные возможности
Встроенные средства обхода ограничений
Язык содержит средства, позволяющие программисту нарушать заданную в конкретном случае дисциплину программирования. Например, модификатор const задаёт для объекта свойство неизменности состояния, но модификатор mutable предназначен именно для принудительного разрешения изменения состояния внутри константного объекта, то есть для нарушения ограничения константности. Более того, допускается динамически удалить атрибут const с константного объекта, превращая его в леводопустимый (L-value). Наличие в языке таких возможностей делает попытки формальной верификации кода бессмысленными, а использование ограничений для оптимизации невозможным.

Неконтролируемая макроподстановка
Средства макроподстановки Си (#define) являются сколь мощным, столь же опасным средством. Они сохранены в C++ несмотря на то, что для решения всех задач, для которых они были предусмотрены в Си, в C++ были предоставлены более строгие и специализированные средства — шаблоны, перегрузка функций, inline-функции, пространства имён, более развитая типизация, расширение применения модификатора const, и др. В унаследованных от Си стандартных библиотеках много потенциально опасных макросов[45]. Шаблонное метапрограммирование также порой совмещается с использованием макроподстановки для обеспечения т. н. «синтаксического сахара».

Проблемы перегрузки
Принятые в C++ принципы перегрузки функций и операторов[⇨] приводят к значительному дублированию кода. Перегрузка операторов, исходно предназначенная для введения так называемого «синтаксического сахара», в C++ поощряет бесконтрольное изменение поведения элементарных операций для различных типов. Это резко повышает риск ошибок, тем более что вводить новый синтаксис и изменять существующий (например, создавать новые операторы или менять приоритеты или ассоциативность) нельзя, хотя синтаксис стандартных операторов C++ адекватен семантике далеко не всех типов, которые может потребоваться ввести в программу. Отдельные проблемы создаёт возможность лёгкой перегрузки операторов new/delete, способной породить крайне коварные и трудновыявляемые ошибки. При этом некоторые интуитивно ожидаемые операции (подчистка динамических объектов в случае генерации исключений) в C++ не выполняются, а значительная часть перегруженных функций и операторов вызывается неявно (приведение типов, создание временных экземпляров классов и др.). В результате средства, изначально предназначенные для того, чтобы сделать программы более ясными и повысить удобство разработки и сопровождения, превращаются в ещё один источник неоправданного усложнения и снижения надёжности кода.

Вычислительная эффективность
Результирующий объём исполнимого кода
Использование шаблонов C++ представляет собой параметрический полиморфизм на уровне исходного кода, но при трансляции он превращается в ситуативный (ad hoc) полиморфизм (то есть перегрузку функций), что приводит к существенному увеличению объёма машинного кода в сравнении с языками, имеющими истинно полиморфную систему типов (потомками ML). Для снижения размера машинного кода пытаются автоматически обрабатывать исходный код до этапа раскрутки шаблонов[46][47]. Другим решением могла бы быть стандартизованная ещё в 1998 году возможность экспорта шаблонов, но она доступна далеко не во всех компиляторах, так как её трудно реализовать[48][49][мнения 4] и для импорта библиотек шаблонов C++ в языки с существенно отличной от C++ семантикой она всё равно была бы бесполезна. Сторонники C++ оспаривают масштабы раздувания кода как преувеличенные[50], игнорируя даже тот факт, что в Си параметрический полиморфизм транслируется непосредственно, то есть без дублирования тел функций вообще. При этом сторонники C++ считают, что параметрический полиморфизм в Си опасен — то есть более опасен, чем переход от Си к C++ (противники C++ утверждают обратное — см. выше).

Потенциал оптимизации
Из-за слабой системы типов и изобилия побочных эффектов становится крайне затруднительным эквивалентное преобразование программ, а значит и встраивание в компилятор многих оптимизирующих алгоритмов, таких как автоматическое распараллеливание программ, удаление общих подвыражений, λ-подъём, вызовы процедур с передачей продолжений, суперкомпиляция и др. В результате реальная эффективность программ на C++ ограничивается имеющейся квалификацией программистов и вложенными в конкретный проект усилиями, и «небрежная» реализация может существенно уступать по эффективности «небрежным» реализациям на языках более высокого уровня, что подтверждается сравнительными испытаниями языков[34]. Это является существенным препятствием против применения C++ в индустрии data mining.

Эффективное управление памятью
Обязанность по эффективному управлению памятью ложится на плечи разработчика и зависит от навыков разработчика. Для автоматического управления памятью в C++ традиционно используются так называемые «умные указатели», ручное же управление памятью снижает эффективность самих программистов[⇨]. Многочисленные реализации сборки мусора, таких, как статический вывод регионов, не применимы для C++-программ (точнее, это требует реализации поверх языка C++ интерпретатора нового языка, сильно отличающегося от C++ как большинством объективных свойств, так и общей идеологией) по причине необходимости прямого доступа к абстрактному синтаксическому дереву.

Результативность
Соотнесение факторов результативности с затратами на разработку, а также общую культивируемую в сообществе программистов дисциплину и культуру программирования важно принимать во внимание заказчикам, выбирающим язык С++ (и, соответственно, предпочитающим этот язык разработчикам) для реализации задуманных ими проектов, а также людям, начинающим изучать программирование, особенно с намерением программировать для собственных нужд.

Качество и культура программирования
Принцип C++ «не навязывать „хороший“ стиль программирования» противоречит промышленному подходу к программированию, в котором ведущую роль играют качество программного обеспечения и возможность сопровождения кода не только автором, и для которого предпочтительны языки, сводящие к минимуму влияние человеческого фактора, то есть как раз «навязывающие „хороший“ стиль программирования», хотя такие языки и могут иметь более высокий порог вхождения.

Существует мнение, что предпочтение использования C++ (при возможности выбора альтернативных языков) отрицательно характеризует профессиональные качества программиста. В частности, Линус Торвальдс говорит, что использует положительное мнение кандидатов о C++ в качестве критерия отсева[мнения 3]:
C++ — кошмарный язык. Его делает ещё более кошмарным тот факт, что множество недостаточно грамотных программистов используют его… Откровенно говоря, даже если нет никаких причин для выбора Си, кроме того чтобы держать C++-программистов подальше — то одно это уже будет достаточно веским основанием для использования Си.
…Я пришёл к выводу, что действительно предпочту выгнать любого, кто предпочтёт вести разработку проекта на C++, нежели на Си, чтобы этот человек не загубил проект, в который я вовлечён.
— Линус Торвальдс,[33]
Исправление исправного
Непрерывная эволюция языка побуждает (а порой вынуждает) программистов раз за разом изменять уже отлаженный код — это не только удорожает разработку, но и несёт риск внедрения в отлаженный код новых ошибок. В частности, хотя изначально обратная совместимость с Си была одним из базовых принципов C++, с 1999 года Си перестал быть подмножеством C++, так что отлаженный код на Си уже не может использоваться в проекте на C++ без изменений.

Сложность ради самой сложности
C++ определяется его апологетами как «мощнейший» именно потому, что он изобилует опасными взаимно-противоречивыми возможностями. По мнению Эрика Реймонда, это делает язык сам по себе почвой для личного самоутверждения программистов, превращения процесса разработки в самоцель:

Программисты — это зачастую яркие люди, которые гордятся … своей способностью справляться со сложностями и ловко обращаться с абстракциями. Часто они состязаются друг с другом, пытаясь выяснить, кто может создать «самые замысловатые и красивые сложности». … соперники полагают, что должны соревноваться с чужими «украшательствами» путём добавления собственных. Довольно скоро «массивная опухоль» становится индустриальным стандартом, и все используют большие, переполненные ошибками программы, которые не способны удовлетворить даже их создателей.
…
… такой подход может обернуться неприятностями, если программисты реализуют простые вещи сложными способами, просто потому что им известны эти способы и они умеют ими пользоваться.
— Эрик Реймонд в [51]
Саботаж
Отмечены случаи, когда нерадивые программисты, пользуясь сильной контекстной зависимостью C++ и отсутствием возможности отслеживания макроопределений компилятором, тормозили разработку проекта, написав одну-две лишних, корректных с точки зрения компилятора, строки кода, но внедрив за их счёт труднообнаружимую спонтанно проявляющуюся ошибку. Например:

#define if(a) if(rand())
#define j i
В языках с доказанной корректностью, даже с развитыми макросредствами, нанести урон подобным образом невозможно.

Ненадёжность продукта
Неоправданное обилие побочных эффектов в сочетании с отсутствием контроля со стороны системы времени исполнения языка и слабой системой типов делает программы на C++ подверженными непредсказуемым фатальным сбоям (общеизвестные падения с сообщениями типа «Access violation», «Pure virtual function call» или «Программа выполнила недопустимую операцию и будет закрыта»), что исключает применение C++ при высоких требованиях к отказоустойчивости. Кроме того, это увеличивает длительность самого процесса разработки[34].

Менеджмент проектов
Перечисленные выше факторы делают сложность менеджмента проектов на C++ одной из самых высоких в индустрии разработки ПО.

Джеймс Коггинс, в течение четырёх лет ведущий колонку в The C++ Report, даёт такое объяснение:
 — Проблема в том, что программисты, работающие в ООП, экспериментировали с кровосмесительными приложениями и были нацелены на низкий уровень абстракции. Например, они строили такие классы как «связанный список», вместо «интерфейс пользователя», или «луч радиации», или «модель из конечных элементов». К несчастью, строгая проверка типов, которая помогает программистам C++ избегать ошибок, одновременно затрудняет построение больших объектов из маленьких.
— Ф. Брукс, Мифический человеко-месяц
Влияние и альтернативы

Программа «Hello, world!» на C и C++.
Единственным прямым потомком C++ является язык D, задуманный как переработка C++ для устранения наиболее очевидных его проблем. Авторы отказались от совместимости с Си, сохранив синтаксис и многие базовые принципы C++ и введя в язык возможности, характерные для новых языков. В D нет препроцессора, заголовочных файлов, множественного наследования, но есть система модулей, интерфейсы, ассоциативные массивы, поддержка unicode в строках, сборка мусора (при сохранении возможности ручного управления памятью) встроенная многопоточность, вывод типов, явное объявление чистых функций и неизменяемых значений. Использование D весьма ограничено, считать его реальным конкурентом C++ нельзя.

Старейшим конкурентом C++ в задачах низкого уровня является Objective-C, также построенный по принципу объединения Си с объектной моделью, только объектная модель унаследована от Smalltalk. Objective-C, как и его потомок Swift, широко используется для разработки ПО под macOS и iOS.

Одной из первых альтернатив C++ в прикладном программировании стал язык Java. Его часто ошибочно считают прямым потомком C++; в действительности семантика Java унаследована от языка Модула-2, и основы семантики C++ в Java не прослеживаются. Учитывая это, а также генеалогию языков (Модула-2 является потомком Симулы, как и C++, но им не является Си), Java правильнее называть «троюродным племянником» C++, нежели «наследником». То же можно сказать о языке C#, хоть процент родственности с C++ у него несколько выше, чем у Java.

Попыткой совмещения безопасности и скорости разработки, характерных для Java и C#, с возможностями C++ явился диалект Managed C++ (впоследствии — C++/CLI). Он разработан Microsoft в основном для переноса существующих проектов на C++ под платформу Microsoft.NET. Программы выполняются под управлением CLR и могут использовать весь массив библиотек .NET, но при этом накладывается ряд ограничений на использование возможностей C++, что фактически сводит C++ к C#. Данный диалект не получил широкого признания и используется в основном лишь для связывания библиотек, написанных на чистом C++, с C#-приложениями.

Альтернативный путь развития языка Си — совмещение его не с объектно-ориентированным, а с аппликативным программированием, то есть улучшение абстракции, строгости и модульности низкоуровневых программ посредством обеспечения предсказуемости поведения и ссылочной прозрачности. Примерами работ в этом русле служат языки BitC, Cyclone и Limbo. Хотя есть и успешные попытки применения ФП в задачах реального времени без интеграции со средствами Си[52][53][54], всё же на данный момент (2013 г.) в низкоуровневой разработке применение в той или иной мере средств Си имеет лучшее соотношение трудоёмкости с результативностью. Много усилий было приложено разработчиками Python и Lua для обеспечения использования этих языков программистами на C++, так что из всех языков, достаточно тесно связанных с ФП, именно они чаще всего отмечаются в совместном использовании с C++ в одном проекте. Наиболее значимыми точками соприкосновения C++ с ФП можно считать привязки разработанных на C++ библиотек wxWidgets и Qt с характерной для C++ идеологией к языкам Lisp, Haskell и Python (в большинстве случаев привязки к функциональным языкам делают для библиотек, написанных на Си или на других функциональных языках).

Ещё одним языком, рассматриваемым как конкурент C++, стал Nemerle, являющийся результатом попытки совместить модель типизации Хиндли-Милнера и макроподмножество Common Lisp с языком C#[55]. В том же русле находится созданный Microsoft язык F# — диалект ML, адаптированный для среды .NET.

Попыткой создать промышленную замену Си и C++ стал разработанный в корпорации Google в 2009 году язык программирования Go. Авторы языка прямо указывают, что мотивом для его создания были недостатки процесса разработки, вызванные особенностями языков Си и C++[56]. Go — компактный, несложный по структуре императивный язык с Си-подобным синтаксисом, без препроцессора, со статической типизацией, строгим контролем типов, системой пакетов, автоматическим управлением памятью, некоторыми функциональными чертами, экономно построенной ООП-подсистемой без поддержки наследования реализации, но с интерфейсами и утиной типизацией, встроенной многопоточностью, основанной на сопрограммах и каналах (в духе Occam). Язык позиционируется как альтернатива C++, то есть, в первую очередь, средство групповой разработки высокоэффективных вычислительных систем большой сложности, в том числе распределённых, допускающее, при необходимости, низкоуровневое программирование.

В одной нише с Си и C++ находится разработанный в 2010 году и поддерживаемый корпорацией Mozilla язык Rust, ориентированный на безопасное управление памятью без использования сборщика мусора. В частности, о планах частичной замены Си и C++ на Rust объявила в 2019 компания Microsoft[57].
Ассе́мблер (от англ. assembler — сборщик) — транслятор программы из текста на языке ассемблера в программу на машинном языке.

Как и сам язык, ассемблеры, как правило, специфичны для конкретной архитектуры, операционной системы и варианта синтаксиса языка, поскольку работают с мнемониками машинных инструкций определённого процессора. Вместе с тем, ассемблеры могут быть мультиплатформенными или вовсе универсальными, то есть работать на разных платформах и операционных системах. Среди ассемблеров можно также выделить группу кросс-ассемблеров, имеющих возможность собирать машинный код и исполняемые модули (файлы) для архитектур, отличных от архитектуры и/или операционной системы, в которых работает сам ассемблер (например, трансляция программы для микроконтроллера ассемблером, работающим на компьютере).

Логотип Викисловаря	В Викисловаре есть статья «макроассемблер»
Многие современные ассемблеры являются макроассемблерами (от греч. μάκρος — большой, обширный), то есть макропроцессорами на базе языка ассемблера[1]. Кроме макросов, ассемблеры при трансляции выполняют другие директивы, набор которых зависит не от аппаратной платформы, для которой транслируется программа, а от самого используемого транслятора.

Ассемблирование может быть не первым и не последним этапом на пути получения исполнимого модуля программы. Так, многие компиляторы с языков программирования высокого уровня выдают результат в виде программы на языке ассемблера, которую в дальнейшем обрабатывает ассемблер. В свою очередь, результатом ассемблирования может быть не исполняемый, а объектный модуль, содержащий разрозненные блоки машинного кода и данных программы, из которого (или из нескольких объектных модулей) в дальнейшем с помощью редактора связей (линкера) может быть получен исполняемый файл.

В отличие от компиляции программ на языках высокого уровня, ассемблирование является более или менее однозначным и обратимым процессом, поскольку в языке ассемблера каждой мнемонике соответствует одна машинная инструкция, в то время как в высокоуровневых языках каждое выражение может преобразовываться в большое число различных инструкций. Операция, обратная ассемблированию, называется дизассемблированием. Трансляцию ассемблерных программ иногда также называют компиляцией.


Содержание
1	Архитектура x86
1.1	Ассемблеры для DOS
1.2	Windows
1.3	GNU и Linux
1.4	Переносимые ассемблеры
2	Архитектуры RISC
2.1	MCS-51
2.2	AVR
2.3	ARM
2.4	PIC
2.5	AVR32
2.6	MSP430
2.7	PowerPC
2.8	MIPS
3	Архитектура виртуальной машины ассемблера
3.1	Ассемблер fasmg (архитектура CALM-инструкций)
4	См. также
5	Примечания
6	Литература
Архитектура x86
Ассемблеры для DOS
Наиболее известными ассемблерами для операционной системы DOS являлись Borland Turbo Assembler (TASM), Microsoft Macro Assembler (MASM) и Watcom Assembler (WASM). Также в своё время был популярен простой ассемблер A86.

Windows
При появлении операционной системы Windows появилось расширение TASM, именуемое TASM 5+ (неофициальный пакет, созданный человеком с ником neonovd’), позволившее создавать программы для выполнения в среде Windows. Последняя известная версия TASM — 5.3, поддерживающая инструкции MMX, на данный момент включена в Turbo C++ Explorer. Но официально развитие программы полностью остановлено. Последнее развитие компилятор получил благодаря современной среде разработки TASM Visual. Среда неофициальная, но с её помощью работа с компилятором многократно упрощается.

Microsoft поддерживает свой продукт под названием Microsoft Macro Assembler. Она продолжает развиваться и по сей день, последние версии включены в наборы DDK. Но версия программы, направленная на создание программ для DOS, не развивается. Кроме того, Стивен Хатчессон создал пакет для программирования на MASM под названием «MASM32».

GNU и Linux
В состав операционной системы GNU входит пакет binutils, включающий в себя ассемблер GAS (GNU Assembler), использующий AT&T-синтаксис, в отличие от большинства других популярных ассемблеров, которые используют Intel-синтаксис (поддерживается с версии 2.10).

Переносимые ассемблеры
Также существует открытый проект ассемблера, версии которого доступны под различные операционные системы и который позволяет получать объектные файлы для этих систем. Называется этот ассемблер NASM (Netwide Assembler).

Yasm — это переписанная с нуля версия NASM под лицензией BSD (с некоторыми исключениями).

flat assembler (fasm) — молодой ассемблер под модифицированной для запрета перелицензирования (в том числе под GNU GPL) BSD-лицензией. Есть версии для KolibriOS, Linux, DOS и Windows; использует Intel-синтаксис и поддерживает инструкции x86-64.

Архитектуры RISC
MCS-51
MCS-51 (Intel 8051) — классическая архитектура микроконтроллера. Для неё существует кросс-ассемблер ASM51, выпущенный корпорацией MetaLink.

Кроме того, многие фирмы-разработчики программного обеспечения, такие как IAR или Keil, представили свои варианты ассемблеров. В ряде случаев применение этих ассемблеров оказывается более эффективным благодаря удобному набору директив и наличию среды программирования, объединяющей в себе профессиональный ассемблер и язык программирования Си, отладчик и менеджер программных проектов.

AVR
На данный момент для AVR существует четыре компилятора производства Atmel (AVRStudio 3, AVRStudio 4, AVRStudio 5 и AVRStudio 6, AVRStudio 7).

В рамках проекта AVR-GCC (он же WinAVR) существует компилятор avr-as (это портированный под AVR ассемблер GNU as из GCC).

Также существует свободный минималистический компилятор avra[2].

Платные компиляторы: IAR (EWAVR), CodeVisionAVR, Imagecraft. Данные компиляторы поддерживают языки Assembler и C, а IAR ещё и C++.

Существует компилятор с языка BASIC — BASCOM, также платный.

ARM
Для процессоров ARM существует достаточно широкий выбор компиляторов, внутренняя реализация которых зависит от непосредственно производителя данного ARM-процессора либо разработчика IDE для работы с ARM-процессорами. Официальным компилятором ARM, непосредственно от компании ARM, является ARM Compiler 6, который входит в IDE DS-5 Development Studio и поддерживает компиляцию программ на языках Си и C++.
Компиляторы от поставщиков ARM процессоров и разработчиков ARM toolchain:

Поставщик IDE	Компилятор	Поддерживаемые языки	Условия использования
Keil mVision	MDK-ARM	Си/C++/Assembler	Shareware (не более 32kb)
IAR Embedded Workbench	IAR Compiller	Си/C++/Assembler	Commercial
CoIDE	GCC compiler	Си/C++/Assembler	Free/Commercial
True Studio	Precompiled GCC compiler	Си/C++/Assembler	Free/Commercial
PIC
Средой разработки, выпускаемой компанией Microchip Technology для создания, редактирования и отладки программ для микроконтроллеров семейства PIC, является MPLAB. Среда включает в себя трансляторы с языка ассемблер MPASM и ASM30 для различных семейств микроконтроллеров PIC. Современные версии среды «MPLAB X IDE» являются мультиплатформенными и работают под различными операционными системами для ЭВМ. Среда распространяется бесплатно.

AVR32
Пазлинка и перо
Этот раздел статьи ещё не написан.
Здесь может располагаться отдельный раздел. Помогите Википедии, написав его. (3 октября 2020)
MSP430
Пазлинка и перо
Этот раздел статьи ещё не написан.
Здесь может располагаться отдельный раздел. Помогите Википедии, написав его. (3 октября 2020)
PowerPC

Этот раздел не завершён.
Вы поможете проекту, исправив и дополнив его.
Программный пакет The PowerPC Software Development Toolset от IBM включает в себя ассемблер для PowerPC.

MIPS
Пазлинка и перо
Этот раздел статьи ещё не написан.
Здесь может располагаться отдельный раздел. Помогите Википедии, написав его. (3 октября 2020)
Архитектура виртуальной машины ассемблера
Ассемблер fasmg (архитектура CALM-инструкций)
Является наследником ассемблера flat assembler (fasm) со схожим синтаксисом, но в отличие от fasm не привязан ни к какой архитектуре процессора. Его парадигмой является формирование посредством макросов выходных файлов любых форматов и с машинным кодом под любые архитектуры процессоров. Помимо макросов в fasmg присутствуют так называемые CALM-инструкции (букв. «инструкции компилируемой сборки, подобные макросам») — собственные инструкции виртуальной машины ассемблера, эквивалентные макросам, которые преобразуются транслятором в байт-код. Архитектуру этих CALM-инструкций можно считать «родной» архитектурой ассемблера fasmg. В комплекте имеются наборы CALM-инструкций для эмуляции поддержки инструкций архитектур x86, x64, 8052, AVR; разработчиком могут быть описаны наборы CALM-инструкций для поддержки любой другой архитектуры, поддержки любых выходных форматов файлов. Имеются вариации транслятора для Mac OS, Linux и Windows[3][4][5].

x86 (англ. Intel 80x86) — архитектура процессора и одноимённый набор команд, впервые реализованные в процессорах компании Intel.

Название образовано от двух цифр, которыми заканчивались названия процессоров Intel ранних моделей — 8086, 80186, 80286 (i286), 80386 (i386), 80486 (i486). За время своего существования набор команд постоянно расширялся, сохраняя совместимость с предыдущими поколениями.

Помимо Intel, набор команд x86 также реализован в процессорах других производителей: AMD, VIA, Transmeta, IDT, Zhaoxin[2], МЦСТ (в процессорах Эльбрус) и др. В настоящее время для 32-разрядной версии архитектуры существует ещё одно название — IA-32 (Intel Architecture — 32).


Содержание
1	Основные особенности архитектуры
1.1	Сегментная организация памяти
1.1.1	Реальный режим (real mode)
1.1.2	Защищённый режим (protected mode)
1.1.3	Режим виртуального 8086 (virtual 8086 mode, V86)
1.1.4	Смешанные режимы
1.2	Страничная организация памяти
2	Расширения
2.1	PAE
2.2	MMX
2.3	SSE
2.4	SSE2
2.5	SSE3
2.6	SSSE3
2.7	SSE4
2.8	SSE5
2.9	AVX
2.10	AVX2
2.11	AES
2.12	3DNow!
2.13	64-битный режим
2.14	Виртуализация
3	Процессоры
3.1	Процессоры Intel
3.2	Процессоры AMD
3.3	Процессоры Harris Semiconductor
3.4	Процессоры Cyrix
3.5	Процессоры IDT
3.6	Процессоры OKI
3.7	Процессоры Rise Technology
3.8	Процессоры VIA
3.9	Процессоры NEC
3.10	Процессоры NexGen
3.11	Процессоры SiS
3.12	Процессоры Transmeta
3.13	Процессоры UMC
3.14	Процессоры, выпускавшиеся в СССР и России[7]
3.15	Процессоры BLX IC Design/ICT
4	Кодирование инструкций
5	Примечания
6	Ссылки
Основные особенности архитектуры
x86 — это CISC-архитектура. Доступ к памяти происходит по «словам». «Слова» размещаются по принципу little-endian, известному также как Intel-формат. Современные процессоры включают в себя декодеры команд x86 для преобразования их в упрощённый внутренний формат с последующим их выполнением.


Таблица x86-регистров
Сегментная организация памяти
Основная статья: Сегментная адресация памяти
Реальный режим (real mode)
Реальный режим — классический режим адресации, использованный в первых моделях семейства. Адрес ячейки памяти (для работы с данными или для загрузки исполняемой команды процессора) формируется из сегмента (содержимого сегментного регистра) и смещения (константа, регистр, сумма регистра с константой или сумма двух регистров с константой); это записывается в виде SSSS:OOOO (Segment:Offset), где S и O — шестнадцатеричные цифры. Сам адрес вычисляется по формуле «Segment*16 + Offset».

Предельный адрес, к которому можно обратиться — это FFFF:FFFF, то есть FFFF0+FFFF=10FFEF или словами: «один мегабайт + 64 килобайта - 16 байт». Однако, у процессоров 8086, 8088 и 80186 адресная шина была всего 20 бит, и поэтому всё, что выходило за пределы одного мегабайта, оказывалось в начале памяти (в нулевом сегменте). Начиная с процессора 80286, можно было выбирать — работать в этом же режиме для совместимости или же при помощи драйвера HiMem задействовать дополнительный сегмент памяти, в котором можно было разместить DOS и резидентные программы. (Помимо DOS, на компьютере могли работать другие операционные системы. Информация о том, как они использовали верхнюю память, вряд ли сохранилась.)

Оперативная память при этом оказывалась как бы неоднородной — небольшие блоки данных можно было обрабатывать, манипулируя только регистрами смещения, а для больших блоков данных приходилось манипулировать сегментными регистрами. Для описания этого были введены следующие термины:

«параграф» — блок памяти размером 16 байт;
«страница» — блок памяти размером 256 байт;
«сегмент» — блок памяти размером 65536 байт;
(все блоки начинались с адреса, кратного их размеру).

Начиная с процессора 80386, при помощи драйвера DOS4GW появилась возможность использовать реальный режим с 32-битными регистрами и адресовать до четырёх гигабайт памяти. Сами сегменты тут фактически оказались не нужны.

Микропроцессоры 8086/8088, 80186/80188 и 80286 имели четыре сегментных регистра, т.е могли работать одновременно с четырьмя сегментами памяти, имеющими определённое назначение:

CS — сегмент кода, используется для выборки команд программы;
DS — сегмент данных, используется по умолчанию для доступа к данным;
ES — дополнительный сегмент, является получателем данных в командах обработки строк;
SS — сегмент стека, используется для размещения программного стека.
В 80386 добавили ещё два, не имеющих специального назначения:

FS — Дополнительный сегментный регистр, специального назначения не имеет;
GS — Аналогично предыдущему, но в новых процессорах с 64-битной архитектурой имеет особый статус: может использоваться для быстрого переключения контекстов.
Несмотря на то, что сегментные регистры имеют специальные назначения, архитектура допускает при некоторых обращениях к данным заменить один сегмент на любой другой. Сегменты кода, стека и получателя строк всегда используют регистры CS, SS и ES и не могут быть изменены.

Сегментный подход позволяет разделить всю память на 16 сегментов, начинающихся с адресов, кратных 64 Кбайт. Эти 16 сегментов называют страницами памяти. Обычно деление на страницы используется для совместного функционирования устройств, интерфейсы которых отображены на адресное пространство памяти; тогда каждое такое устройство использует одну страницу памяти, и адрес ячейки в адресном пространстве устройства будет совпадать со смещением в сегменте памяти компьютера. Так в компьютерах IBM PC адресное пространство распределялось таким образом:

Первые десять сегментов (640 Кбайт) адресного пространства содержат оперативную память, в которой размещаются:
векторы прерываний;
область данных BIOS;
DOS (если его не заставили разместиться в HiMem);
код и данные выполняющихся программ.
Два сегмента отдавались под видеоадаптер — VideoBIOS и «окно» для отображения видеопамяти в адресное пространство процессора (для видеоадаптеров CGA, EGA, VGA и остальных способ отображения очень сильно различался).
Три сегмента использовались для размещения там разных вещей, например:
программы, зашитые в ПЗУ, например, интерпретатор BASIC;
BIOS различных плат расширения, например, SCSI-контроллеров (SCSI-BIOS был необходим в случае, если компьютер должен загружаться с диска, подключённого к данному контроллеру);
«окна» для отображения туда Expanded-памяти.
Последний сегмент первого мегабайта предназначался для размещения ПЗУ со стартовым BIOS. В частности, адрес FFFF:0000 — тот, на который передаётся управление при старте компьютера (то есть после аппаратной инициализации процессор начинает выполнение программы с этого адреса).
Первый сегмент за пределами первого мегабайта — HiMem, о котором говорилось выше.
В реальном режиме отсутствует защита памяти и разграничение прав доступа, поэтому он уже практически вышел из употребления. Однако, реальный режим является режимом по умолчанию для всех моделей процессоров семейства x86 — процессор начинает свою работу именно в реальном режиме, в котором выполняется BIOS, MBR, BR и начальная часть OS-Loader. Поэтому все операционные системы, работающие на процессорах x86, имеют в своём составе некоторое количество стартового кода для этого режима процессора.

Защищённый режим (protected mode)
Более совершенный режим, впервые появившийся в процессоре 80286 и в дальнейшем многократно улучшавшийся. Имеет большое количество подрежимов, по которым можно проследить эволюцию семейства ЦП. В этом режиме поддерживается защита памяти, контексты задач и средства для организации виртуальной памяти. Аналогично реальному режиму, тут также используется сегментированная модель памяти, однако уже организованная по другому принципу: деление на параграфы отсутствует, а расположение сегментов описывается специальными структурами (таблицами дескрипторов), расположенными в оперативной памяти. Помимо базового адреса сегмента дескрипторы содержат размер сегмента (точнее, максимально доступное смещение) и различные атрибуты сегментов, использующиеся для защиты памяти и определения прав доступа к сегменту для различных программных модулей. Существует два типа дескрипторных таблиц: глобальная и локальная. Глобальная таблица описывает сегменты операционной системы и разделяемых структур данных. Локальная таблица может быть определена для каждой конкретной задачи (процесса). Сегменты памяти также выбираются все теми же сегментными регистрами; однако вместо номера параграфа сегментный регистр содержит специальную структуру (селектор), содержащую индекс дескриптора в таблице. Сам же дескриптор загружается из памяти во внутренний программно недоступный регистр (кеш), привязанный к каждому сегментному регистру и автоматически загружаемый в момент его модификации.

Каждый программный модуль, выполняемый в защищённом режиме, определяется его сегментом кода, описываемым регистром CS, который и определяет его привилегии по доступу к данным и другим модулям. Существует 4 уровня привилегий (0, 1, 2 и 3), называемых кольцами защиты. Кольцо 0 наиболее привилегированное. Оно предназначено для модулей ядра операционной системы. Кольцо 3 — наименее привилегированное, и предназначено для пользовательских программ. Кольца 1 и 2 используются лишь некоторыми операционными системами. Сегменты данных также имеют атрибуты прав доступа, дающие доступ только коду, имеющему такие же или более высокие привилегии. Система колец позволяет гибко распределять доступ к коду и данным.

Процессор 80386, появившийся в 1985 году, в отличие от своих предшественников стал 32-битным. В нём появилась возможность адресовать до 4 гигабайт памяти, что позволило создавать сегменты памяти размером во всё адресное пространство. Поэтому новые операционные системы использовали вырождённую модель организации памяти, когда все сегменты начинаются с нулевого адреса. Такая модель получила название плоской (flat memory model), и адрес задаётся одним целым 32-разрядным числом (хотя по сути он является смещением внутри вырожденного сегмента), а сами сегменты используются исключительно для организации защиты по кольцам привилегий.

Режим виртуального 8086 (virtual 8086 mode, V86)
Является подрежимом защищенного, но использует адресную модель, аналогичную реальному режиму. Применяется для запуска старых программ 8086 в среде современных операционных систем. В отличие от реального режима, где все программы имеют доступ ко всей памяти (кольцо 0), в режиме V86 программа выполняется в кольце 3 (наименее привилегированном), а особые ситуации и прерывания обрабатываются обычными процедурами защищенного режима.

Смешанные режимы
Сегментное MMU современных процессоров, несмотря на кардинальные различия двух его основных режимов, в обоих работает схожим образом. Это позволяет организовывать нестандартные режимы не описанные в официальной документации, но иногда очень полезные при написании программ. Поскольку известно, что внутренние кэши дескрипторов используются во всех режимах, и именно они используются для адресации памяти, при понимании логики их работы возможна загрузка в них нестандартных значений для текущего режима. В частности, можно создать дескрипторную таблицу в реальном режиме, установить флаг PE, загрузить сегментные регистры уже в защищенном режиме, а потом тут же сбросить флаг PE. До следующей перезагрузки сегментного регистра его кеш дескриптора будет содержать значение, соответствующее защищенному режиму, и если он был загружен должным образом, появится возможность адресации до 4 GiB памяти. Подобные нестандартные режимы получили общее название Unreal mode и активно используются BIOS'ами персональных компьютеров. В процессоре 80286 также была возможность загрузки нестандартных значений дескрипторного кеша при помощи недокументированной команды LOADALL; что было особенно актуально, поскольку процессор 80286 не позволял сбрасывать флаг PE (из защищённого режима выходили с помощью сброса процессора, что сказывалось на производительности).

Страничная организация памяти
В процессорах, начиная с 80386, появилось мощное MMU, позволяющее организовать отображение страниц памяти, что было ещё одним поводом перехода на плоскую модель с приходом 32-разрядных вычислений. Используя трансляцию страниц, операционная система может создать собственное линейное адресное пространство для каждого процесса; также каждая страница имеет атрибуты прав доступа. В отличие от сегментов, таких уровней существует только 2: пользователь и супервизор. Но для большинства современных операционных систем этого вполне достаточно. Страничное MMU доступно только в защищенном режиме.

Расширения

Информация в этом разделе устарела.
Вы можете помочь проекту, обновив её и убрав после этого данный шаблон.
Основная статья: Расширения архитектуры x86
PAE
Основная статья: PAE
В более поздних 32-разрядных процессорах (начиная с Pentium Pro) появилось PAE (Physical Address Extension) — расширение адресов физической памяти до 36 бит (возможность адресации 64 Гбайт ОЗУ). Это изменение не затронуло разрядности задач — они остались 32-битными.

MMX
Основная статья: MMX
Дополнительный «мультимедийный» (англ. Multi-Media eXtensions) набор инструкций, выполняющих по несколько характерных для процессов кодирования/декодирования потоковых аудио/видеоданных действий за одну машинную инструкцию. Впервые появился в процессорах Pentium MMX. Обеспечивает только целочисленные вычисления.

SSE
Основная статья: SSE
SSE (англ. Streaming SIMD Extensions — потоковое SIMD-расширение) — SIMD (англ. Single Instruction, Multiple Data — «одна инструкция — множество данных») набор инструкций, разработанный Intel и впервые представленный в процессорах серии Pentium III. Поддерживает вычисления с плавающей точкой. SSE состоит из восьми 128-битных регистров (с xmm0 до xmm7). Каждый регистр определяет 4 последовательных значения с плавающей точкой одинарной точности. SSE включает в себя инструкции, которые производят операции со скалярными и упакованными типами данных.

SSE2
Основная статья: SSE2
Улучшенное расширение SSE. Появилось в процессорах Pentium 4. Производит потоковые вычисления с вещественными числами двойной точности (2 числа по 64 бита в одном регистре SSE). Кроме того, добавлены инструкции, аналогичные расширению MMX, работающие с регистрами SSE (16 байт, 8 слов, 4 двойных слова или 2 учётверённых слова в одном регистре). SSE2 включает в себя ряд команд управления кэшем, предназначенных для минимизации загрязнения кэша при обработке неопределенных потоков информации.

SSE3
Основная статья: SSE3
Продолжение SSE и SSE2, появилось в процессорах Prescott. Набор SSE3 содержит 13 инструкций: FISTTP (x87), MOVSLDUP (SSE), MOVSHDUP (SSE), MOVDDUP (SSE2), LDDQU (SSE/SSE2), ADDSUBPD (SSE), ADDSUBPD (SSE2), HADDPS (SSE), HSUBPS (SSE), HADDPD (SSE2), HSUBPD (SSE2), MONITOR (нет аналога в SSE3 для AMD), MWAIT (нет аналога в SSE3 для AMD). Наиболее заметное изменение — возможность горизонтальной работы с регистрами. Если говорить более конкретно, добавлены команды сложения и вычитания нескольких значений, хранящихся в одном регистре. Эти команды упростили ряд DSP и 3D-операций. Существует также новая команда для преобразования значений с плавающей точкой в целые без необходимости вносить изменения в глобальном режиме округления.

SSSE3
Основная статья: SSSE3
Дополнение к SSE3 для работы с упакованными целыми. Новыми в SSSE3, по сравнению с SSE3, являются 16 уникальных команд, работающих с упакованными целыми. Каждая из них может работать как с 64-битными (MMX), так и с 128-битными (XMM) регистрами, поэтому Intel в своих материалах ссылается на 32 новые команды.

Категории новых инструкций: работа со знаком, сдвиги, перемешивание байт, умножения, горизонтальные сложения и вычитания целых.

SSE4
Основная статья: SSE4
Новый набор команд Intel, впервые реализованный в процессорах серии Penryn.

SSE4 состоит из 54 инструкций, 47 из них относят к SSE4.1 (они есть только в процессорах Penryn). Полный набор команд (SSE4.1 и SSE4.2, то есть 47 + оставшиеся 7 команд) доступен в процессорах Nehalem. Ни одна из SSE4 инструкций не работает с 64-битными mmx регистрами, только со 128-битными xmm0-15. 32-битных процессоров с SSE4 не было выпущено.

Добавлены инструкции, ускоряющие компенсацию движения в видеокодеках, быстрое чтение из USWC памяти, множество инструкций для упрощения векторизации программ компиляторами. Кроме того, в SSE4.2 добавлены инструкции обработки строк 8/16 битных символов, вычисления CRC32, popcnt. Впервые в SSE4 регистр xmm0 стал использоваться как неявный аргумент для некоторых инструкций.

Новые инструкции SSE4.1 включают ускорение видео, работу с векторными примитивами, вставки/извлечения, скалярное умножение векторов, смешивания, проверки бит, округления, чтение WC-памяти.

Новые инструкции SSE4.2 включают обработку строк, подсчёт CRC32, подсчёт популяции единичных бит, работу с векторными примитивами.

SSE5
Основная статья: SSE5
Новое расширение x86 инструкций от AMD, названное SSE5. Было анонсировано в 2007 году, но так и не было реализовано как изначально предполагалось. Позднее было заменено XOP, FMA, F16C.

AVX
Основная статья: AVX
Следующий набор расширений от Intel. Поддерживается обработка чисел с плавающей запятой упакованных в 256-битные «слова». Для них вводится поддержка тех же команд, что и в семействе SSE. 128-битные регистры SSE XMM0 — XMM15 расширяются до 256-битных YMM0-YMM15

Intel Post 32 nm processor extensions — новый набор инструкций Intel, позволяющий конвертировать числа с половинной точностью в числа с одинарной и двойной, аппаратно получать истинно случайные числа и обращаться к регистрам FS/GS.

AVX2
Основная статья: AVX
Дальнейшее развитие AVX. Целочисленные команды SSE начинают работать с 256-битными AVX регистрами.

AES
Основная статья: Расширение системы команд AES
Расширение системы команд AES — реализация в микропроцессоре шифрования AES.

3DNow!
Основная статья: 3DNow!
Набор инструкций для потоковой обработки вещественных чисел одинарной точности. Поддерживается процессорами AMD начиная с K6-2. Процессорами Intel не поддерживается.

Инструкции 3DNow! используют регистры MMX в качестве операндов (в один регистр помещается два числа одинарной точности), поэтому, в отличие от SSE, при переключении задач не требуется отдельно сохранять контекст 3DNow!.

64-битный режим
Основные статьи: IA-64 и x86-64
К началу 2000-х годов стало очевидно, что 32-битное адресное пространство архитектуры x86 ограничивает производительность приложений, работающих с большими объёмами данных. 32-разрядное адресное пространство позволяет процессору осуществлять непосредственную адресацию лишь 4 ГБ данных. Этого может оказаться недостаточным для некоторых приложений, связанных, например, с обработкой видео или обслуживанием баз данных.

Для решения этой проблемы Intel разработала новую архитектуру IA-64 — основу семейства процессоров Itanium. Для обеспечения обратной совместимости со старыми приложениями, использующими 32-разрядный код, в IA-64 был предусмотрен режим эмуляции. Однако на практике данный режим работы оказался чрезвычайно медленным.

Компания AMD предложила альтернативное решение проблемы увеличения разрядности процессора. Вместо того, чтобы изобретать совершенно новую систему команд, было предложено ввести 64-разрядное расширение к уже существующей 32-разрядной архитектуре x86. Первоначально новая архитектура называлась x86-64, позже она была переименована в AMD64. Первоначально новый набор инструкций поддерживался процессорами семейств Opteron, Athlon 64 и Turion 64 компании AMD. Успех процессоров, использующих технологию AMD64, наряду с вялым интересом к архитектуре IA-64, побудили Intel приобрести лицензию на набор инструкций AMD64. При этом был добавлен ряд специфических инструкций, не присутствовавших в изначальном наборе AMD64. Новая версия архитектуры получила название EM64T.

В литературе и названиях версий своих программных продуктов компании Microsoft и Sun используют объединённое именование AMD64/EM64T, когда речь заходит о 64-разрядных версиях их операционных систем Windows и Solaris соответственно. В то же время, поставщики программ для операционных систем семейства Linux, BSD используют метки «x86-64» или «amd64», а в Mac OS X используется метка «x86_64», если необходимо подчеркнуть, что данное ПО использует 64-разрядные инструкции.

Виртуализация

Этот раздел не завершён.
Вы поможете проекту, исправив и дополнив его.
Процессоры
Процессоры Intel
8086
16-разрядный процессор Intel 8086, был создан в июне 1978 года. Сначала работал на частоте 5 МГц, затем на 8 и 10 МГц. Изготавливался по технологии 3 мкм и имел 29 000 транзисторов.

8088
Чуть позже, в 1979 году, был разработан Intel 8088, который работал на тех же частотах, что и Intel 8086, но использовал 8-разрядную шину данных (внутренняя шина процессора осталась 16-разрядной) для обеспечения большей совместимости с имевшейся в то время в ходу периферией. Благодаря более низкой цене, широко использовался в ранних системах IBM PC вместо 8086.

80186/80188
В 1982 году были выпущены 80186 и 80188, которые первоначально не получили широкого распространения. В то же время, эти процессоры оказались чрезвычайно удачными для использования во встроенных системах и в различных модификациях выпускаются до настоящего времени.[3] В эти процессоры были первоначально добавлено несколько новых команд, повышена тактовая частота. Впоследствии появились модификации, содержащие дополнительные аппаратные средства, такие, как интегрированные контроллеры последовательного порта.

80286
Объявлен в 1982 году. Работал на частотах 6, а затем 8, 10, 12, 16, 20 МГц. Производился по техпроцессу 1,5 мкм и содержал около 134 тыс. транзисторов. С его появлением появилось такое понятие, как защищённый режим (protected mode) и виртуальная память. Производительность процессора по сравнению с 8086 увеличилась в несколько раз (0,99-2,6 млн операций в секунду).

80386 (i386)
Первый 32-разрядный процессор, работал на частотах 16-40 МГц. Появился в 1985 году. Знаменовал собой революцию в мире процессоров x86. Основные принципы, заложенные в этом чипе, без кардинальных изменений дожили и до наших дней (за всё это время изменения касались, в основном, повышения производительности, расширения набора команд, увеличения разрядности). Первые 386 процессоры содержали серьёзную ошибку, приводящую к невозможности функционирования в защищенном режиме. Исправленная версия называлась 386DX.

Также выпускались более дешевые процессоры i386SX с урезанной до 16 бит внешней шиной данных и 24-битной шиной адреса.

Для встроенного применения выпускался и выпускается процессор i386EX. Он имеет на кристалле последовательные порты, программируемые таймеры (совместимые с Intel 8254), контроллеры приоритетных прерываний (совместимые с Intel 8259A) и контроллеры прямого доступа к памяти (совместимые с Intel 8237A).

i386 — первый процессор, который мог использовать кэш-память (расположенную на внешнем чипе).

80486 (i486)
Процессор i486 (1989 год) является усовершенствованным 386 процессором и первым скалярным процессором Intel (ряд операций выполнялись за один такт). Имел встроенный FPU (Floating Point Unit — блок вычислений с плавающей запятой) и впервые — встроенную кэш-память (8 Кбайт). 80486 — первый процессор Intel, для которого была применена технология умножения частоты шины FSB (в моделях DX2-50, DX2-66, DX4-75 и DX4-100).

Для ноутбуков и встраиваемых систем в начале 1990-х годов была выпущена «облегчённая» модификация i486SX без встроенного блока FPU.

Существовала также модификация для встроенных применений — i486GX. Она представляла собой низковольтный 486SX с шиной данных, урезанной до 16 бит. Корпусировка i486GX — TQFP-176, частоты — от 16 МГц при Vcore = 2,0 В до 33 МГц при 2,7 В.

Intel RapidCad
Intel RapidCad — модификация 486, набор из двух микросхем. Основная устанавливалась в разъём 386DX и представляла собой 486DX без кэша L1, но с сопроцессором. Дополнительная микросхема была заглушкой для гнезда 387DX и служила для обработки сигнала FERR.

Intel486 OverDrive
Intel486 OverDrive (P23T) — микропроцессор, предназначенный для модернизации систем на базе микропроцессоры Intel 486.

Pentium (i586)
Pentium (1993 год. Intel отказалась от номерных названий типа 8086, 80286 и др., потому что не могла запатентовать числа) — первый суперскалярный и суперконвейерный процессор Intel.

Суперскалярность — означает, что процессор позволяет выполнять более одной операции за один такт. Суперконвейерность означает, что процессор имеет несколько вычислительных конвейеров. У Pentium их два, что позволяет ему при одинаковых частотах в идеале быть вдвое производительней 486, выполняя сразу 2 инструкции за такт.

Кроме того, особенностью процессора Pentium являлся полностью переработанный и очень мощный на то время блок FPU, производительность которого оставалась недостижимой для конкурентов вплоть до конца 1990-х годов.

Pentium OverDrive
Pentium OverDrive — микропроцессор, предназначенный для модернизации систем на базе микропроцессоров Intel 486. Устанавливался в Socket 3, имел удвоенный объём кэша L1 с организацией Write-Thru, встроенный стабилизатор питания, умножение ×2.5 и частоты 63 и 83 МГц.

Pentium Pro (i686)

Pentium Pro (1995 год) — первый процессор шестого поколения. Идеи и технологии, заложенные в данный чип, определили архитектуры всех современных x86-процессоров: блоки предсказания ветвлений, переименование регистров, RISC-ядро, интегрированная в один корпус с ядром кэш-память второго уровня. Однако технологическая сложность ядра данного процессора привела к сравнительно невысокому выходу годных чипов при технологиях того времени, что сказалось на высокой цене Pentium Pro. При этом процессор обладал достаточно низкой производительностью при исполнении 16-разрядного кода. Поэтому данный процессор применялся только в High-End системах и серверах.

Pentium MMX (i586)
Pentium MMX (январь 1997 года) — процессор пятого поколения, и, по сути, просто модификация ядра Pentium. Был добавлен новый блок целочисленных матричных вычислений MMX и увеличен до 32 Кбайт объём кэш-памяти первого уровня. Напряжение питания ядра было понижено до 2,8 В, в то время как периферия процессора питалась по-прежнему напряжением 3,3 В. Это потребовало изменения материнских плат путём добавления дополнительного источника 2,8 В (MMX-compatible).

Pentium II (i686)
Pentium II (май 1997 года) — модификация ядра Pentium Pro с целью сделать его более доступным. Интегрированный кэш и тег кэша были вынесены на отдельные микросхемы с пониженной в два раза частотой. Это упростило и удешевило процессор, хотя и сделало его более медленным, чем Pentium Pro.

Первые процессоры Pentium II выпускались с кэш-памятью второго уровня ёмкостью 256 Кбайт, затем её объём был увеличен до 512 Кбайт.

Новая конструкция процессора потребовала размещения элементов на печатной плате, что, в свою очередь, привело к изменению конструктива процессора. Данные ЦПУ выпускались в виде картриджей SECC, устанавливающихся в специальный разъём на плате (Slot 1).

Кроме того, в ядро Pentium II был добавлен блок MMX.

Celeron
Celeron — упрощённая модификация процессоров Pentium II / III / IV / Core / Core 2 для построения недорогих компьютеров. Первый Celeron (ядро Covington, частоты 266/300 МГц) представлял собой Pentium II, лишенный кеша второго уровня и пластикового картриджа. Печатная плата также была упрощена. Такая упаковка получила название SEPP (Single Edge Processor Package). В результате эти процессоры демонстрировали удручающе низкую производительность, хотя стоили очень недорого и легко прибавляли до 50 % частоты при разгоне. Все последующие варианты этого процессора имели интегрированный полночастотный кеш второго уровня. Основные отличия процессоров Celeron в объёме этого кэша и частоте шины, а также часто в увеличенной латентности доступа к кэш-памяти по отношению к оригинальному процессору.

Вторая модификация Celeron (ядро Mendocino, частоты 300…533 МГц) на многих задачах демонстрировала более высокую производительность, чем равночастотный Pentium II. Это объяснялось тем, что маленький (128 Кбайт) кеш Mendocino располагался на одном кристалле с ядром и работал на частоте ядра, в то время как большой (512 Кбайт) кеш Pentium II находился достаточно далеко от ядра и работал на половинной частоте. Больше таких промашек фирма Intel не допускала, и все последующие Celeron гарантированно медленнее полноценных процессоров того же поколения.

Pentium III (i686)
Pentium III, изготовленный изначально по технологическому процессу 0,18 мкм, отличается от P2 главным образом добавлением инструкций SSE. Поздние процессоры этой серии изготавливались по технологическому процессу 0,13 мкм, получили интегрированную в кристалл ядра полночастотную кэш-память (сначала 256 Кбайт, затем — 512 Кбайт) и послужили прообразом процессоров архитектуры Pentium M. Выпускались в конструктивах как SECC/SECC2 (Slot 1), так и FCPGA-370 (PGA-370).

Pentium M
Pentium M — очень сильно доработанная версия процессора Pentium III на ядре Tualatin, разработанная для использования в мобильных компьютерах.

Pentium 4 (i786)
Pentium 4 — принципиально новый процессор с гиперконвейеризацией (hyperpipelining) — с конвейером, состоящим из 20 ступеней. Согласно заявлениям Intel, процессоры, основанные на данной технологии, позволяют добиться увеличения частоты примерно на 40 % относительно семейства P6 при одинаковом технологическом процессе (при «правильной» загрузке процессора). На практике же, первое поколение процессоров работало даже медленнее, чем Pentium III.

Позже были дополнены поддержкой Hyper-threading и 64-битного кода.

Core/Core 2
После провала последнего поколения процессоров Pentium 4 на ядре Tejas, было решено обратиться к другой ветви микроархитектуры. В основе процессоров лежит переработанное ядро Pentium M. Таким образом, ядро P6, использованное ещё в процессорах Pentium Pro, продолжило свою эволюцию, нарастив частоту со 150 МГц до 3,2 ГГц и обзаведясь новой системной шиной, поддержкой многоядерности, мультимедийных инструкций.

Процессоры Core — решение для ноутбуков, одно- и двухъядерное, исполняющее 32-битный код.

Процессоры Core 2 — выпускаются как в настольном, так и мобильном исполнении, включают ряд микроархитектурных улучшений и способны исполнять 32/64-битный код. Количество ядер варьируется от одного до четырёх.

Core i7/Core i5/Core i3
Дальнейшее развитие идей, заложенных в процессорах Core 2. Сохранив основную конструкцию процессорных ядер, появившийся первым Core i7 получил модульную структуру, позволяющую легко варьировать их количество, встроенный контроллер памяти (трёхканальной DDR3 в высшем сегменте и двухканальной DDR3 в массовом) и новую шину, соединяющую процессор с чипсетом. Микроархитектурные улучшения позволяют Core i7 показывать повышенную производительность в сравнении с Core 2 на равных частотах. Большое внимание было уделено вопросу энергоэффективности нового процессора.

Позже появились более дешевые Core i5/i7 с двухканальным контроллером памяти и четырьмя ядрами, затем — Core i3/i5 с двумя ядрами и встроенным видеоядром.

В секторе наиболее производительных решений выпускаются также процессоры Core i7 с трехканальным контроллером памяти и шестью ядрами. Благодаря использованию технологии Hyper-threading эти процессоры способны одновременно исполнять до 12 потоков команд.

Также в ассортименте компании Intel есть особо производительные процессоры для домашних ПК: Core i7 с трехканальным контроллером памяти и восемью ядрами. Количество потоков возросло до 16.

Atom
Intel Atom — недорогие сверхэкономичные одно- и двухъядерные процессоры, предназначенные для использования в так называемых интернет-компьютерах — нетбуках и неттопах (компьютерах, в которых вычислительная мощность пожертвована в пользу экономичности, бесшумности и малогабаритности).

В основе — модифицированное ядро от первых Pentium, которое адаптировали под новый техпроцесс, добавили возможность исполнения 64-битного кода и мультимедийных инструкций, а также кэш-память второго уровня и поддержку многопоточного исполнения (SMT, аналог Hyper-threading). Для упрощения конструкции было решено отказаться от внеочередного исполнения команд, что не лучшим образом сказалось на производительности.

Стараниями корпорации Intel новые процессоры серии Atom были оснащены 4 полноценными ядрами и усовершенствованным предсказанием ветвлений, что позволило новым планшетным ПК на их основе стать конкурентоспособными в производительности с ноутбуками среднего класса, выпущенными в конце 2000-х годов.

Xeon
Семейство процессоров, ориентированных на серверы и многопоточные вычисления.

Первый представитель этого семейства базировался на архитектуре Pentium II, представлял собой картдридж с печатной платой, на которой монтировались ядро, кэш-память второго уровня и тег кэша. Монтировался в гнездо Slot 2.

Современные Xeon базируются на архитектуре Core 2/Core i7.

Процессоры AMD
Am8086 / Am8088 / Am186 / Am286 / Am386 / Am486
Клоны соответствующих процессоров от Intel. Обычно выпускались с максимальной частотой на ступеньку выше, чем у оригинала. Вплоть до 486DX2-66 других различий между процессорами не было. Программно отличить эти процессоры было почти невозможно, но с помощью модификации кода программы на ассемблере можно было счётчиком измерить размер буфера команд микропроцессора, который существовал в intel-процессорах вплоть до pentium и имел различный размер в байтах, и отличить один тип процессора от другого. Также анализируя возможность выполнять различные дополнительные команды, которые добавлялись в различных моделях микропроцессоров, можно было различить все эти микросхемы.

5x86
Клон i486. В то время, как Intel для i486 остановился на частоте 100 МГц, AMD выпускала процессоры с частотами до 133 МГц. Также они отличались увеличенным объёмом кэша первого уровня (16 Кбайт) и множителем (×4).

K5 / SSA5
Аналоги Pentium. Первые процессоры, разработанные фирмой AMD самостоятельно. Несмотря на превосходство в целочисленных операциях над аналогами от Intel (в ядре данного процессора применялся ряд технологий шестого поколения), производительность блока вычислений с плавающей запятой значительно уступала по производительности процессорам Pentium с аналогичной тактовой частотой. Кроме того, наблюдалась плохая совместимость с ПО некоторых производителей. Недостатки K5 были чрезвычайно преувеличены в различных сетевых и других неформальных обсуждениях и на долгое время способствовали (в целом — несправедливому) ухудшению репутации продукции AMD у пользователей.[4]

K6
Принципиально новый процессор AMD (апрель 1997 года), основанный на ядре, приобретённом у NexGen. Данный процессор имел конструктив пятого поколения, однако относился к шестому поколению и позиционировался как конкурент Pentium II. Включал в себя блок MMX и несколько переработанный блок FPU. Однако данные блоки всё равно работали на 15-20 % медленнее, чем у аналогичных по частоте процессоров Intel. Процессор имел 64 Кбайт кэша первого уровня.

В целом, сравнимая с Pentium II производительность, совместимость со старыми материнскими платами и более ранний старт (AMD представила К6 на месяц раньше, чем Intel представила P-II) и более низкая цена сделали его достаточно популярным, однако проблемы с производством у AMD значительно испортили репутацию данного процессора.

K6-2
Дальнейшее развитие ядра К6. В этих процессорах была добавлена поддержка специализированного набора команд 3DNow!. Реальная производительность, однако, оказалась существенно ниже, чем у аналогичных по частоте Pentium II (это было вызвано тем, что прирост производительности с ростом частоты у P-II был выше благодаря внутреннему кэшу) и конкурировать К6-2 смогли лишь с Celeron. Процессор имел 64 Кбайт кэша первого уровня.

K6-III
Более успешная в технологическом плане, чем K6-2, попытка создания аналога Pentium III. Однако маркетингового успеха не имела. Отличается наличием 64 Кбайт кэша первого уровня и 256 Кбайт кэша второго уровня в ядре, что позволяло ему на равной тактовой частоте обгонять по производительности Intel Celeron и не очень существенно уступать ранним Pentium III.

K6-III+
Аналог K6-III с технологией энергосбережения PowerNow! и более высокой частотой и расширенным набором инструкций. Изначально предназначался для ноутбуков. Устанавливался и в настольные системы с процессорным разъёмом Super 7. Применялся для апгрейда настольных систем с процессорным разъёмом Socket 7 (Только на материнских платах которые подают на процессор два напряжения питания, первое для блоков ввода/вывода процессора и второе для ядра процессора. Не все изготовители обеспечивали двойное питание на первых моделях своих материнских плат с разъемом Socket 7).

K6-2+
Аналог К6-III+ с урезанным до 128 Кбайт кэшем второго уровня.

Athlon
Очень успешный процессор, благодаря которому фирма AMD сумела восстановить почти утраченные позиции на рынке микропроцессоров. Кэш первого уровня — 128 Кбайт. Первоначально процессор выпускался в картридже с размещением кэша второго уровня (512 Кбайт) на плате и устанавливался в разъём Slot A (который механически, но не электрически совместим со Slot 1 от Intel). Затем перешёл на разъём Socket A и имел 256 Кбайт кэша второго уровня в ядре. По быстродействию — примерный аналог Pentium III.

Duron
Урезанная версия Athlon, отличается от родителя объёмом кэша второго уровня (всего 64 Кбайт, зато интегрированным в кристалл и работавшем на частоте ядра).

Конкурент Celeron поколений Pentium III / Pentium 4. Производительность заметно выше, чем у аналогичных Celeron, и при выполнении многих задач соответствует Pentium III.

Athlon XP
Продолжение развития архитектуры Athlon. По быстродействию — аналог Pentium 4. По сравнению с обычным Athlon, добавлена поддержка инструкций SSE.

Sempron
Более дешёвый (за счёт уменьшенного кэша второго уровня) вариант процессоров Athlon XP и Athlon 64.

Первые модели Sempron являлись перемаркированными чипами Athlon XP на ядре Thoroughbred и Thorton, имевшими 256 Кбайт кэша второго уровня, и работавшими на 166 (333 DDR) шине. Позднее под маркой Sempron выпускались (и выпускаются) урезанные версии Athlon 64/Athlon II, позиционируемые как конкуренты Intel Celeron. Все Sempron имеют урезанный кеш 2-го уровня; младшие модели Socket 754 имели заблокированные Cool&quiet и x86-64; Socket 939 модели имели заблокированный двухканальный режим работы памяти.

Opteron
Первый процессор, поддерживающий архитектуру x86-64.

Athlon 64
Первый не серверный процессор, поддерживающий архитектуру x86-64.

Athlon 64 X2
Продолжение архитектуры Athlon 64, имеет 2 вычислительных ядра.

Athlon FX
Имел репутацию «самого быстрого процессора для игрушек». Является, по сути, серверным процессором Opteron 1xx на десктопных сокетах без поддержки registered-memory. Выпускается малыми партиями. Стоит значительно дороже своих «массовых» собратьев.

Phenom
Дальнейшее развитие архитектуры Athlon 64, выпускается в вариантах с двумя (Athlon 64 X2 Kuma), тремя (Phenom X3 Toliman) и четырьмя (Phenom X4 Agena) ядрами.

Phenom II
Модификация Phenom. Небольшие архитектурные изменения, переход на более тонкий технологический процесс и добавление кэша L3 объёмом от 4 до 6 Мбайт позволили нарастить производительность этих процессоров на 10-20 % по сравнению с предшественниками. Выпускаются в конструктивах Socket AM2+ и Socket AM3. При этом первые могут работать только с памятью DDR2, а вторые — как с DDR2, так и с DDR3. Максимальное число ядер выросло до шести.

Athlon II
Phenom II без кеша L3 и количеством ядер не более четырёх.

Turion
Мобильная версия Athlon 64 с пониженным энергопотреблением и расширенными средствами управления питанием. Выпускается в вариантах с одним и двумя ядрами.

Athlon Neo
Максимально оптимизированные по энергопотреблению одно- и двухъядерные процессоры, близкие родственники мобильных Sempron и Turion 64 X2. Выпускаются в исполнении BGA, предназначены для использования в легких и тонких ноутбуках. Позиционируются, как конкуренты Intel Atom.

Geode
Интегрированное решение (SoC), включающее в себя функции северного моста чипсетов. Модели с наименованием SCxxxx объединяют в одном корпусе ядро процессора, контроллер памяти, графический адаптер и контроллер ввода-вывода. Процессоры предназначены для построения тонких клиентов, пользовательских приставок и встроенных контроллеров. Вся серия обладает небольшой потребляемой мощностью и стоимостью.

Первые модели выпускались фирмой Cyrix под названием MediaGX и имели ядро Cyrix 6x86. После поглощения Cyrix компанией National Semiconductor и перепродажи торговой марки компании VIA, процессор был переименован в Geode, разработка процессора была продолжена инженерами National Semiconductor. Впоследствии чип и все наработки были проданы компании AMD. Сейчас Geode выпускается фирмой AMD в трёх вариантах. Geode LX и Geode GX основаны на старом ядре Cyrix 6x86. Geode NX имеет ядро Athlon XP. Развитие этого семейства прекратилось ещё в 2006 году, однако чипы будут продолжать выпускаться до тех пор, пока на них есть спрос.

Процессоры Harris Semiconductor
Harris 8086/88
Harris Semiconductor производила клоны Intel 8086/8088[5] — Harris HS80C86/883 и HS80C88/883.

Harris 286
Harris Semiconductor выпускала самые быстрые по частоте клоны процессора 80286 — максимальная частота HS80C286 составляла 25 МГц (вся линейка — 12, 16, 20 и 25 МГц). Ядро процессоров было точной копией Intel 80286, как и у большинства других клонов.

Процессоры Cyrix
Cx486-SLC
Процессоры, предназначенные для установки в гнездо 386SX. Обладали кэш-памятью первого уровня размером 1 Кбайт и набором команд 486 процессоров. Встроенного сопроцессора не имели. В дальнейшем также выпускались модели с удвоением частоты (Cx486SRx²). Предназначались в основном для дешевого апгрейда компьютеров с процессором 386SX.

Cx486-DLC
Процессоры, предназначенные для установки в гнездо 386DX. Обладали кэш-памятью первого уровня размером 1 Кбайт и набором команд 486 процессоров. Встроенного сопроцессора не имели. В дальнейшем также выпускались модели с удвоением частоты (Cx486DRx²). Предназначались в основном для дешевого апгрейда компьютеров с процессором 386DX.

Cx486-S
Аналог i486SX собственной разработки Cyrix. Уступал по производительности аналогам от Intel и AMD.

Cx486-DX
Аналог i486DX собственной разработки Cyrix. Слегка уступал по целочисленной производительности аналогам от Intel и Amd, однако превосходил их в вычислениях с плавающей точкой (сказалось то, что разработанные Cyrix математические сопроцессоры для 386 были одними из лучших).

Cx5x86 (M1sc)
Побочный продукт разработки M1 — M1 scalar, его упрощённая версия для гнезда 486. Был выпущен, чтобы противостоять Intel в борьбе с его Pentium. В Cx5x86 использовались особенности архитектуры, присущие пятому поколению процессоров — конвейеризованный АЛУ, блок предсказания переходов, декодирование и исполнение инструкций за один такт. Общий для инструкций и данных кэш с обратной записью имел объём 16 Кбайт. Процессор оказался достаточно удачным, но особого распространения получить не успел. Выпускался с частотами 100 и 120 МГц.

Cx6x86 (M1)
Несмотря на намёк на 6-е поколение процессоров в названии, Cx6x86 был процессором 5-го поколения. Ядро процессора суперскалярное. Кеш первого уровня — общий, 16 Кбайт. В маркировке этих процессоров использовался так называемый Pentium Rating. Например, процессор с PR-200 должен был соответствовать по производительности процессору Intel Pentium с частотой 200 МГц. При этом реальная частота процессора могла быть значительно ниже. Выпускались эти процессоры с частотой от 80 до 150 МГц и PR от 90+ до 200+. Позже также выпускалась модификация с пониженным энергопотреблением и двойным питанием — Cx6x86L.

Cx6x86MX (MII)
Усовершенствованная версия Cx6x86 называлась Cx6x86MX. Основные отличия — увеличенный до 64 Кбайт кеш первого уровня, поддержка инструкций MMX. Частоты — 133…233 МГц, PR — 166…266. В дальнейшем процессор получил поддержку частоты системной шины 100 МГц, и стал называться Cyrix MII (это было сделано для того, чтобы позиционировать процессор как конкурент Intel Pentium II). Частоты — 225…300 МГц, PR — 300…433.

MediaGX
Практически, SoC. В одном корпусе размещались ядро процессора (сначала — Cx5x86, потом — Cx6x86MX), контроллеры ОЗУ и шины PCI, а также UMA-видеоядро. Процессор использовал своё собственное гнездо, не был поддержан производителями материнских плат и распространения не получил. Частоты — 120…180 МГц, PR — 180…233.

Клоны процессоров Cyrix выпускались также IBM, Texas Instruments, SGS Thompson.

На базе ядер Cyrix производятся или производились процессоры VIA, AMD, National Semiconductor.

Процессоры IDT
IDT-C6 Centaur WinChip
Процессор разработан Centaur Technology — подразделением IDT. Являясь процессором под Socket 7, по архитектуре он был гораздо ближе к процессорам 80486. Один 4-стадийный целочисленный конвейер, операции сопроцессора не конвейеризовались. Также отсутствовали внеочередное исполнение, предсказание ветвлений и переименование регистров. При этом процессор имел блок исполнения инструкций MMX, хотя и вдвое более медленный, чем у Pentium MMX. За счёт этого ядро процессора было очень простым, небольшим по количеству транзисторов, габаритам и энергопотреблению. Процессоры выпускались с частотами 180, 200, 225 и 240 МГц и не требовали двойного питания.

WinChip-2
Улучшенный вариант предыдущего процессора. Сопроцессор стал конвейеризуемым, удвоена производительность блока MMX, появилась поддержка инструкций 3DNow!. Частоты — 200—250 МГц.

WinChip-2A
Всё то же, но по более тонкой технологии. Как следствие — потребность в двойном питании (2,8 / 3,3 В).

WinChip-3
Планировался как улучшенная версия предыдущей модели. Основное улучшение — удвоенный размер кэш-памяти. Однако выпущен он так и не был. Centaur Technology в полном составе была продана VIA и на базе этой разработки был сделан VIA C3 с ядром Samuel.

Процессоры OKI
OKI M80C86
Клон 8086. Выпускался в корпусах типа DIP и QFP.

OKI M80C88
Клон 8088. Выпускался в корпусах типа DIP и QFP.

Процессоры Rise Technology
Rise mP6
Процессор для Socket 7 с поддержкой инструкций MMX. Отличался низким энергопотреблением и невысокой производительностью. Выпускался с частотами 150, 166, 190, 200, 250 МГц. Особого распространения не получил и ядро mP6 было продано компании SiS.

Процессоры VIA
Cyrix III / VIA C3
Первый процессор, выпущенный под маркой VIA. Выпускался с разными ядрами от разных команд разработчиков. Разъём Socket 370.

Первый выпуск — на базе ядра Joshua, доставшегося VIA вместе с командой разработчиков Cyrix.

Второй выпуск — с ядром Samuel, разработанным на базе так и не вышедшего IDT WinChip-3. Отличался отсутствием кэш-памяти второго уровня и, соответственно, крайне низким уровнем производительности.

Третий выпуск — с ядром Samuel-2, улучшенной версией предыдущего ядра, оснащённой кэш-памятью второго уровня. Процессор выпускался по более тонкой технологии и имел сниженное энергопотребление. После выпуска этого ядра бренд «VIA Cyrix III» окончательно уступил место «VIA С3».

Четвёртый выпуск — с ядром Ezra. Был также вариант Ezra-T, адаптированный для работы с шиной, предназначенной для процессоров Intel с ядром Tualatin. Дальнейшее развитие в направлении энергосбережения.

Пятый выпуск — с ядром Nehemiah (C5P). Это ядро наконец получило полноскоростной сопроцессор, поддержку инструкций SSE, а также поддержку шифрования AES и аппаратный генератор случайных чисел. При этом процессор потерял поддержку инструкций 3DNow!.

VIA C7
Дальнейшее развитие VIA C3. Ядро Esther (C5J), корпусировка — nanoBGA2 (21×21 мм), впаивается прямо на плату. Добавлены аппаратная поддержка Secure Hash SHA-1 и SHA-256 и шифрования RSA, поддержка NX-bit, поддерживаются MMX, SSE, SSE2 и SSE3. Дальнейшее снижение энергопотребления при рабочих частотах до 2 ГГц. Собственная системная шина (VIA V4 800 МГц) для связи с чипсетом. Выпускается также в мобильном (VIA C7-M) и десктопном (VIA C7-D) исполнении.

VIA Eden ESP
Интегрированное решение, включающее в себя процессор VIA C3 c ядром Nehemiah C5P и северный мост со встроенной UMA-графикой. Отличается крайне низким энергопотреблением (до 7 Вт при частоте 1 ГГц). Выпускается с частотами от 300 МГц (VIA Eden ESP 3000) до 1 ГГц (VIA Eden ESP 10000). Совместимые южные мосты — VT8235M, VT8237R+ (с поддержкой SATA), VT8251 (2×1 PCI-E) и VIA 686B.

VIA CoreFusion
Дальнейшее развитие идей VIA Eden ESP. Выпускается в двух вариантах — VIA Mark и VIA Luke, отличающихся интегрированным видеоядром, поддерживаемым типом памяти и рабочими частотами. Для VIA Mark — это S3 Graphics ProSavage4 / SDR PC133 / 533/800 МГц, а для VIA Luke — VIA UniChrome Pro / DDR PC3200 / 533/800/1000 МГц. Совместимые южные мосты: VT8235M, VT8237R+ (с поддержкой SATA), VT8251 (2×1 PCI-E) и VIA 686B.

VIA Nano
Первый x86-64 процессор VIA, на ядре Isaiah. Совместим по выводам с VIA C7. Выпускается с частотами от 1 ГГц до 1,8 ГГц. Энергопотребление модели 1,6 ГГц — до 17 Вт при полной загрузке. Среди нововведений — внеочередное исполнение инструкций. Позиционируется как конкурент Intel Atom.

Процессоры NEC
Выпускала серию процессоров, часть из которых (ядро V20/V30) была программно совместима как с 80186, так и с 8080. Переключение между режимами работы осуществлялось при помощи трёх дополнительных инструкций. Аппаратно они выглядели как сильно ускоренная версия 8088 или 8086.

Процессоры на основе ядра V33 не имели режима эмуляции 8080, зато поддерживали, при помощи двух дополнительных инструкций, расширенный режим адресации.

Процессоры NexGen
Nx586
В марте 1994 был представлен процессор NexGen Nx586. Он позиционировался как конкурент Pentium, однако изначально не имел встроенного сопроцессора. Использование собственной шины повлекло за собой необходимость применения собственных чипсетов, NxVL (VESA Local Bus) и NxPCI 820C500 (PCI), и ни с чем несовместимого процессорного гнезда. Чипсеты разрабатывались совместно с VLSI и Fujitsu. Nx586 был суперскалярным процессором и мог исполнять по две инструкции за такт. Кэш L1 был раздельным (16 Кбайт под инструкции + 16 Кбайт под данные). Контроллер кэша L2 был интегрирован в процессор, сам же кэш находился на материнской плате. Так же, как и Pentium Pro, Nx586 внутри был RISC-процессором. Отсутствие поддержки инструкций CPUID в ранних модификациях этого процессора приводило к тому, что программно он определялся как быстрый 386 процессор. С этим же было связано то, что Windows 95 отказывался устанавливаться на компьютеры с такими процессорами. Для решения этой проблемы применялась специальная утилита (IDON.COM), представлявшая Nx586 для Windows как 586 class CPU. Nx586 выпускался на мощностях IBM.

Был также разработан сопроцессор Nx587 FPU, который монтировался на заводе поверх кристалла процессора. Такие «сборки» получили маркировку Nx586Pf. При обозначении производительности Nx586 использовался P-rating — c PR75 (70 МГц) до PR120 (111 МГц).

Nx686
Следующее поколение процессоров NexGen, которое так и не было выпущено, однако послужило основой для AMD K6.

Процессоры SiS
SiS550[6]
Семейство SoC SiS550 базируется на лицензированном ядре Rise mP6 и выпускается с частотами от 166 до 266 МГц. При этом самые скоростные решения потребляют всего 1,8 Вт. У ядра три целочисленных 8-ступенчатых конвейера. Кэш L1 раздельный, 8+8 Кбайт. Встроенный сопроцессор конвейеризован. В состав SiS550, кроме стандартного набора портов, входят 128-битное UMA-видеоядро AGP 4x, 5.1-канальный звук, поддержка 2 DIMM (до 1 Гбайт ОЗУ), поддержка софт-модема и UDMA100 IDE-контроллер.

В SiS551 также добавлен встроенный контроллер Smart Card и Memory Stick, а в SiS552 — декодер MPEG2, акселерация проигрывания DVD и VCD.

Также клон SiS551 выпускается Jan Yin Chan Electronics Co., LTD (DM&P) под торговой маркой Vortex86 (чип маркируется как M6127D) и Xcore Corporation Ltd. под торговой маркой Xcore86.

Процессоры Transmeta
Crusoe
Строго говоря, Crusoe не является x86-процессором. Для исполнения x86-кода используется программный транслятор во внутренние 128-битные VLIW-инструкции под названием Code Morphing Software. Это позволяет адаптировать процессор к любому набору команд и улучшает энергоэффективность, но производительность такого решения заведомо меньше, чем у процессоров с нативной системой команд x86.

Efficeon
Развитие идеи сочетания VLIW-процессора и Code Morphing Software. Основное отличие от предыдущего решения — VLIW-инструкции стали 256-битными.

Процессоры UMC
UMC Green CPU (U5)
U5 — семейство микропроцессоров класса 80486. Имели несколько вариантов маркировки: U5SB-40, U5S-Super33 и т. п. Основной изюминкой был значительно оптимизированный микрокод и полностью статический дизайн, в результате чего эти процессоры имели повышенную производительность (некоторые недобросовестные продавцы даже продавали их как процессоры с удвоением частоты — U5S-33 как SX2-66 и U5S-40 как SX2-80). Модели U5S не имели математического сопроцессора, а варианты с сопроцессором должны были называться U5D, но так и не были выпущены.

Intel добилась судебного запрета на продажу Green CPU в США, обосновав это тем, что UMC использовала в своих процессорах микрокод Intel, не имея лицензии.

Существовали и некоторые проблемы с ПО. Например, игра Doom отказывалась запускаться на этом процессоре без правки конфигурации, а Windows 95 время от времени зависала. Это было связано с тем, что программы находили в U5S отсутствующий сопроцессор и попытки обращения к нему заканчивались крахом.

Процессоры, выпускавшиеся в СССР и России[7]
КР1810ВМ86 (К1810ВМ86)
Аналог 8086.

КР1834ВМ86/ЭКР1834ВМ86 — аналог 8086 (точнее 80C86, так как выпущен по КМОП-технологии).
КР1810ВМ86М/КМ1810ВМ86М — фактически аналог 8086, но с изменениями — добавлены некоторые команды из 80286. Устанавливался в ЭВМ ЕС1842.
К1810ВМ88 — аналог 8088.
КФ1847ВМ286 (экспортный вариант ЭКФ1847ВМ2) — аналог 80286. Опытные образцы выпускались заводом имени Дзержинского (разработчик НТЦ «Белмикросистемы») НПО «Интеграл».
Процессоры МЦСТ
Компанией ЗАО МЦСТ выпущена серия микропроцессоров «Эльбрус», позволяющих работать в режиме двоичной совместимости с архитектурой x86. Совместимость обеспечивается за счёт программной динамической трансляции x86-кодов с использованием аппаратной поддержки, заложенной в архитектуру микропроцессора «Эльбрус».

Процессоры BLX IC Design/ICT
BLX IC Design и Институт компьютерных технологий Китая с 2001 разрабатывает MIPS-based процессоры с аппаратной трансляцией x86-команд. Выпускаются эти процессоры STMicroelectronics. Рассматривается партнерство с TSMC.

Godson (Longxin, Loongson, Dragon)
Godson — 32-разрядный RISC-процессор на базе MIPS. Технология — 180 нм. Представлен в 2002 году. Частота — 266 МГц, через год — версия с частотой 500 МГц.

Godson 2
Godson 2 — 64-разрядный RISC-процессор на базе MIPS III. Технология 90 нм. На равной частоте превосходит своего предшественника по быстродействию в 10 раз. Представлен 19 апреля 2005 года.
Godson-2E — 500 МГц, 750 МГц, позже — 1 ГГц. Технология — 90 нм. 47 млн транзисторов, энергопотребление — 5…7,5 Вт. Первый Godson с аппаратной трансляцией команд x86, причем на неё тратится до 60 % производительности процессора. Представлен в ноябре 2006 года.
Godson 2F — 1,2 ГГц, выпускается с марта 2007 года. Декларируется повышение производительности по сравнению с предшественником на 20-30 %.
Godson 2H — планировался к выпуску в 2011 году. Будет оснащен встроенными видеоядром и контроллером памяти и предназначается для потребительских систем.
Godson 3[8]
Godson 3 — 4 ядра, технология 65 нм. Энергопотребление — около 20 Вт.
Godson 3B — 8 ядер, технология 65 нм (планируется переход на 28 нм), тактовая частота в пределах 1 ГГц. Площадь кристалла — 300 мм². Производительность на операциях с плавающей точкой составляет 128 GigaFLOPS. Энергопотребление 8-ядерного Godson 3—40 Вт. Трансляция в код x86 выполняется с помощью набора из 200 инструкций, на трансляцию тратится порядка 20 % производительности процессора. В процессоре присутствует 256-разрядный векторный SIMD-блок обработки. Процессор предназначен для использования в серверах и встраиваемых системах.
Godson 3C — планировался к выпуску в 2012 году и должен был быть 16-ядерным.
Кодирование инструкций

Эта статья или раздел нуждается в переработке.
Пожалуйста, улучшите статью в соответствии с правилами написания статей.
[источник не указан 2945 дней]

В данном разделе буква «h» после числа обозначает значение в 16-ричной системе счисления. Если ничего подобного рядом с числом нет, то это - десятичное значение.

В x86 применяется относительно простой формат записи инструкций, но из-за некоторых исключений он может показаться сложным. На всякий случай — за головную документацию можно взять «Intel® 64 IA-32 Architectures Software Developer’s Manual» (доступно на официальном сайте корпорации Intel в формате PDF). Там есть детальная информация по всем инструкциям.

Структура же произвольной инструкции следующая:

Префиксы (каждый из них опционален):
Однобайтовый префикс смены режима адресации AddressSize (значение 67h).
Однобайтовый префикс изменения сегмента Segment (значения 26h, 2Eh, 36h, 3Eh, 64h и 65h).
Однобайтовый префикс BranchHint для указания предпочтительной ветки перехода (значения 2Eh и 3Eh).
Двухбайтовый или трёхбайтовый сложноструктурированный префикс Vex (первый байт всегда имеет значение C4h для двухбайтового варианта или C5h для трёхбайтового).
Однобайтовый префикс Lock для запрета модификации памяти другими процессорами или ядрами (значение F0h).
Однобайтовый префикс OperandsSize для изменения размера операнда (значение 66h).
Однобайтовый префикс Mandatory для уточнения инструкции (значения F2h и F3h).
Однобайтовый префикс Repeat означает повторение (значения F2h и F3h).
Однобайтовый структурированный префикс Rex нужен для указания 64-битных или расширенных регистров (имеет значения 40h..4Fh).
Префикс Escape. Всегда состоит как минимум из одного байта 0Fh. За этим байтом опционально идёт байт 38h или 3Ah. Предназначен для уточнения инструкции.
Точно определяющие инструкцию байты:
Байт Opcode (произвольное константное значение).
Байт Opcode2 (произвольное константное значение).
Байт Params (имеет сложную структуру).
Байт ModRm используется для операндов в памяти (имеет сложную структуру).
Байт SIB так же используется для операндов в памяти и имеет сложную структуру.
Встроенные в инструкцию данные (опциональны):
Смещение или адрес в памяти (Displacement). Целое число со знаком размером 8, 16, 32 или 64 бита.
Первый или единственный непосредственный операнд (Immediate). Может быть размером 8, 16, 32 или 64 бита.
Второй непосредственный операнд (Immediate2). Если присутствует, то обычно имеет размер в 8 бит.
В списке выше и далее для технических имён принято наименование «только латиница, арабские цифры» и знак минуса «-» со знаком подчёкивания «_», а регистр — CamelCase (любое слово начинается с прописной, а далее - только строчные, даже если это аббревиатура: «UTF-8» → «Utf8» — все слова вместе). Префиксы AddressSize, Segment, BranchHint, Lock, OperandsSize и Repeat могут перемешаны между собой. Остальные элементы должны идти именно в указанном порядке. И видно, что байтовые значения некоторых префиксов совпадают. Их назначение и наличие определяет уже сама инструкция. Префиксы переопределения сегмента могут применяться с большинством инструкций, а префиксы BranchHint применяются только с инструкциями условного перехода. Аналогичная ситуация с префиксами Mandatory и Repeat — где-то они уточняют инструкцию, а где-то - указывают на повторение. Префикс OperandSize вместе в префиксами Mandatory ещё относят к префиксам SIMD-инструкции. Отдельно следует сказать про префикс Vex. Он заменяет префиксы Rex, Mandatory, Escape и OperandsSize, компактизируя их в себе. С ним недопустимо использование префикса Lock. Сам же префикс Lock может добавляться, когда приёмником является операнд в памяти.

Обзорный список всех интересующих режимов с точки зрения кодирования инструкций:

16-битный («Real Mode», реальный режим с сегментной адресацией).
32-битный («Protected Mode», защищённый режим с плоской моделью памяти).
64-битный («Long Mode», как 32-битный защищённый с плоской моделью памяти, но адреса уже 64-битные).
В скобках английские названия режимов соответствуют официальным. Ещё есть синтетические режимы навроде нереального (Unreal x86 Mode), но они все вытекают из этих трёх (по сути это гибриды, которые отличаются лишь размером адреса, операндов и прочим). В каждом из них используется «родной» режим адресации, но его можно сменить на альтернативный префиксом OperandsSize. В 16-битном режиме включится 32-битный режим адресации, в 32-битном режиме — 16-битный, а в 64-битном — 32-битный. Но если это делать, то адрес расширяется с дополнением нулями (если он меньше) или же его старшие биты сбрасываются (если он больше).

Фу́рри (англ. furry «пушистый, покрытый мехом») — это сообщество людей, которые интересуются искусством и культурой, связанными с антропоморфными животными — существами, обладающими человекоподобными чертами. Фурри создают костюмы, рисунки и другие формы самовыражения, используя мотивы природы и идентифицируя себя[⇨] с персонажами, но не считая себя украшением или воплощением животных. Некоторые фурри прочно идентифицируют себя с одним или несколькими видами животных, что может проявляться в онлайн-взаимодействии, а иногда и в создании костюмов-фурсьютов[⇨][5][6][7]. Фурри-культура является одним из видов самовыражения человека. Фурри-фэндом потребляет и создает художественные и литературные материалы, а также собирается вместе на Интернет-ресурсах и конференциях (конвентах).

Фурри-фэндом — сообщество этих людей. Сексуальность[⇨] и демография фурри-фэндома стали объектом внимания[⇨] и предметом исследования.[⇨]

Принимаемая фурри-поклонниками антропоморфизация животных выражается в присвоении им таких качеств, как человеческое[8] сознание и мимика, черты анатомии человека, речь, хождение на двух ногах и ношение одежды. Как отмечается в статье «The Independent», слово «furry» может обозначать и самих антропоморфных животных персонажей[9]. В подавляющем большинстве случаев это млекопитающие, иногда к «furry» причисляются и подвергнутые антропоморфизации пресмыкающиеся, птицы и морские животные, также иногда их называют «scalies»[10] (то есть «чешуйчатые»).

Творчество и другая деятельность, которая ведётся фурри-поклонниками, включает написание литературных работ, в которых используется концепция антропоморфных животных персонажей, и зачастую такое произведение может относиться к любому жанру. Любое произведение в любой сфере искусства может быть принято в фурри-фэндоме, если в нём присутствуют животные персонажи с человеческими чертами. Действительно, такие персонажи часто встречаются в комиксах, мультфильмах, аллегорических рассказах и компьютерных играх. Использование вымышленных рас, среди которых бывают и антропоморфные животные, характерно для жанров научной фантастики и фэнтези.

В английском языке поклонников антропоморфных животных именуют «furries», «furs»[11] или «furry fans». Представителей фуррей, чьи интересы выходят за пределы восхищения анимацией и художественными работами и имеют анимистические и шаманистские аспекты иногда называют «furry lifestylers»[10]. Такие аспекты могут роднить фуррей с членами других схожих сообществ, таких как териантропы, иные и оборотни.


Содержание
1	Истоки возникновения и влияние
2	Деятельность
2.1	Живопись и литература
2.2	Фурсьюты и рукоделие
2.3	Фурсона и ролевые игры
2.4	Конвенты
3	Сексуальность
4	Демография и исследования фэндома
5	Освещение в СМИ
6	Примечания
7	Литература
8	Ссылки
Истоки возникновения и влияние
На появление фуррей повлияли антропоморфные персонажи и диснеевская анимация, в частности «Король-лев» (1994)[12][13], мультфильм, в котором дикие большие кошачьи были наделены авторами человеческими качествами. Также сыграло роль развитие интернета, позволившее фурри найти друг друга в сети. Локальная сетевая жизнь фуррей началась ещё раньше и проходила на серверах нескольких американских университетов в сетевом ролевом игровом чате, называемом FurryMUCK и ведущем своё существование с 1990 года, а также прочие интернет-ресурсы и веб-форумы[12].

Конец 1970-х некоторые фурри-историки рассматривают как период, предшествовавший появлению фурри-фэндома и имевшим влияние на его образование, именно в это время в США стали появляться специализированные на антропоморфизме «фэнзины» (малотиражные любительские издания, выпускаемые представителями того или иного фэндома). Согласно иллюстратору Октавии Вульф и публицисту Фреду Паттену, отправной точкой начала формирования фурри-фэндома стал 1976 год, вместе с выходом фэнзина «Vootie»[14]

С начала 1980-х годов и до появления специализированных фурри-конвентов (фурри-конференций) и интернета представители фэндома встречались на различных фестивалях поклонников научной фантастики и фэнтези[10][15], также характерным для периода стало издание фэнзинов с тематическими статьями и комиксами[16]. В 1986 году на ежегодном научно-фантастическом конвенте «Westercon[англ.]» в городе Сакраменто состоялась так называемая открытая «Furry Party» — выставка художественных и литературных фурри-работ, с которой также связывают дальнейшее распространение фурри по Калифорнии[17]. В одном из фэнзинов «Yarf! The Journal of Applied Anthropomorphics» имеется подробное хронологическое описание жизни фурри-фэндома в доинтернетный период[16]. К этому же периоду относится начало использования термина «фурри» для обозначения человека с интересом или симпатией к антропоморфным животным персонажам[18].

Собраться вместе на мероприятии, эксклюзивно посвящённом антропоморфным животным, фурри смогли в 1989 году, когда в городе Коста-Меса (штат Калифорния) состоялась пробная «Confurence 0»[19]. Вскоре последовала первая европейская фурри-конференция «Eurofurrence», прошедшая 1995 году в Германии[20], а в 1997 году уже на восточном побережье США в городе Олбани (штат Нью-Йорк) стартовал «Anthrocon» — самый большой и долгоживущий ежегодный фурри-конвент в мире[21]. Первый и основной российский фурри-конвент «Русфуренция» был организован поклонниками мультфильма «Король-лев» и прошёл в 2001 году в Москве в клубе на Старом Арбате, но в последующие годы был перенесён в Подмосковье[22][23] К 2007 году в мире насчитывалось уже 25 ежегодных фурри-конференций[10].

В 1990-е годы крупные издания начали обращать внимание на фурри, например одной из первых публикаций является заметка в «The New York Times» за 27 октября 1996 года о кандидате на докторскую степень, посещающем «конФУРенции». В ней фурри были представлены как «растущая национальная субкультура фурсьют-хоббистов», члены которой «используют интернет для обмена историями и ролевых игр с выдрами, лисицами и бобрами»[1][15].

Помимо FurryMUCK, к онлайн-ресурсам, повлиявшим на развитие фурри-фэндома, относят также англоязычный Furnation и виртуальный мир Second Life[10]. Примером онлайн-ресурсов русскоязычных фуррей можно назвать галерею Furnation.ru и форум Yiff.ru[22].

В 1990-х и 2000-х годах сильнейшее влияние на фурри-фэндом оказали видеоигры, прежде всего, серии Sonic the Hedgehog и Star Fox, в меньшей степени — The Elder Scrolls и некоторые другие.

Деятельность
Начавшись на задворках интернета с текстовых ролевых игр (MUCK), в настоящее время сообщество фуррей можно встретить везде от таких платформ для блогов как Tumblr и LiveJournal, сервисов потокового видео Netflix и Hulu до фан-арт-галерей deviantART, FurAffinity[15] и Sofurry[11].

Живопись и литература

Типичный пример фурри-арта: антропоморфная лиса.
Фурри-поклонники принимают участие в творческой работе в роли художников, иллюстраторов, авторов сценария для комиксов, скульпторов, писателей, музыкантов и умельцев. Спрос на подобную продукцию среди фуррей (и не только) гораздо выше того предложения, что обеспечивают издательства общей направленности. Такой спрос удовлетворяется за счёт других фурри-поклонников, уровень мастерства которых варьируется от начинающих до профессионалов. Эти художники, писатели и издатели создают огромное количество рисунков, картин, фотографий, рисунков на тканях, рассказов и других литературных произведений, небольших печатных книг, комиксов, фэнзинов, кукол, скульптур и музыкальных произведений. Некоторые художники также создают широкий спектр работ эротического и порнографического характера — так называемый «йифф-арт» — направление, название которого, как принято считать, происходит от подражания звука, издаваемого лисицами при спаривании.

Существуют онлайн-галереи, полностью посвященные фурри-работам, такие как Fur Affinity, который называют онлайн-хабом фурри-фэндома[24], Furry Network, Weasyl, InkBunny, VCL, есть и неспециализированные сайты, где фурри-работы присутствуют в категории «антро» (например, deviantART).

Существует несколько примеров веб-комиксов, героями которых являются персонажи-животные, созданные фурри-поклонниками. По этой причине их можно отнести к разряду фурри-комиксов. Один из таких веб-комиксов, «T.H.E. Fox», впервые был опубликован на CompuServe в 1986 году, за несколько лет до появления Интернета.


Московские фурри в День св. Патрика 2015 года.
Фурсьюты и рукоделие
Фурсьюты в фурри-фэндоме используются для развлечения или для участия в парадах, маскарадах, конвентах, дискотеках или благотворительных акциях (где они выступают в роли развлекающих публику актёров)[25]. Многие фурсьюты по конструкции очень просты и похожи на костюмы талисманов-маскотов, другие же могут быть довольно сложными и включать в себя механизмы движения челюстей, гидравлические подвижные детали, протезные детали и многие другие особенности. Цена фурсьюта может достигать 10 000 долларов[26], но обычно держится в районе 1500—2000 долларов[27]. Производство сьюта может занимать до 6 месяцев. Кроме того, фурри-поклонники зачастую изготовляют и надевают аксессуары, изображающие отдельные части животного — голову с мордочкой животного, лапы, хвосты, уши и др., такие костюмы иногда называют «партиалами» (от англ. partial suit). Например по расценкам одной фурсьют-мастерской из Мичигана, фурри-перчатки с кожаными набивными подушечками на ладони стоят 80 долларов, выходные фурри-лапы с твёрдой резиновой подошвой — 150 долларов, партиал с головой, руками, лапами и хвостом — 900 долларов[28].

Профессиональные создатели фурсьютов организуются в мастерские и выполняют заказы в том числе и вне фэндома, например талисман волка КХЛ Динамо сезонов 2013/14-2015/16 был изготовлен фурсьют-мастерской MixedCandy из Орландо (штат Флорида)[29].

Фурсьют-мастерские специализируются на разном контингенте покупателей: от подростков 8-15 лет[28] до покупателей, находящихся в рамках «от художников до работников SpaceX» в позднем двадцатилетии[30].

Несмотря на то, что 85 % фуррей не имеют полного фурсьюта[31], аргументируя это их дороговизной как решающим фактором,[7] большинство из них положительно относятся к фурсьютерам и конвентам, в которых они принимают участие (Osaki, 2008)[32][33].

Некоторые фурри увлекаются кукловодством, записью собственных видеопредставлений, таких как шоу «Rapid T. Rabbit and Friends» и «Funday PawPet Show»[9].

Фурсона и ролевые игры
Одной из самой универсальной моделью поведения в фурри-фэндоме является создание фурсоны (англ. fursona от persona — маска[источник не указан 1866 дней]) — антропоморфного образа животного или аватара. Более 95 % фуррей имеют антропоморфный аватар или свой образ. Около половины фуррей имеют только одну фурсону, представляющую их образ; сравнительно немного фуррей имеют больше трёх или четырёх фурсон; отчасти потому, что для многих фуррей фурсоны имеют личностную значимость, представляя собой осмысленную репрезентацию идеального себя[34](Plante, Reysen, Gerbasy, 2013). К наиболее популярным фурсонам по виду относятся волки, лисицы, собаки, крупные кошачьи и драконы[35]. Фурри могут изобразить свою фурсону самостоятельно, либо заказать изображение у фурри-художника[28], такие заказы иногда называют «коммишнами» (от англ. commission — давать заказ)[2].

Фурри используют фурсоны в качестве персонажей для участия в сессиях ролевой игры по Интернету, многопользовательских текстовых компьютерных играх, веб-форумах и при переписке. Самый старый мультипользовательский мир — это «FurryMUCK» (хотя ему предшествовала BBS под названием The Beastie Board, в которой дискуссии часто переходили в ролевую игру). Другая популярная групповая фурри-игра — «Furcadia». В виртуальной среде «Second Life» есть несколько соответствующих групп и местностей[36].

Конвенты

Посещаемость фурри-конвентов с 2006 по 2016 год.
Достаточное количество участников и их интерес к подобному мероприятию привёл к появлению многих фурри-конвентов (фурри-конференций) в Северной Америке и Европе. На конвентах в дружелюбной атмосфере проводятся арт-шоу, выставки литературы, костюмов, кукол, аукцион, фурсьют-конкурс; мастер-классы, семинары по созданию тематического творчества, геймерские семинары[37] и развлекательные мероприятия; в «дилерс-ден» можно непосредственно у художника или у хозяина мастерской заказать художественную работу или фурсьют[10][38]. В специальной комнате фурсьютеры могут снять головы своих костюмов и отдохнуть в приватной обстановке[10]. На конвенте продаются разные тематические предметы: уши, хвосты, маски, футболки и другие аксессуары[39], также имеются аспекты, связанные с материалами для взрослых[40]. В основном конвенты посещают молодые мужчины от 20 до 30 лет, но присутствует также много женщин-иллюстраторов[37].

Самый большой фурри-конвент, «Anthrocon», проводится каждый год в июле в Питсбурге[41]. Anthrocon дважды был отмечен в Книге рекордов Гиннесса, в 2008 году как «самый большой фан-клуб», когда конвент посетило 2489 участников[42] и в 2013 году как организатор самого большого костюмированного парада, состоящего из 1162 представителей фэндома, одетых в фурсьюты[40][43] По мере того как фурри-фэндом растёт и распространяется, в 2015 году «Anthrocon» посетило 6348 участников[30], а чикагский «Midwest Furfest» — более 5000[44]. Европейская «Eurofurrence» скромнее американских фурри-конференций по количеству участников, но при этом разнообразней, в 2015 году её посетили фурри из 43 стран мира[20].

На таких конвентах проводят аукционы с целью сбора средств, которые потом часто переводят в фонды помощи животным. Для примера, на «Further Confusion» было собрано более 62 000 долларов для разных благотворительных инициатив, которые существовали за 9-летнюю историю существования конвента (по состоянию за 2006 год)[45], а «Anthrocon» перевёл более 100 000 долларов в местные благотворительные организации со времени начала проведения его в Питсбурге в 2006 году (данные на 2015 год)[46] (актуальный список пожертвований[англ.]). В 2015 году на конвенте «Midwest Furfest» было собрано более 60 000 долларов для реабилитационного центра для животных[44]. В 2016 году канадский фурри-конвент «VancouFUR» был проведён в одном отеле с временно размещёнными сирийскими беженцами, на мероприятия которого были приглашены их дети и свободно контактировали с фурри[47][48].

Фурри-конвенты также приносят прибыль тем регионам, где они проводятся. Так, по оценке за 2007 год, «Anthrocon» ежегодно приносит 2,5 миллиона долларов Питсбургу, штат Пенсильвания[49], и по состоянию на 2015 год уже принёс городу 34 миллиона долларов[46].

По состоянию на 2012 год насчитывалось больше 40 фурри-конференций, проводимых на 6 континентах, например «Furtastic» (Дания), «Camp Wildpaw» (Австралия), «FuRio» (Бразилия)[40].

Сексуальность


Пример художественной Йифф-работы: антропоморфная самка гепарда в сексуальной позе.
Исследования фурри-фэндома в США показали, что фурри-поклонники демонстрируют непредосудительное[27] и терпимое отношение к некоторым аспектам сексуальности человека[50] в частности, гомосексуальная и бисексуальная самоидентификации непропорционально широко представлены в фурри-фэндоме,[7] больше примерно в 10 раз, чем в среднем по стране: среди взрослого населения США примерно 2 % опрошенных сообщали о своей гомосексуальности, 3 % бисексуальности, 86 % гетеросексуальности, и 0,2 % других форм сексуальной самоидентификации[51]; среди представителей фэндома, согласно четырём различным опросам, 14-25 % сообщают о своей гомосексуальности, 37-52 % бисексуальности, 28-51 % гетеросексуальности, и 3-8 % других форм сексуальных отношений (Evans, 2008) (Osaki, 2008)[32][52][53][54]. Примерно половина опрошенных сообщили, что находятся в отношениях, из которых 76 % состоят в отношениях с другим представителем фурри-фэндома[32]. Сексуальные аспекты в фурри-фэндоме включают фурри-тематические эротические художественные работы и киберсекс[55][56]. Термин «йифф» может использоваться для обозначения сексуальной активности и сексуальных материалов внутри фэндома — это применимо и к сексуальной активности и взаимодействию внутри субкультуры как в форме киберсекса, так и напрямую[39][57].

Сексуальная привлекательность персонажей фурри и влечение к ним (так называемый «йифф») является поляризующим вопросом внутри фэндома: часть фуррей считает его вполне нормальным явлением, другие же относятся к нему отрицательно — по их мнению, йифф создает неверное представление о сущности фурри в глазах общественности[58]. Согласно одному из опросов, проведённым американскими исследователями фэндома, только 37 % опрошенных сообщили, что сексуальный аспект играет важную роль в их деятельности в фурри-фэндоме[9]. но при этом не определяющую. Другой опрос выявил, что 96 % респондентов фуррей мужского пола и 78 % женского смотрят тематические сексуальные материалы[27]; фурри мужского пола оценили, что 50,9 % всего фурри-арта, который они потребляют относится к порнографическому, аналогично 30,7 % фуррей женского пола. Таким образом, фурри имеют незначительно большее предпочтение порнографических произведений непорнографическим. 17,1 % мужчин сообщили, что порнографические произведения, которые они смотрят относятся только к фурри или очень близко к фурри, и только около 5 % ответили, что порнография была ключевым фактором, вовлекшим их в фэндом (Plante, Reysen, Roberts, Gerbasi, 2013)[59].

Демография и исследования фэндома
К демографическим особенностям фурри-фэндома относится преобладание в фэндоме мужчин (80 %), занятость в науке или по технической специальности[30], наличие у взрослых представителей законченного или находящегося в процессе получения высшего образования (70 %)[31][54], более высокий политический либерализм и меньшая религиозность по сравнению со средними американцами или другим исследованными группами (пример — фанаты аниме) (Plante, Reysen, Roberts, Gerbasy, 2012, 2014)[60][61][62]. По отношению к религии 54 % фуррей определяют себя как атеисты или агностики, 23 % как христиане, 6 % как язычники или виккане, и оставшиеся относят себя к другим религиозными конфессиями (Plante, Reysen, Gerbasy, 2012)[62].

Согласно опросам, проведённым в фэндоме, почти половина опрошенных не считает себя стопроцентным человеком (46 %), из которых 41 % допускает, что если бы была возможность не быть человеком, то они бы были согласны на это. 25 % из них сообщили, что ощущают себя «нечеловеческими существами, запертыми в человеческом теле». В то же время данные исследований, в большинстве своём, не выявляют у фуррей психического нездоровья[30]. В некоторых опросах фурри значительно реже сообщали о тревожном неврозе (6 %), чем люди из основной популяции, не идентифицирующие себя как фурри (30 %), то же касается и самооценки, которая оказалась выше у тех опрошенных, кто сильнее идентифицировал себя как фурри[31].

Сопричастность и принятие играют большую роль в фурри-фэндоме: в сравнении с представителями других исследованных фэндомов (к примеру, аниме, фэнтэзи, спорт), фурри охотней других солидаризируются с другими представителями своего фан-сообщества (Plante, Reysen, Gerbasy, 2013)[63]. В среднем половина друзей представителя фурри-фэндома — также сами фурри[34][63]. Фурри оценивают себя выше (в сравнении с другими исследованными фан-группами) по шкале глобальной осведомлённости (знание о мире и чувство связи с другими), чаще соотносят себя с гражданами планеты и являются сторонниками экологически устойчивого развития[64].

К американским исследователям фурри-фэндома относятся: психологи — профессор Ниагарского государственного колледжа Кэти Гербаси, аспирант и доктор наук в университете Ватерлоо Кортни Плант, младший профессор в Texas A&M University-Commerce Стивен Рейсен; социологи: младший профессор Ренисонского университета Шэрон Робертс; а также Paolone, N., Higner, J., Scaletta, L. L., Bernstein, P. L. и Privitera, A[42]. Под предводительством Кэти Гербаси был сформирован международный проект исследования антропоморфизма International Anthropomorphic Research Project (IARP), экстенсивно изучающий фурри-фэндом и представляющий собой команду социально-ориентированных исследователей, которые опрашивают тысячи фуррей на различных конвентах ежегодно[27][30][31].

В российской культурологии фурри-фэндому посвятили свои работы: доцент кафедры Истории Отечества в древности и средневековья БГУ А. А. Чубур, статья «Furry-art: от цифровой графики до сводов пещер. Попытка осмысления» (2009); Д. Розанов ИФИ РГГУ, доклад «Новые неформальные объединения и новые медиа: субкультура фурри в реальном и виртуальном пространстве» (2010);[65][66] и А. Ф. Арнаутова, кафедра экспериментальной лингвистики и межкультурной компетенции ПГУ, статья «Место субкультуры „Фурри“ в системе субкультурных образований» (2013). Д. Розанов характеризует образ фурри-фэндома и бытовые особенности поведения его представителей. А. А. Чубур в статье приводит статистические данные о численности фурри в Москве и Санкт-Петербурге, а также сводную таблицу видового состава антропоморфных животных в фурри-арте, и относит происхождение фурри к примитивной культуре первобытного общества[66]. Е. и О. Белобрыкины считают увлечение подростков фурри разновидностью девиантного поведения, которое хоть и не противоречит правовым и моральным нормам, но всё же нарушает целостность личности и осложняет межличностное общение[67]. Ряд исследователей отмечает малую известность субкультуры в России[68][69][70].

Фурри создали свою энциклопедию о фурри-фэндоме — WikiFur.com[2].

Освещение в СМИ
Фурри-фэндом часто изображался в средствах массовой информации нелестным образом, хотя в последнее время было несколько попыток объективно описать эту субкультуру[39]. Статьи в таких журналах, как «Loaded», «Vanity Fair»[71], а также в колонке, посвящённой сексуальной тематике, «Savage Love», концентрировали внимание только на нетрадиционных сексуальных предпочтениях. Вымышленные сцены с изображением представителей фурри-фэндома появлялись в таких телесериалах, как «Скорая помощь»[72][неавторитетный источник], «C.S.I.: Место преступления»,[73][неавторитетный источник] Шоу Дрю Кэрри, шоу Sex2K на MTV[74] и шоу «Entourage»[75][неавторитетный источник]. Большинство фурри-поклонников и некоторые исследователи отмечают необъективность такого изображения субкультуры в средствах массовой информации, стигматизирующего её[30][76][77][78]. В последнее время было несколько попыток развенчать неправдивые мифы и стереотипы о фурри-фэндоме[49]. Журналист, который побывал на фурри-конвенте «Anthrocon» в 2006 году, отметил, что, «несмотря на их дикий образ, созданный программами „Vanity Fair“, „MTV“ и „CSI“, фурри-конвенты — это не просто „кучка извращенцев, занимающихся сексом в костюмах лисиц“, и что „те, кто посещали фурри-конференцию, занимались сексом не чаще, чем все остальные люди“[79]. Также он сообщил, что на конференции „посетители обсуждали и рисовали животных персонажей и персонажей комиксов в альбомах“»[39].

Тем не менее, местные предприниматели Питсбурга тепло приняли фуррей, подготовив к фурри-конвенту специальные майки и нарисовав отпечатки лап перед входами в магазины, чтобы привлечь покупателей[80][21][49][81].

В октябре 2007 года репортёр из газеты «Hartford Advocate» тайно проникла на конвент «FurFright 2007», так как представителей прессы на него не допускали. Там она узнала, что такой шаг был вызван желанием воспрепятствовать неправильному изображению фуррей. Она также заявила, что «скандальное поведение, которое она ожидала увидеть, места не имело»[82].


logo水印示例 logo watermark simple
logo水印示例 logo watermark simple
logo水印示例 logo watermark simple
logo水印示例 logo watermark simple
logo水印示例 logo watermark simple
logo水印示例 logo watermark simple
logo水印示例 logo watermark simple
logo水印示例 logo watermark simple
logo水印示例 logo watermark simple
logo水印示例 logo watermark simple
logo水印示例 logo watermark simple
logo水印示例 logo watermark simple
logo水印示例 logo watermark simple
logo水印示例 logo watermark simple
logo水印示例 logo watermark simple
logo水印示例 logo watermark simple
logo水印示例 logo watermark simple
logo水印示例 logo watermark simple
logo水印示例 logo watermark simple
logo水印示例 logo watermark simple
logo水印示例 logo watermark simple
logo水印示例 logo watermark simple
logo水印示例 logo watermark simple
logo水印示例 logo watermark simple
logo水印示例 logo watermark simple
logo水印示例 logo watermark simple
logo水印示例 logo watermark simple
logo水印示例 logo watermark simple
logo水印示例 logo watermark simple
logo水印示例 logo watermark simple
logo水印示例 logo watermark simple
logo水印示例 logo watermark simple
logo水印示例 logo watermark simple
logo水印示例 logo watermark simple
logo水印示例 logo watermark simple
logo水印示例 logo watermark simple
logo水印示例 logo watermark simple
logo水印示例 logo watermark simple
logo水印示例 logo watermark simple
logo水印示例 logo watermark simple
logo水印示例 logo watermark simple

ГЛАВА 1
ОБЩИЕ ПОЛОЖЕНИЯ
1. Настоящими Правилами определяется порядок движения на дорогах Республики Беларусь.
2. В настоящих Правилах применяются следующие основные термины и понятия:
2.1. автобус — автомобиль с числом мест для сидения более девяти, включая место водителя;
2.2. автомобиль — механическое транспортное средство, имеющее не менее четырех колес, расположенных не менее чем на двух осях, за исключением колесных тракторов и самоходных машин. К автомобилям приравниваются квадрициклы (мотоколяски) — четырехколесные механические транспортные средства, имеющие приводы управления автомобильного типа и массу в снаряженном состоянии не более 550 килограммов;
2.3. автопоезд — состав транспортных средств, состоящий из автомобиля (колесного трактора) и буксируемого им прицепа, прицепа-роспуска, полуприцепа (если не указано иное, далее — прицеп);
2.4. безопасность дорожного движения — состояние дорожного движения, обеспечивающее минимальную вероятность возникновения опасности для движения и дорожно-транспортного происшествия;
2.5. велосипед, веломобиль (далее — велосипед) — транспортное средство, за исключением инвалидных колясок, которое имеет не менее двух колес и приводится в движение мускульной силой человека (людей), находящегося на (в) нем, в частности при помощи педалей или рукояток. К велосипеду приравниваются аналогичные по конструкции транспортные средства, имеющие электродвигатель номинальной максимальной мощностью в режиме длительной нагрузки, не превышающей 0,25 кВт, и максимальную конструктивную скорость движения, определенную его технической характеристикой, не более 25 км/ч либо иной двигатель с аналогичной характеристикой;
2.6. велосипедная дорожка — обособленная дорога либо выделенный конструктивно или с помощью линий горизонтальной дорожной разметки элемент дороги, предназначенные для движения водителей велосипедов (далее — велосипедисты) и пешеходов, передвигающихся с использованием средств персональной мобильности, обозначенные дорожными знаками «Велосипедная дорожка», «Велосипедная и пешеходная дорожка» и (или) дорожной разметкой 1.29 либо 1.31 соответственно. Велосипедная дорожка может обозначаться зеленым цветом;
2.61. велосипедный переезд — участок проезжей части, предназначенный для движения велосипедистов и пешеходов, передвигающихся с использованием средств персональной мобильности, через проезжую часть дороги и обозначенный дорожными знаками «Велосипедный переезд» и (или) горизонтальной дорожной разметкой;
2.7. видимость дороги — максимальное расстояние в направлении движения, на котором с места водителя можно распознать элементы дороги и технические средства организации дорожного движения перед транспортным средством и правильно ориентироваться при управлении им;
2.8. водитель — физическое лицо, управляющее транспортным средством, самоходной машиной, за исключением лица, обучаемого управлению механическим транспортным средством, самоходной машиной (сдающего квалификационный практический экзамен на право управления механическим транспортным средством, самоходной машиной). К водителю приравниваются лицо, обучающее управлению механическим транспортным средством, самоходной машиной (принимающее квалификационный практический экзамен на право управления механическим транспортным средством, самоходной машиной) и при этом находящееся в нем (ней), а также всадник, погонщик скота;
2.9. вынужденная остановка транспортного средства — прекращение движения транспортного средства из-за его технической неисправности или опасности, создаваемой участниками дорожного движения, перевозимым грузом, состоянием водителя (пассажира), появлением объекта, препятствующего дорожному движению;
2.10. газон — участок земли с естественным или искусственно созданным растительным, преимущественно травяным, покровом;
2.11. главная дорога — дорога, обозначенная дорожными знаками «Главная дорога», «Пересечение со второстепенной дорогой», «Примыкание второстепенной дороги», «Автомагистраль» или «Дорога для автомобилей», по отношению к пересекаемой (примыкающей), дорога с усовершенствованным покрытием по отношению к дороге без такого покрытия, дорога с гравийным покрытием по отношению к грунтовой, любая дорога по отношению к выездам с прилегающих территорий или жилых зон. Наличие на второстепенной дороге непосредственно перед перекрестком участка с покрытием (усовершенствованным или гравийным) не делает ее равной по значению с пересекаемой;
2.12. исключен.
2.13. гужевое транспортное средство — транспортное средство, приводимое в движение мускульной силой животного (животных);
2.14. дети — несовершеннолетние участники дорожного движения, возраст которых известен либо очевиден по внешним признакам другим участникам дорожного движения;
2.15. дорога — комплекс инженерных сооружений либо полоса земли, предназначенные и используемые для движения в установленном порядке транспортных средств и пешеходов;
2.16. дорожка для всадников — полоса земли, предназначенная для движения в установленном порядке всадников, обозначенная дорожным знаком «Дорожка для всадников»;
2.17. дорожное движение — движение пешеходов и (или) транспортных средств по дороге, в том числе стоянка и остановка в пределах дороги, и связанные с ним общественные отношения;
2.18. дорожно-транспортное происшествие — происшествие, совершенное с участием хотя бы одного находившегося в движении механического транспортного средства, в результате которого причинен вред жизни или здоровью физического лица, его имуществу либо имуществу юридического лица;
2.19. железнодорожное транспортное средство — локомотив, электропоезд, дизель-поезд, автомотриса, иное транспортное средство, предназначенное для перевозки пассажиров и грузов по железнодорожному пути;
2.20. железнодорожный переезд — пересечение дороги с железнодорожными путями на одном уровне;
2.21. жилая зона — территория, въезды на которую и выезды с которой обозначены дорожными знаками «Жилая зона» и «Конец жилой зоны», а также дворовая территория, прилегающая к жилой застройке;
2.211. зона с ограничением максимальной скорости — территория, въезды на которую и выезды с которой обозначены дорожными знаками «Зона с ограничением максимальной скорости движения» и «Конец зоны с ограничением максимальной скорости движения»;
2.22. колесный трактор — механическое транспортное средство для выполнения разнообразных технологических операций с помощью навесных, полунавесных и прицепных машин или орудий, а также для привода стационарных машин или движения в составе с прицепом;
2.221. комбинированное транспортное средство — состав транспортных средств, состоящий из грузового автомобиля, автомобиля-тягача, седельного тягача, колесного трактора и буксируемого механического транспортного средства;
2.23. крайнее правое (левое) положение на проезжей части дороги — положение транспортного средства на проезжей части дороги, предназначенной для движения в данном направлении, не дающее возможности движения даже одноколейных транспортных средств соответственно правее (левее) в попутном направлении;
2.24. маневрирование (маневр) — начало движения, перестроение транспортного средства в движении из одной полосы движения в другую (далее — перестроение), выезд транспортного средства на трамвайные пути, съезд с них, а также его поворот направо или налево, разворот, съезд с проезжей части дороги, движение задним ходом;
2.25. маршрутное транспортное средство — механическое транспортное средство (автобус, троллейбус, трамвай, иное транспортное средство, осуществляющее движение в регулярном обычном, скоростном сообщении, в том числе экспрессном), движущееся по установленному маршруту с обозначенными остановочными пунктами;
2.26. механическое транспортное средство — транспортное средство, приводимое в движение двигателем;
2.27. мопед — двух- или трехколесное механическое транспортное средство, приводимое в движение двигателем с рабочим объемом до 50 куб. сантиметров (в случае двигателя внутреннего сгорания) или электродвигателем номинальной максимальной мощностью в режиме длительной нагрузки более 0,25 кВт и не более 4 кВт и имеющее максимальную конструктивную скорость движения, определенную его техническими характеристиками, не более 50 км/ч. К мопедам приравниваются другие механические транспортные средства с аналогичными характеристиками;
2.28. мотоцикл — двухколесное механическое транспортное средство с боковым прицепом или без него, приводимое в движение двигателем с рабочим объемом 50 куб. сантиметров и более (в случае двигателя внутреннего сгорания) или максимальная конструктивная скорость которого (при любом двигателе) превышает 50 км/ч. К мотоциклам приравниваются трех- и четырехколесные механические транспортные средства с приводами управления мотоциклетного типа, имеющие массу в снаряженном состоянии не более 550 килограммов (без учета массы аккумуляторов электрических транспортных средств) и максимальную эффективную мощность двигателя, не превышающую 15 кВт;
2.29. населенный пункт — территория, въезды на которую и выезды с которой обозначены дорожными знаками «Начало населенного пункта» и «Конец населенного пункта» или дорожными знаками «Начало границы населенного пункта» и «Конец границы населенного пункта»;
2.30. недостаточная видимость дороги — видимость дороги в направлении движения менее 300 метров, обусловленная погодными (метеорологическими) условиями (дождь, снег и иные атмосферные осадки) и другими факторами, снижающими прозрачность атмосферы (пыль, дым, туман, смог);
2.31. обгон — опережение одного или нескольких движущихся транспортных средств, связанное с выездом на встречную полосу движения (сторону проезжей части дороги);
2.32. обзорность дороги — объективная возможность видеть дорожную обстановку с места водителя;
2.33. обозначенный перекресток — перекресток, перед которым на данной дороге установлен дорожный знак (знаки) приоритета;
2.34. обочина — выделенный конструктивно или сплошной линией горизонтальной дорожной разметки элемент дороги, примыкающий непосредственно к внешнему краю проезжей части, расположенный с ней на одном уровне и не предназначенный для движения транспортных средств, кроме случаев, предусмотренных настоящими Правилами;
2.35. ограниченная обзорность дороги — обзорность дороги, ограниченная геометрическими параметрами дороги, придорожными инженерными сооружениями, насаждениями и прочими объектами, а также транспортными средствами;
2.36. одноколейное транспортное средство — транспортное средство на колесах, которые размещены на одной линии одно за другим;
2.37. опасность для движения — изменение условий дорожного движения или технического состояния транспортного средства, угрожающее безопасности участников дорожного движения, вынуждающее водителя снизить скорость движения или остановиться;
2.38. опережение — движение транспортного средства со скоростью, превышающей скорость попутно движущегося транспортного средства (транспортных средств);
2.39. организованная пешеходная колонна — группа пешеходов, обозначенная в соответствии с настоящими Правилами, имеющая руководителя и передвигающаяся по определенному маршруту;
2.40. организованная транспортная колонна — транспортное средство или транспортная колонна, движущиеся с постоянно включенным ближним светом фар в сопровождении транспортного средства (транспортных средств) оперативного назначения с включенными проблесковыми сигналами (маячками) (далее — маячки) синего или синего и красного цветов;
2.401. оставление места дорожно-транспортного происшествия — действия участника дорожно-транспортного происшествия, направленные на сокрытие факта такого происшествия или обстоятельств его совершения, повлекшие необходимость проведения сотрудниками Государственной автомобильной инспекции Министерства внутренних дел (далее — ГАИ) мероприятий по установлению (розыску) данного участника и (или) розыску транспортного средства;
2.41. остановка транспортного средства — преднамеренное прекращение движения транспортного средства на время до 5 минут или более чем на 5 минут, если это необходимо для посадки (высадки) пассажиров либо загрузки (разгрузки) транспортного средства, а также зарядки электромобиля;
2.42. островок безопасности — техническое средство организации дорожного движения на наземных пешеходных переходах (если не определено иное, далее — пешеходный переход), защитные элементы которого обеспечивают конструктивное выделение места для безопасной остановки пешеходов при переходе проезжей части дороги. К островку безопасности относится участок разделительной полосы, через которую проходит пешеходный переход;
2.43. очевидец дорожно-транспортного происшествия — физическое лицо, непосредственно наблюдавшее дорожно-транспортное происшествие, которое располагает соответствующей информацией и может ее предоставить;
2.44. пассажир — непричастное к управлению транспортным средством физическое лицо, находящееся в (на) транспортном средстве, а также входящее (садящееся) в (на) транспортное средство или сходящее (высаживающееся) с транспортного средства;
2.45. перекресток — место пересечения, примыкания или разветвления дорог на одном уровне. Граница перекрестка определяется линиями дорожной разметки 1.37, а при ее отсутствии — воображаемыми линиями, соединяющими соответственно противоположные, наиболее удаленные от центра перекрестка начала закруглений проезжих частей дорог. Не являются перекрестками пересечения с велосипедными, пешеходными дорожками и дорожками для всадников;
2.46. пешеход — физическое лицо, участвующее в дорожном движении вне транспортного средства, в том числе передвигающееся в инвалидной коляске, на самокате, роликовых коньках, лыжах, другом спортивном инвентаре, ведущее велосипед, мопед или мотоцикл, везущее санки или коляску (тележку) и не выполняющее в установленном порядке на дороге ремонтные и другие работы. К пешеходу приравнивается лицо, передвигающееся с использованием средства персональной мобильности;
2.47. пешеходная дорожка — выделенный конструктивно или с помощью линий горизонтальной дорожной разметки элемент дороги, предназначенный для движения пешеходов, обозначенный дорожными знаками «Пешеходная дорожка», «Велосипедная и пешеходная дорожка» и (или) дорожной разметкой 1.30 либо 1.31 соответственно;
2.48. пешеходная зона — территория, предназначенная для движения пешеходов и велосипедистов, въезды на которую и выезды с которой обозначены дорожными знаками «Пешеходная зона» и «Конец пешеходной зоны»;
2.49. пешеходный переход — участок проезжей части, предназначенный для движения пешеходов через проезжую часть дороги и обозначенный дорожными знаками «Пешеходный переход» и (или) горизонтальной дорожной разметкой;
2.50. полоса движения — любая из продольных полос проезжей части дороги, обозначенная или не обозначенная горизонтальной дорожной разметкой и имеющая ширину, достаточную для движения транспортных средств (за исключением одноколейных) в один ряд;
2.51. преимущество — право на первоочередное движение в намеченном направлении по отношению к другим участникам дорожного движения. Преимущество пешеходу считается предоставленным, если расстояние между транспортным средством и приближающимся пешеходом (в момент пересечения транспортным средством траектории движения пешехода) составило не менее двух полос движения транспортного средства (в том числе одну полосу и трамвайные пути попутного направления, одну полосу и разделительную полосу или зону, одну полосу и островок безопасности). В таком случае водитель вправе не принимать мер, предусмотренных в подпункте 2.76 настоящего пункта;
2.52. препятствие для дорожного движения — объект, который находится на пути участника дорожного движения и вынуждает его снизить скорость движения, совершить объезд или остановиться;
2.53. прилегающая территория — территория, непосредственно прилегающая к проезжей части дороги, не предназначенная для сквозного проезда, на которой расположены дворы, площадки, специально отведенные для стоянки транспортных средств, автозаправочные станции, строительные площадки и иные объекты;
2.54. прицеп — транспортное средство, предназначенное для движения в составе с механическим транспортным средством;
2.55. проезжая часть дороги — элемент дороги, предназначенный для движения транспортных средств и в случаях, предусмотренных настоящими Правилами, — для движения пешеходов;
2.56. путепровод — инженерное сооружение, устраиваемое в местах пересечения дорог или дороги с железнодорожными путями для обеспечения беспрепятственного движения в разных уровнях;
2.57. разделительная зона — выделенный горизонтальной дорожной разметкой элемент дороги, разделяющий смежные проезжие части и не предназначенный для движения или остановки транспортных средств и пешеходов вне специально обозначенных мест;
2.58. разделительная полоса — выделенный конструктивно элемент дороги, разделяющий смежные проезжие части и не предназначенный для движения или остановки транспортных средств и пешеходов вне специально оборудованных и обозначенных мест;
2.59. регулировщик — сотрудник ГАИ, осуществляющий регулирование дорожного движения в экипировке (форменной одежде повышенной видимости с элементами из световозвращающего материала, с жезлом и свистком). К регулировщику приравниваются:

сотрудник Военной автомобильной инспекции Вооруженных Сил, органов пограничной службы, органов государственной безопасности и подчиненных им воинских частей в экипировке (форменной одежде повышенной видимости с элементами из световозвращающего материала, с диском с красным сигналом (световозвращателем) и свистком) при обеспечении движения организованных транспортных колонн, в состав которых входят транспортные средства, принадлежащие Министерству обороны, Министерству внутренних дел, органам государственной безопасности, Государственному пограничному комитету, другим войскам и воинским формированиям;
работники дорожно-строительных и эксплуатационных организаций, дежурные на железнодорожных переездах и паромных переправах в одежде из световозвращающего материала, с диском с красным сигналом (световозвращателем) при исполнении ими своих служебных обязанностей;
2.60. самоходная машина — гусеничный трактор, сельскохозяйственная, дорожная, строительная, иная машина, которые без дополнительных мер обеспечения безопасности дорожного движения, предусмотренных изготовителем, не предназначены для участия в дорожном движении. При участии в дорожном движении самоходные машины приравниваются к транспортным средствам, а их движение по дорогам должно осуществляться в соответствии с требованиями настоящих Правил, предъявляемыми к транспортным средствам, если этими Правилами не установлено иное в отношении самоходных машин;
2.601. средство персональной мобильности — устройство или приспособление, не являющиеся транспортными средствами, приводимые в движение двигателем и предназначенные для индивидуального или совместного (в случае наличия специально оборудованных мест для сидения) использования пешеходами (электросамокат, гироскутер, сигвей, моноколесо и прочее);
2.61. стоянка транспортного средства — преднамеренное прекращение движения транспортного средства более чем на 5 минут по причинам, не связанным с посадкой (высадкой) пассажиров либо загрузкой (разгрузкой) транспортного средства, а также зарядкой электромобиля;
2.62. тахограф — оборудование, предназначенное для установки на транспортных средствах в целях показания или регистрации в автоматическом или полуавтоматическом режиме данных о движении этих транспортных средств или об определенных периодах работы их водителей;
2.63. темное время суток — промежуток времени, который начинается после захода солнца и заканчивается с восходом солнца;
2.64. технически допустимая общая масса — максимальная масса транспортного средства, установленная изготовителем (с грузом, водителем и пассажирами). Технически допустимой общей массой автопоезда является сумма технически допустимых общих масс автомобиля (колесного трактора) и прицепа;
2.65. технические средства организации дорожного движения — устройства, конструкции и изображения, применяемые на дорогах для регулирования дорожного движения, обеспечения его безопасности и повышения пропускной способности дорог;
2.66. тихоходное транспортное средство — механическое транспортное средство, которое по своей конструкции или по условиям обеспечения безопасности при перевозке груза не может двигаться со скоростью, превышающей 30 км/ч, обозначенное опознавательным знаком «Тихоходное транспортное средство»;
2.67. трамвай — механическое транспортное средство, предназначенное для движения по рельсам, участвующее в дорожном движении и не являющееся железнодорожным транспортным средством;
2.68. транспортная колонна — группа из двух и более механических транспортных средств, следующих друг за другом по одной полосе движения с постоянно включенным ближним светом фар, обозначенная опознавательными знаками «Колонна», если иное не определено подпунктом 201.7 пункта 201 настоящих Правил;
2.681. транспортная развязка в разных уровнях — инженерное сооружение, включающее путепровод и съезды, обеспечивающие перемещение транспортных средств с одной дороги на другую;
2.69. транспортное средство — устройство, предназначенное для движения по дороге и для перевозки пассажиров, грузов или установленного на нем оборудования;
2.70. транспортное средство оперативного назначения — транспортное средство, имеющее специальную цветографическую окраску и (или) световую и звуковую сигнализацию;
2.71. троллейбус — механическое транспортное средство, приводимое в движение электродвигателем, питание которого обеспечивается по подвесной контактной сети от внешнего источника электрического тока;
2.72. тротуар — элемент дороги, примыкающий к проезжей части или отделенный от нее газоном, предназначенный для движения пешеходов и велосипедистов в соответствии с настоящими Правилами;
2.73. тяжеловесное и (или) крупногабаритное транспортное средство — транспортное средство, максимальные весовые и (или) габаритные размеры которого превышают допустимые параметры, установленные для проезда по автомобильным дорогам общего пользования;
2.74. управление транспортным средством — воздействие на органы управления транспортного средства, приведшее к изменению его положения относительно первоначального;
2.75. усовершенствованное покрытие — покрытие дороги из асфальтобетонных или цементобетонных смесей, из щебеночных, гравийных, шлаковых или других минеральных материалов, обработанных органическими или минеральными вяжущими материалами, а также из штучных материалов: брусчатки, булыжника, клинкера, мозаики и т.п.;
2.76. уступить дорогу (предоставить преимущество) — требование, означающее не возобновлять движение, снизить скорость движения вплоть до остановки транспортного средства или не осуществлять какой-либо маневр (за исключением требования освободить занимаемую полосу движения, подаваемого регулировщиком или водителем транспортного средства оперативного назначения), если это может вынудить другого участника (других участников) дорожного движения изменить направление и (или) скорость движения;
2.77. участник дорожного движения — физическое лицо, находящееся в пределах дороги в (на) транспортном средстве или вне его, за исключением регулировщика и работника, выполняющего в установленном порядке на дороге ремонтные и другие работы;
2.771. шасси транспортного средства — составная часть грузового автомобиля, прицепа к нему, грузопассажирского автомобиля, тягача, предназначенная для последующего изготовления транспортного средства, не имеющая составляющих частей для перевозки пассажиров и (или) грузов и установленного оборудования. Участие в дорожном движении шасси транспортных средств должно осуществляться в соответствии с требованиями настоящих Правил, предъявляемыми к транспортным средствам, если этими Правилами не установлено иное в отношении шасси транспортных средств;
2.772. электромобиль — транспортное средство, приводимое в движение только электродвигателем от внутреннего перезаряжаемого источника электроэнергии;
2.78. элементы дороги — одна или несколько проезжих частей дороги, трамвайные пути, тротуары, пешеходные и велосипедные дорожки (за исключением велосипедных дорожек, расположенных обособленно от дороги), посадочные площадки, расположенные на проезжей части дороги и предназначенные для посадки (высадки) пассажиров в маршрутное транспортное средство, островки безопасности, выделенные конструктивно или линиями горизонтальной дорожной разметки, разделительные зоны, разделительные полосы, настилы железнодорожных переездов и обочины;
2.79. исключен.

3. На дорогах Республики Беларусь установлено правостороннее движение транспортных средств.
 На дорогах Республики Беларусь запрещается участие в дорожном движении транспортных средств, устройств, приспособлений, машин и механизмов, не подлежащих регистрации в порядке, установленном Советом Министров Республики Беларусь, за исключением случаев их участия в дорожном движении по дорогам без усовершенствованного покрытия, а также в иных случаях, предусмотренных настоящими Правилами. При участии в дорожном движении такие транспортные средства, устройства, приспособления, машины и механизмы приравниваются к транспортным средствам, а их движение по дорогам должно осуществляться в соответствии с требованиями настоящих Правил, предъявляемыми к транспортным средствам, если этими Правилами не установлено иное в отношении данных транспортных средств, устройств, приспособлений, машин и механизмов.

Снегоболотоходы колесные малогабаритные (квадроциклы — ATV) типа I категорий G, S и типа II, снегоходы, мотовездеходы UTV с автомобильной посадкой допускаются к участию в дорожном движении только по дорогам без усовершенствованного покрытия.

4. ГАИ осуществляется согласование дорожного движения в случаях, не оговоренных настоящими Правилами, а также при применении в экспериментальных целях технических средств организации дорожного движения, не предусмотренных настоящими Правилами и техническими нормативными правовыми актами. Своевременное доведение в доступных формах до сведения физических и юридических лиц технических нормативных правовых актов в сфере дорожного движения и обеспечения его безопасности возлагается на республиканский орган государственного управления по стандартизации, метрологии и сертификации.
Формы и методы контроля за выполнением участниками дорожного движения требований настоящих Правил определяются Министерством внутренних дел.
5. Нарушение настоящих Правил влечет ответственность, установленную законодательными актами.
ГЛАВА 2
ОБЩИЕ ПРАВА И ОБЯЗАННОСТИ УЧАСТНИКОВ ДОРОЖНОГО ДВИЖЕНИЯ
6. Участники дорожного движения имеют право на:
6.1. обеспечение безопасных и эффективных условий дорожного движения;
6.2. получение от государственных органов и уполномоченных должностных лиц достоверной информации о безопасных условиях дорожного движения, причинах введения ограничения или запрещения движения по дорогам, качестве продукции, работ и услуг, связанных с обеспечением безопасности дорожного движения;
6.3. получение медицинской помощи в случае дорожно-транспортного происшествия;
6.4. обжалование в порядке, определенном законодательством, решений, действий (бездействия) государственных органов, осуществляющих государственное регулирование и управление в сфере дорожного движения и обеспечения его безопасности (их должностных лиц);
6.5. возмещение причиненного им и (или) их имуществу вреда в порядке, установленном законодательством;
6.6. пользование иными правами в области дорожного движения, предусмотренными настоящими Правилами и иными актами законодательства.
7. Участники дорожного движения обязаны:
7.1. знать и соблюдать относящиеся к ним требования настоящих Правил и руководствоваться:

7.1.1. сигналами (указаниями) регулировщика (далее — сигналы регулировщика);
7.1.2. сигналами дорожных светофоров (если не определено иное, далее — светофоры) (приложение 1);
7.1.3. дорожными знаками (приложение 2);
7.1.4. горизонтальной и вертикальной дорожной разметкой (приложение 3), а также иными средствами организации дорожного движения, в том числе направляющими устройствами;
7.1.5. перечнем неисправностей транспортных средств и условий, при которых запрещается их участие в дорожном движении (приложение 4);
7.1.6. опознавательными знаками транспортных средств (приложение 5);

7.2. не создавать препятствий и опасности для дорожного движения, действовать добросовестно, корректно, быть внимательными и взаимно вежливыми. Каждый участник дорожного движения, соблюдающий настоящие Правила, вправе рассчитывать на то, что и другие участники дорожного движения будут выполнять содержащиеся в них требования;

7.3. при сопровождении детей принимать все возможные меры по недопущению их самостоятельного выхода на проезжую часть дороги (кроме жилых и пешеходных зон);

7.4. принимать меры по недопущению загрязнения дорог и окружающей среды, не выбрасывать мусор и иные предметы вне специально отведенных мест;

7.5. исполнять другие обязанности в области дорожного движения, установленные настоящими Правилами и иными актами законодательства.

ГЛАВА 3
ПРАВА И ОБЯЗАННОСТИ ВОДИТЕЛЕЙ
8. Водитель имеет право:

8.1. управлять транспортным средством в установленном порядке;
8.2. знать причину, по которой сотрудником ГАИ, другими должностными лицами, указанными в части третьей подпункта 9.1 пункта 9 настоящих Правил, остановлено транспортное средство, а также фамилию и должность этих лиц. При этом лица, обладающие правом проверять у водителя документы, обязаны предъявить по требованию водителя служебное удостоверение;
8.3. передавать управление транспортным средством другому лицу, имеющему при себе водительское удостоверение на право управления механическим транспортным средством соответствующей категории (удостоверение тракториста-машиниста соответствующей категории с талоном к нему, временное разрешение на право управления механическим транспортным средством) (если не указано иное, далее — водительское удостоверение).

9. Водитель обязан:

9.1. останавливаться по требованию сотрудника ГАИ в форменной одежде, а также должностных лиц, указанных в части третьей настоящего подпункта.
Требование сотрудника ГАИ об остановке транспортного средства должно быть подано им своевременно, понятно водителю и выражается путем подачи сигнала жезлом, жестом руки, с помощью громкоговорящего устройства или путем включения на транспортном средстве оперативного назначения маячка красного цвета.

Должностные лица Следственного комитета, органов внутренних дел (кроме сотрудников ГАИ), органов государственной охраны, Государственной инспекции охраны животного и растительного мира при Президенте Республики Беларусь, органов финансовых расследований Комитета государственного контроля, Вооруженных Сил, внутренних войск Министерства внутренних дел, органов государственной безопасности, органов пограничной службы, таможенных органов, Транспортной инспекции Министерства транспорта и коммуникаций, государственной лесной охраны имеют право остановки транспортных средств только для осуществления возложенных на указанные органы функций. При этом они должны быть в форменной одежде, жилете повышенной видимости с элементами из световозвращающего материала и использовать для подачи сигнала диск с красным сигналом (световозвращателем). Должностным лицом Транспортной инспекции Министерства транспорта и коммуникаций, Государственной инспекции охраны животного и растительного мира при Президенте Республики Беларусь, находящимся в движущемся специальном автомобиле, также может быть подано требование об остановке транспортного средства, которое должно быть своевременным, понятно водителю и выражаться путем включения маячка синего цвета с использованием специальной информационной таблички (табло) и (или) громкоговорящего устройства.

В темное время суток вне населенного пункта рядом с указанными лицами должно находиться транспортное средство оперативного назначения с включенным маячком. Данное требование не распространяется на сотрудников органов внутренних дел при обеспечении:

проезда транспортных средств, используемых для транспортного обслуживания, сопровождения и обеспечения безопасности должностных лиц, подлежащих государственной охране в соответствии с законодательными актами;
общественной безопасности и безопасности дорожного движения в местах проведения массовых мероприятий;
9.2. по требованию сотрудника ГАИ пройти в установленном порядке проверку (освидетельствование) на предмет определения состояния алкогольного опьянения либо состояния, вызванного потреблением наркотических средств, психотропных веществ, их аналогов, токсических или других одурманивающих веществ;
9.3. содержать участвующее в дорожном движении транспортное средство в технически исправном состоянии, проверять его техническое состояние перед началом движения, а также содержать в чистоте его стекла и внешние световые приборы;
9.4. своевременно получать на находящееся в его владении (пользовании) механическое транспортное средство, а также прицеп (прицепы) к нему разрешение на допуск транспортного средства к участию в дорожном движении в порядке, установленном законодательством;
9.5. быть пристегнутым и не перевозить пассажиров с непристегнутыми ремнями безопасности при движении в механическом транспортном средстве, оборудованном ремнями безопасности, а при движении на мотоцикле, мопеде — быть в застегнутом мотошлеме и не перевозить пассажиров без застегнутого мотошлема. Ремнем безопасности также должно быть пристегнуто лицо, обучаемое управлению механическим транспортным средством.
Допускается не пристегиваться ремнями безопасности только для:

лица, обучающего управлению механическим транспортным средством или принимающего квалификационный практический экзамен на право управления транспортным средством, когда транспортным средством управляет соответственно обучаемый управлению или лицо, сдающее такой экзамен;
пассажира транспортного средства оперативного назначения, водителя автомобиля-такси — при движении в населенном пункте во время перевозки пассажира;
пассажира и водителя с медицинскими противопоказаниями, перечень которых определяется Министерством здравоохранения;
9.6. не выполнять действий, которые отвлекают его от управления транспортным средством;
9.7. обеспечить безопасные условия перевозки пассажиров, в том числе перед перевозкой пассажира на мопеде, мотоцикле (кроме бокового прицепа к мотоциклу) убедиться, что пассажир не находится в состоянии алкогольного опьянения либо в состоянии, вызванном потреблением наркотических средств, психотропных веществ, их аналогов, токсических или других одурманивающих веществ;
9.8. выезжать на дорогу и съезжать с нее, переезжать разделительную полосу, разделительную зону в установленных для этого местах (места, обозначенные соответствующими дорожными знаками, дорожной разметкой, оборудованные ограждающими или направляющими устройствами и т.п.);
9.9. предоставлять преимущество пешеходам на нерегулируемых пешеходных переходах, велосипедных переездах (в случае движения на средствах персональной мобильности) и регулируемых пешеходных переходах, велосипедных переездах (в случае движения на средствах персональной мобильности) при одновременном для водителей и пешеходов разрешающем сигнале регулировщика или светофора, а также пешеходам, передвигающимся на средствах персональной мобильности, — на велосипедных дорожках, когда пешеходы с учетом положений части второй подпункта 17.2 пункта 17 настоящих Правил имеют преимущество;
9.91. уступать дорогу велосипедистам на нерегулируемых пешеходных переходах, велосипедных переездах и регулируемых пешеходных переходах, велосипедных переездах при одновременном для водителей и велосипедистов разрешающем сигнале регулировщика или светофора;
9.10. покидать свое место или оставлять транспортное средство только в случае, если приняты меры, исключающие самопроизвольное движение транспортного средства;
9.11. при передаче управления механическим транспортным средством другому лицу убедиться в наличии у него при себе водительского удостоверения (кроме случая обучения управлению механическим транспортным средством);
9.12. предоставлять транспортное средство для освобождения проезжей части дороги от транспортных средств, поврежденных при дорожно-транспортном происшествии, а также доставлять на управляемом транспортном средстве*:

лиц, нуждающихся в срочной медицинской помощи, в ближайшую организацию здравоохранения по требованию работников правоохранительных органов и организаций здравоохранения;
работников организаций здравоохранения для проезда к месту нахождения больного, жизнь которого находится под угрозой;
работников правоохранительных органов для выполнения неотложных служебных обязанностей, связанных с преследованием лиц, подозреваемых в совершении преступлений, при принятии указанными работниками надлежащих мер по обеспечению безопасности водителя и пассажиров транспортного средства.
________________
* Данное требование не распространяется на транспортные средства, принадлежащие дипломатическим представительствам, консульским учреждениям, международным организациям и гражданам иностранных государств, пользующимся в соответствии с международными договорами Республики Беларусь дипломатическим иммунитетом.

Лицо, воспользовавшееся транспортным средством, должно по требованию водителя выдать ему соответствующую справку или сделать запись в путевом листе с указанием продолжительности поездки, пройденного расстояния, своей фамилии, должности, номера служебного удостоверения, наименования соответствующей организации. Расходы, связанные с предоставлением транспортного средства, по требованию владельца транспортного средства возмещаются в порядке, установленном законодательством;

9.13. обучать управлению механическим транспортным средством в индивидуальном порядке только на площадках или автодромах, закрытых для дорожного движения, при наличии у него водительского удостоверения и водительского стажа не менее двух лет.

10. Водителю запрещается:

10.1. управлять транспортным средством в состоянии алкогольного опьянения либо в состоянии, вызванном потреблением наркотических средств, психотропных веществ, их аналогов, токсических или других одурманивающих веществ, а также потреблять алкогольные, слабоалкогольные напитки, пиво, наркотические средства, психотропные вещества, их аналоги, токсические или другие одурманивающие вещества после подачи сотрудником органов внутренних дел требования об остановке транспортного средства до прохождения в установленном порядке проверки (освидетельствования) на предмет определения состояния алкогольного опьянения либо состояния, вызванного потреблением наркотических средств, психотропных веществ, их аналогов, токсических или других одурманивающих веществ. В этих случаях сотрудники ГАИ вправе производить задержание и принудительную отбуксировку транспортного средства при отсутствии иной правомерной возможности доставить транспортное средство к месту хранения;
10.2. управлять транспортным средством в болезненном или утомленном состоянии, ставящем под угрозу безопасность дорожного движения, под воздействием лекарственных средств, снижающих внимание и быстроту реакции;
10.3. участвовать в дорожном движении на транспортном средстве, конструкция и техническое состояние которого не отвечают требованиям технических регламентов Таможенного союза и Евразийского экономического союза, а также требованиям, установленным настоящими Правилами, в отношении которого не выдано разрешение на его допуск к участию в дорожном движении, с загрязнениями (наслоениями), ограничивающими обзорность дороги и не позволяющими различать днем в ясную погоду информацию на регистрационном знаке (временном номерном знаке) с расстояния 40 метров и менее;
10.4. пользоваться во время движения транспортного средства аппаратом радио- и телефонной связи, иными не предусмотренными конструкцией транспортного средства устройствами, если для этого необходимо держать их в руке либо воздействовать на них рукой;
10.5. двигаться на тяжеловесном и (или) крупногабаритном транспортном средстве:

без специального разрешения на проезд тяжеловесных и (или) крупногабаритных транспортных средств по автомобильным дорогам общего пользования Республики Беларусь*;
с нарушением маршрута и условий движения, указанных в специальном разрешении на проезд тяжеловесных и (или) крупногабаритных транспортных средств по автомобильным дорогам общего пользования Республики Беларусь;
________________
* Данное требование не распространяется на тяжеловесное и (или) крупногабаритное транспортное средство, въезжающее (въехавшее) на территорию Республики Беларусь через таможенную границу Евразийского экономического союза в Республике Беларусь и превышающее допустимую общую массу и (или) допустимую осевую массу (сумму осевых масс) до 10 процентов включительно, или в иных случаях, предусмотренных законодательством.

10.6. двигаться на транспортном средстве на гусеничном ходу или с металлическими шипами (кроме ошипованных шин) по дороге общего пользования с усовершенствованным покрытием;
10.7. двигаться на мотоцикле, мопеде, велосипеде на одном колесе, а также двигаться на мотоцикле, мопеде, велосипеде, не держась за руль обеими руками, за исключением случаев подачи сигнала рукой, предусмотренных в пункте 56 настоящих Правил, или не держа ноги на педалях (подножках);
10.8. обучать управлению механическими транспортными средствами на участках улиц и дорог, где это запрещено. Перечень участков улиц и дорог, где запрещено обучение управлению механическими транспортными средствами, определяется Министерством внутренних дел;
10.9. перевозить на мопеде, мотоцикле (кроме бокового прицепа к мотоциклу) пассажира, заведомо для водителя находящегося в состоянии алкогольного опьянения либо в состоянии, вызванном потреблением наркотических средств, психотропных веществ, их аналогов, токсических или других одурманивающих веществ.

11. Владельцу транспортного средства, самоходной машины либо лицу, имеющему право на управление транспортным средством, самоходной машиной, запрещается передавать управление транспортным средством, самоходной машиной другому лицу:

11.1. не имеющему при себе водительского удостоверения, предоставляющего право управления данной категорией транспортного средства, самоходной машины, за исключением случаев обучения управлению транспортным средством, самоходной машиной или сдачи квалификационного практического экзамена на право управления механическим транспортным средством, самоходной машиной;
11.2. не убедившись, что лицо, которому передается управление транспортным средством, самоходной машиной, не находится в состоянии алкогольного опьянения либо в состоянии, вызванном потреблением наркотических средств, психотропных веществ, их аналогов, токсических или других одурманивающих веществ.

12. Водитель механического транспортного средства обязан иметь при себе и передавать для проверки:

12.1. сотрудникам ГАИ:
12.1.1. водительское удостоверение, соответствующее требованиям Конвенции о дорожном движении, подписанной в г. Вене 8 ноября 1968 года, а в случае несоответствия ее требованиям — национальное водительское удостоверение, составленное на одном из государственных языков Республики Беларусь, либо национальное водительское удостоверение с заверенным переводом на один из государственных языков Республики Беларусь, либо водительское удостоверение образца Министерства внутренних дел СССР, либо биометрический документ, удостоверяющий личность (идентификационная карта гражданина Республики Беларусь, биометрический вид на жительство в Республике Беларусь иностранного гражданина, биометрический вид на жительство в Республике Беларусь лица без гражданства), за исключением водителей колесных тракторов и самоходных машин;
12.1.2. свидетельство о регистрации (технический паспорт, технический талон) механического транспортного средства, прицепа (прицепов) к нему, а в отношении незарегистрированного транспортного средства — документ, подтверждающий законность его приобретения;
12.1.3. документ, подтверждающий заключение договора обязательного страхования гражданской ответственности владельца транспортного средства (договор внутреннего страхования, либо договор комплексного внутреннего страхования, либо договор пограничного страхования, либо договор страхования «Зеленая карта», либо договор международного страхования, действительный на территории Республики Беларусь), за исключением случаев заключения договора внутреннего страхования в электронном виде;
12.1.4. документы, подтверждающие правомерность установки опознавательного знака «Инвалид» при его наличии на транспортном средстве, за исключением иностранных граждан и лиц без гражданства;
12.1.5. исключен.
12.2. должностным лицам, указанным в части третьей подпункта 9.1 пункта 9 настоящих Правил, — документ, удостоверяющий его личность, или водительское удостоверение, а должностным лицам Транспортной инспекции Министерства транспорта и коммуникаций при осуществлении ими возложенных на указанную инспекцию функций также документ, указанный в подпункте 12.1.2 настоящего пункта.

13. Водители механических транспортных средств, эксплуатируемых юридическими лицами и индивидуальными предпринимателями, также обязаны иметь при себе и передавать для проверки сотрудникам ГАИ, должностным лицам Транспортной инспекции Министерства транспорта и коммуникаций транспортные и иные документы, предусмотренные законодательными актами.
Другие должностные лица имеют право проверки документов у водителей механических транспортных средств только в случаях, предусмотренных законодательными актами для осуществления функций, возложенных на соответствующие государственные органы.

14. Исключен.

15. Водитель механического транспортного средства, оборудованного тахографом, обязан представлять по требованию сотрудников ГАИ, должностных лиц Транспортной инспекции Министерства транспорта и коммуникаций:

15.1. при аналоговом тахографе — регистрационные листки (тахограммы);
15.2. при цифровом тахографе — карточку водителя, распечатки с тахографа, регистрационные листки (тахограммы), предоставить доступ к тахографу;
15.3. исключен.

ГЛАВА 4
ПРАВА И ОБЯЗАННОСТИ ПЕШЕХОДОВ
16. Пешеход имеет право:

16.1. передвигаться по дорогам в соответствии с настоящими Правилами;
16.2. на преимущественное пересечение проезжей части дороги по нерегулируемым пешеходному переходу, велосипедному переезду (в случае движения на средствах персональной мобильности), а также по регулируемым пешеходному переходу, велосипедному переезду (в случае движения на средствах персональной мобильности) при разрешающем сигнале регулировщика или светофора.

17. Пешеход обязан:

17.1. двигаться по тротуару, пешеходной дорожке, а при их отсутствии — по велосипедной дорожке, не создавая препятствия для движения велосипедистов и лиц, передвигающихся на средствах персональной мобильности, либо по обочине.
В случае отсутствия указанных элементов дороги или невозможности движения пешеходов по ним допускается движение пешехода по краю ее проезжей части навстречу движению транспортных средств.

При движении по краю проезжей части дороги или обочине в темное время суток пешеход должен обозначить себя световозвращающим элементом (элементами). Световозвращающие характеристики данных элементов устанавливаются обязательными для соблюдения техническими нормативными правовыми актами;

17.2. переходить (пересекать) проезжую часть дороги по подземному, надземному, наземному пешеходным переходам, а при их отсутствии в пределах видимости, убедившись, что выход на проезжую часть дороги безопасен, — на перекрестке по линии тротуаров или обочин.
Пересечение проезжей части дороги на средстве персональной мобильности должно осуществляться по велосипедному переезду или велосипедной дорожке с соблюдением требований, предусмотренных в пункте 150 настоящих Правил для движения велосипедистов, а в случае отсутствия велосипедного переезда или велосипедной дорожки — в местах, предусмотренных для пешеходов, с соблюдением требований, указанных в части первой настоящего подпункта и подпункте 17.3 настоящего пункта;

17.21. при передвижении на роликовых коньках, лыжах, другом спортивном инвентаре, средствах персональной мобильности пересекать проезжую часть дороги со скоростью идущего шагом пешехода, убедившись, что выход (выезд) на проезжую часть дороги безопасен;
17.3. при отсутствии в пределах видимости пешехода подземного, надземного, наземного пешеходных переходов и перекрестка, а в случае передвижения на средствах персональной мобильности — также велосипедного переезда переходить (пересекать) проезжую часть дороги по кратчайшей траектории на участке, где дорога хорошо просматривается в обе стороны, убедившись, что выход на проезжую часть дороги безопасен и своими действиями пешеход не создаст препятствия для движения транспортных средств.
При пересечении проезжей части дороги вне подземного, надземного, наземного пешеходных переходов и перекрестка, а в случае передвижения на средствах персональной мобильности — также велосипедного переезда в темное время суток пешеходу рекомендуется обозначить себя световозвращающим элементом (элементами);
17.4. при использовании средств персональной мобильности двигаться по велосипедной дорожке, а при ее отсутствии — по тротуару, пешеходной дорожке либо обочине, не создавая препятствий для движения других пешеходов.
Средство персональной мобильности должно иметь исправные тормозную систему и рулевое управление (при наличии).

При движении на средстве персональной мобильности в темное время суток и (или) при недостаточной видимости дороги пешеход должен обозначить себя световозвращающим элементом (элементами), а на средстве персональной мобильности должна быть установлена и включена фара (фонарь), позволяющая своевременно обнаружить препятствие для дорожного движения.

При движении на средстве персональной мобильности пешеходу рекомендуется использовать защитный шлем;

17.5. по требованию сотрудника ГАИ пройти в установленном порядке проверку (освидетельствование) на предмет определения состояния алкогольного опьянения либо состояния, вызванного потреблением наркотических средств, психотропных веществ, их аналогов, токсических или других одурманивающих веществ.

18. Пешеходу запрещается:

18.1. двигаться по краю проезжей части дороги при наличии тротуара, пешеходной или велосипедной дорожки, обочины, по которым возможно движение пешеходов, за исключением случаев, указанных в пунктах 21 и 135 настоящих Правил;
18.2. задерживаться и останавливаться на проезжей части дороги, в том числе на линии горизонтальной дорожной разметки, разделяющей встречные и попутные потоки транспортных средств, за исключением остановки на островках безопасности;
18.3. переходить (пересекать) проезжую часть вне подземного, надземного, наземного пешеходных переходов на участке дороги:
18.3.1. с разделительной зоной, разделительной полосой;
18.3.2. с общим числом полос движения шесть и более;
18.3.3. где установлены дорожные ограждения;
18.4. выходить на проезжую часть дороги из-за стоящего транспортного средства или иного объекта, ограничивающего обзорность дороги, не убедившись в отсутствии приближающихся транспортных средств;
18.5. передвигаться на средствах персональной мобильности:
18.5.1. со скоростью более 25 км/ч;
18.5.2. в состоянии алкогольного опьянения либо в состоянии, вызванном потреблением наркотических средств, психотропных веществ, их аналогов, токсических или других одурманивающих веществ, а также потреблять алкогольные, слабоалкогольные напитки, пиво, наркотические средства, психотропные вещества, их аналоги, токсические или другие одурманивающие вещества после подачи сотрудником органов внутренних дел требования об остановке до прохождения в установленном порядке проверки (освидетельствования) на предмет определения состояния алкогольного опьянения либо состояния, вызванного потреблением наркотических средств, психотропных веществ, их аналогов, токсических или других одурманивающих веществ;
18.5.3. перевозя при этом других лиц вне специально оборудованных мест для сидения, предусмотренных конструкцией средства персональной мобильности;
18.5.4. не держась за руль (при его наличии);
18.5.5. в возрасте до четырнадцати лет (кроме пешеходных и жилых зон);
18.6. при выходе (выезде) на проезжую часть дороги и движении по ней совершать действия, угрожающие безопасности дорожного движения.

19. В темное время суток и (или) при недостаточной видимости дороги в случае движения по обочине или по краю проезжей части дороги пешеход, ведущий велосипед, мопед, мотоцикл без бокового прицепа, обозначенный габаритными огнями, сигнальными фонарями или световозвращателями (световозвращающими лентами), должен двигаться по ходу движения транспортных средств.

20. При приближении транспортного средства с включенными маячками синего или синего и красного цветов пешеходу запрещается переходить (пересекать) проезжую часть дороги, а пешеход, находящийся на проезжей части дороги, должен покинуть ее, соблюдая меры предосторожности.

21. Движение организованной пешеходной колонны по проезжей части дороги разрешается только по направлению движения транспортных средств по правой стороне не более чем по четыре человека в ряд. В светлое время суток впереди и сзади с левой стороны этой колонны должны быть сопровождающие с флажками красного цвета, а в темное время суток и (или) при недостаточной видимости дороги впереди — сопровождающие с фонарем, излучающим белый свет, и сзади — излучающим красный свет.

22. Группы детей разрешается водить только по тротуарам, пешеходным и велосипедным дорожкам, а при их отсутствии — по обочинам навстречу движению транспортных средств и только в светлое время суток. При этом их передвижение осуществляется колонной не более чем по двое детей в ряд в сопровождении совершеннолетних из расчета не менее одного сопровождающего на двадцать детей.

ГЛАВА 5
ОБЯЗАННОСТИ ПАССАЖИРОВ
23. Пассажир обязан:
23.1. осуществлять посадку (высадку) только после полной остановки транспортного средства с посадочной площадки, а в случае ее отсутствия — с тротуара или обочины;
23.2. быть пристегнутым при движении в механическом транспортном средстве, оборудованном ремнями безопасности, кроме случаев, указанных в абзацах третьем и четвертом части второй подпункта 9.5 пункта 9 настоящих Правил, а при поездке на мотоцикле, мопеде — быть в застегнутом мотошлеме;
23.3. соблюдать меры безопасности, предусмотренные конструкцией транспортного средства и правилами перевозки пассажиров на соответствующем виде транспортного средства;
23.4. по требованию сотрудника ГАИ пройти в установленном порядке проверку (освидетельствование) на предмет определения состояния алкогольного опьянения либо состояния, вызванного потреблением наркотических средств, психотропных веществ, их аналогов, токсических или других одурманивающих веществ.
24. Пассажиру запрещается:
24.1. отвлекать водителя от управления транспортным средством во время его движения и (или) мешать водителю в управлении транспортным средством;
24.2. препятствовать закрытию дверей транспортного средства, а во время его движения высовываться в оконные проемы, открывать двери транспортного средства;
24.3. при движении на грузовом автомобиле с бортовой платформой стоять, сидеть на его бортах или на грузе, находящемся выше бортов;
24.4. передвигаться на мопеде, мотоцикле (кроме бокового прицепа к мотоциклу) в состоянии алкогольного опьянения либо в состоянии, вызванном потреблением наркотических средств, психотропных веществ, их аналогов, токсических или других одурманивающих веществ.
ГЛАВА 6
ПРАВА И ОБЯЗАННОСТИ ВОДИТЕЛЕЙ И ДРУГИХ ЛИЦ В ОСОБЫХ СЛУЧАЯХ
25. Водители транспортных средств оперативного назначения при условии обеспечения безопасности дорожного движения могут отступать:

с включенными маячками синего или синего и красного цветов от требований светофоров, дорожных знаков и дорожной разметки, а также подпункта 9.8 пункта 9, подпункта 10.4 пункта 10, главы 9 (кроме пунктов 56 и 57), глав 10–15, 17–19 настоящих Правил;
без включения маячков синего или синего и красного цветов от требований подпункта 10.4 пункта 10, пункта 124, главы 19 настоящих Правил.
Этим же правом пользуются водители транспортных средств, сопровождаемых транспортными средствами оперативного назначения с включенными маячками синего или синего и красного цветов.

Права и обязанности водителей и других лиц при осуществлении государственной охраны определяются настоящими Правилами с учетом особенностей, предусмотренных законодательными актами в сфере государственной охраны.

26. При приближении транспортного средства оперативного назначения с включенным маячком синего цвета водители независимо от направления их движения должны уступить дорогу и обеспечить беспрепятственный проезд указанному транспортному средству оперативного назначения, а в случае его движения в организованной транспортной колонне — и другим транспортным средствам, движущимся в этой колонне.
При приближении транспортного средства оперативного назначения с включенными маячками синего и красного цветов водители попутных, а при отсутствии разделительной полосы также водители и встречных транспортных средств должны остановиться на обочине, а при ее отсутствии — занять крайнее правое положение в правой полосе движения и остановиться.

Начинать движение разрешается после проезда транспортного средства оперативного назначения с включенными маячками синего и красного цветов. При движении организованной транспортной колонны в сопровождении транспортного средства оперативного назначения с включенными маячками синего и красного цветов начинать движение разрешается только после проезда замыкающего указанную колонну транспортного средства оперативного назначения с включенным маячком синего цвета (транспортного средства с опознавательным знаком «Колонна»).

27. Водителям запрещается выполнять обгон и опережение транспортных средств оперативного назначения с включенными маячками синего или синего и красного цветов, двигаться по соседним полосам движения с их скоростью движения, а также занимать место в организованной транспортной колонне или пересекать ее.

28. Приближаясь к стоящему транспортному средству оперативного назначения с включенным:

28.1. маячком синего цвета, водитель должен снизить скорость движения, чтобы иметь возможность немедленно остановиться в случае необходимости;
28.2. маячком красного цвета, водитель должен остановиться, не доезжая до транспортного средства оперативного назначения. Продолжить движение можно после разрешения регулировщика или выключения маячка красного цвета.

29. Для привлечения внимания участников дорожного движения водителями транспортных средств оперативного назначения может подаваться специальный звуковой сигнал.

30. Водители транспортных средств дорожно-эксплуатационной службы, оборудованных маячком оранжевого цвета, при его включении в ходе выполнения работ на дороге могут отступать от требований дорожных знаков и дорожной разметки, а также подпункта 9.8 пункта 9, пунктов 78–80, 82 и подпунктов 131.1–131.5 пункта 131 настоящих Правил при условии обеспечения безопасности дорожного движения. Участники дорожного движения не должны препятствовать их работе.
Маячок оранжевого цвета, установленный на других транспортных средствах и самоходных машинах, не дает преимущества в движении и служит для привлечения внимания и предупреждения участников дорожного движения о возможной опасности.

31. Водитель, являющийся участником дорожно-транспортного происшествия, обязан:

31.1. немедленно остановиться и не принимать мер по изменению положения транспортного средства, при участии которого совершено дорожно-транспортное происшествие, включить аварийную световую сигнализацию и выставить знак аварийной остановки с соблюдением положений главы 8 настоящих Правил, оставаться на месте дорожно-транспортного происшествия по возможности вне проезжей части дороги;
31.2. принять меры по оказанию необходимой помощи пострадавшему (пострадавшим), вызвать скорую медицинскую помощь, а если это невозможно, принять меры по доставке пострадавшего (пострадавших) в ближайшую организацию здравоохранения на одном или нескольких попутных транспортных средствах (при их отсутствии доставить пострадавшего (пострадавших) на транспортном средстве, при участии которого совершено дорожно-транспортное происшествие).
Водитель, доставивший пострадавшего (пострадавших) в организацию здравоохранения, обязан сообщить в этой организации свою фамилию, регистрационный знак (временный номерной знак) транспортного средства, предъявив водительское удостоверение или документ, удостоверяющий личность, и свидетельство о регистрации транспортного средства либо документ, подтверждающий законность его приобретения, и возвратиться к месту дорожно-транспортного происшествия;
31.3. в случае необходимости доставки пострадавшего (пострадавших) в организацию здравоохранения на транспортном средстве, при участии которого совершено дорожно-транспортное происшествие, предварительно зафиксировать в присутствии очевидцев положение транспортного средства, следы и предметы, относящиеся к дорожно-транспортному происшествию;
31.4. записать фамилии и адреса очевидцев дорожно-транспортного происшествия, сообщить о случившемся в милицию и ожидать прибытия сотрудников ГАИ, за исключением случая, предусмотренного частью второй настоящего подпункта.
Водитель в случае дорожно-транспортного происшествия вправе не сообщать о нем в ГАИ при наличии одновременно следующих обстоятельств:

в результате дорожно-транспортного происшествия вред причинен только транспортным средствам, участвовавшим в дорожно-транспортном происшествии;
дорожно-транспортное происшествие произошло с участием двух транспортных средств, в том числе в случае остановки, вынужденной остановки, стоянки одного из них;
лица, управлявшие транспортными средствами, имеют право на управление транспортным средством соответствующей категории;
в отношении транспортных средств имеются действующие договоры обязательного страхования гражданской ответственности их владельцев;
обстоятельства причинения вреда в связи с повреждением транспортного средства в результате дорожно-транспортного происшествия, характер и перечень видимых повреждений транспортных средств не вызывают разногласий у водителей транспортных средств, участвовавших в дорожно-транспортном происшествии, и зафиксированы в извещении о дорожно-транспортном происшествии, бланк которого заполнен этими водителями транспортных средств, в соответствии с Положением о страховой деятельности в Республике Беларусь, утвержденным Указом Президента Республики Беларусь от 25 августа 2006 г. № 530;
водители транспортных средств, участвовавших в дорожно-транспортном происшествии, не предъявляют претензий к состоянию друг друга (данные лица не находятся в состоянии алкогольного опьянения либо в состоянии, вызванном потреблением наркотических средств, психотропных веществ, их аналогов, токсических или других одурманивающих веществ, в результате дорожно-транспортного происшествия не причинен вред жизни или здоровью);
вред, причиненный каждому транспортному средству, участвовавшему в дорожно-транспортном происшествии, оценивается водителями данных транспортных средств в размере до 800 евро по установленному Национальным банком официальному курсу белорусского рубля по отношению к евро.
Действие части второй настоящего подпункта распространяется также на случаи остановки, вынужденной остановки, стоянки одного из участвующих в дорожно-транспортном происшествии транспортных средств и присутствия его владельца на месте происшествия. При этом в случае стоянки транспортного средства для владельца транспортного средства наличие права на управление транспортным средством соответствующей категории необязательно;

31.5. до прибытия сотрудников ГАИ принять все возможные меры по сохранению следов и предметов, относящихся к дорожно-транспортному происшествию, их ограждению и организации объезда места дорожно-транспортного происшествия.

32. Участнику дорожного движения, являющемуся участником дорожно-транспортного происшествия, запрещается:

32.1. оставлять место дорожно-транспортного происшествия, перемещать транспортное средство и предметы, имеющие отношение к дорожно-транспортному происшествию, кроме случаев, указанных в подпункте 31.3 и части второй подпункта 31.4 пункта 31 настоящих Правил;
32.2. потреблять алкогольные, слабоалкогольные напитки, пиво, наркотические средства, психотропные вещества, их аналоги, токсические или другие одурманивающие вещества до прохождения в установленном порядке проверки (освидетельствования) на предмет определения состояния алкогольного опьянения либо состояния, вызванного потреблением наркотических средств, психотропных веществ, их аналогов, токсических или других одурманивающих веществ;
32.3. вскрывать тахограф без разрешения сотрудника ГАИ.

33. Участники дорожно-транспортного происшествия, не указанные в пункте 31 настоящих Правил, и его очевидцы обязаны:

33.1. оказать возможную помощь пострадавшему (пострадавшим);
33.2. записать фамилии и адреса других очевидцев дорожно-транспортного происшествия, а также регистрационные знаки (временные номерные знаки) транспортных средств, находившихся при совершении дорожно-транспортного происшествия;
33.3. сообщить в милицию о дорожно-транспортном происшествии;
33.4. находиться по возможности на месте дорожно-транспортного происшествия вне проезжей части дороги до прибытия сотрудников ГАИ, после чего сообщить им информацию о дорожно-транспортном происшествии, очевидцами которого они стали.

34. В случае обнаружения или создания на дороге препятствия, создающего опасность для движения, участники дорожного движения обязаны:

34.1. принять меры по его устранению;
34.2. при невозможности устранения препятствия обозначить его в соответствии с настоящими Правилами или иным способом, обеспечивающим безопасность дорожного движения, после чего сообщить о препятствии в милицию либо дорожно-эксплуатационную или коммунальную службу.

ГЛАВА 7
СИГНАЛЫ РЕГУЛИРОВЩИКА И СВЕТОФОРОВ
35. Требование регулировщика об остановке транспортного средства выражается путем подачи сигнала жезлом или жестом руки, а также с помощью громкоговорящего устройства. Для дополнительного привлечения внимания участников дорожного движения регулировщиком может подаваться сигнал свистком. Водитель должен остановиться в указанном ему регулировщиком месте.
Сигналы регулировщика обязательны для исполнения участниками дорожного движения, даже если они не соответствуют требованиям сигналов светофоров и других технических средств организации дорожного движения.

Действия регулировщика должны обеспечивать безопасность участников дорожного движения.

36. Сигналы регулировщика имеют следующие значения:

36.1. руки вытянуты в стороны или опущены:
36.1.1. со стороны левого и правого бока разрешено: трамваю — движение прямо, другим транспортным средствам — движение прямо и направо, пешеходам — переходить проезжую часть дороги;
36.1.2. со стороны груди и спины: движение всех транспортных средств и пешеходов запрещено;
36.2. правая рука вытянута вперед:
36.2.1. со стороны левого бока разрешено: трамваю — движение налево, другим транспортным средствам — движение во всех направлениях;
36.2.2. со стороны груди: всем транспортным средствам разрешено движение только направо;
36.2.3. со стороны правого бока и спины: движение всех транспортных средств запрещено, пешеходам разрешено переходить проезжую часть дороги за спиной регулировщика;
36.3. рука поднята вверх: движение всех транспортных средств и пешеходов запрещено во всех направлениях, кроме случаев, предусмотренных подпунктами 50.1 и 50.2 пункта 50 настоящих Правил.

37. Регулировщик может подавать понятные участникам дорожного движения сигналы, не указанные в пункте 36 настоящих Правил.

38. Светофоры относятся к техническим средствам организации дорожного движения и применяются для регулирования очередности пропуска транспортных средств и пешеходов, а также для обозначения опасных участков дорог. Светофоры подразделяются на транспортные и пешеходные.
Со светофорами может применяться дополнительное оборудование: экраны, информационные секции, информационные и обозначающие таблички, цифровые табло, кнопки включения разрешающего сигнала для пешеходов (табло вызовные пешеходные). В светофорах применяются световые сигналы зеленого, желтого, красного и бело-лунного цветов.

В зависимости от назначения сигналы светофоров могут быть круглыми, в виде стрелки (стрелок), силуэта пешехода, велосипеда, трамвая и Х-образные.

Светофоры с круглыми сигналами могут иметь одну или две дополнительные секции с сигналами в виде зеленой стрелки (стрелок), которые располагаются на уровне зеленого круглого сигнала.

Светофоры с Х-образным красным сигналом, желтым сигналом в виде стрелки (при его наличии), направленной вправо, и зеленым сигналом в виде стрелки, направленной вниз, называются реверсивными и предназначены для регулирования движения транспортных средств по полосам проезжей части дороги, по которым направление движения может изменяться на противоположное.

39. Круглые сигналы светофора имеют следующие значения:

39.1. зеленый сигнал разрешает движение;
39.2. зеленый мигающий сигнал разрешает движение и информирует, что время его действия истекает и вскоре будет включен запрещающий сигнал;
39.3. желтый сигнал предупреждает о предстоящей смене сигналов и запрещает движение, кроме случаев, указанных в подпунктах 50.1, 50.2 пункта 50 и пункте 106 настоящих Правил;
39.4. желтый мигающий сигнал разрешает движение и информирует о наличии нерегулируемого перекрестка или пешеходного перехода, предупреждает о возможной опасности для движения;
39.5. красный сигнал, в том числе мигающий (два мигающих красных сигнала), запрещает движение;
39.6. сочетание красного и желтого сигналов запрещает движение и информирует о предстоящем включении зеленого сигнала.

40. Сигналы светофора, выполненные в виде стрелок красного, желтого и зеленого цветов, имеют то же значение, что и круглые сигналы соответствующего цвета. Движение осуществляется при включении разрешающего сигнала светофора только по направлениям, указываемым стрелками. Вместо красных, желтых и зеленых стрелок в том же значении могут использоваться круглые красные, желтые и зеленые сигналы с нанесенными на них черными контурными стрелками.
При этом стрелка, разрешающая поворот налево, разрешает и разворот, если это не запрещено соответствующим дорожным знаком. Такое же значение имеет зеленая стрелка в дополнительной секции. Выключенный сигнал дополнительной секции означает запрещение движения в направлении, регулируемом этой секцией.

41. Если на основной зеленый сигнал светофора нанесена черная контурная стрелка (стрелки), то она информирует водителей о наличии дополнительной секции светофора и указывает иные, чем сигнал дополнительной секции, разрешенные направления движения.
42. Если сигнал светофора выполнен в виде зеленого или красного силуэта пешехода, то его действие распространяется только на пешеходов. Зеленый сигнал разрешает, а красный запрещает движение пешеходов. При этом:
42.1. мигающий зеленый сигнал пешеходного светофора запрещает выход пешеходов на проезжую часть дороги с тротуара или островка безопасности, но разрешает пешеходам, находящимся на проезжей части, продолжить движение в том же направлении до островка безопасности (при его наличии) или завершить переход проезжей части дороги (при отсутствии островка безопасности);
42.2. если красный сигнал пешеходного светофора застал пешехода на проезжей части дороги, на которой отсутствует островок безопасности, то пешеход должен завершить переход проезжей части дороги;
42.3. если красный сигнал пешеходного светофора застал пешехода на проезжей части дороги до островка безопасности, то пешеход должен продолжить движение в том же направлении до островка безопасности и остановиться на нем;
42.4. если красный сигнал пешеходного светофора застал пешехода на островке безопасности, то пешеход должен оставаться на нем до включения разрешающего сигнала светофора;
42.5. если красный сигнал пешеходного светофора застал пешехода на проезжей части дороги после островка безопасности, то пешеход должен завершить переход проезжей части дороги;
42.6. для информирования пешеходов о том, что в период разрешенного для них движения по пешеходному переходу через переход могут двигаться транспортные средства, выполняющие на перекрестке правый и (или) левый поворот, разрешающий сигнал пешеходного светофора может быть дополнен по периметру кольцом желтого цвета;
42.7. для дополнительного информирования пешеходов о возможности пересечения проезжей части дороги световые сигналы светофоров могут быть дополнены звуковым сигналом;
42.8. для информирования пешеходов о времени ожидания разрешающего сигнала и (или) о времени, оставшемся для безопасного завершения перехода проезжей части дороги, совместно с пешеходными светофорами могут применяться цифровые табло;
42.9. при отсутствии на пешеходном переходе пешеходного светофора пешеходы должны руководствоваться сигналами транспортного светофора.
43. Если на сигналы светофора нанесены силуэты велосипеда либо под транспортным светофором установлена обозначающая табличка белого цвета с черным силуэтом велосипеда, действие сигналов такого светофора распространяется только на велосипедистов. Значения сигналов светофора для них аналогичны значению круглых сигналов, указанных в пункте 39 настоящих Правил.
Если под пешеходным светофором установлена обозначающая табличка белого цвета с черным силуэтом велосипеда, действие сигналов такого светофора распространяется и на велосипедистов.

При пересечении проезжей части по регулируемому пешеходному переходу или велосипедному переезду и отсутствии светофора, регулирующего движение велосипедистов, водители велосипедов должны руководствоваться сигналами пешеходного светофора, а при его отсутствии — сигналами транспортного светофора.

44. Красный сигнал реверсивного светофора запрещает, а зеленый разрешает движение.
При выключенных сигналах реверсивного светофора, который расположен над полосой движения, обозначенной с обеих сторон горизонтальной дорожной разметкой 1.9, въезд на эту полосу запрещен.

Основные сигналы реверсивного светофора могут быть дополнены желтым сигналом в виде стрелки, наклоненной по диагонали вниз направо, включение которой информирует о предстоящей смене сигнала и необходимости перестроиться на полосу движения справа.

45. Для регулирования движения трамваев, а также других маршрутных транспортных средств, движущихся по выделенной для них полосе движения, могут применяться светофоры:

одноцветной сигнализации с четырьмя круглыми сигналами бело-лунного цвета, расположенными в виде буквы «Т», при этом движение разрешается только при включении одновременно нижнего сигнала и одного или нескольких верхних, из которых левый означает движение налево (на разворот для маршрутных транспортных средств, кроме трамвая), средний — прямо, правый — направо. Если включены только три верхних сигнала, движение запрещено;
двухцветной сигнализации с вертикальным или горизонтальным расположением сигналов, один из которых выполнен в виде красного силуэта трамвая на черном фоне, а другой — в виде стрелки бело-лунного цвета на черном фоне (только для регулирования движения трамваев). Бело-лунный сигнал такого светофора разрешает движение трамваев в направлении, указываемом стрелкой, красный сигнал запрещает движение трамваев в этом направлении. Светофоры могут быть дополнены табличкой белого цвета с черным силуэтом трамвая.
Водители трамваев и других маршрутных транспортных средств, движущихся по выделенной для них полосе движения, должны руководствоваться сигналами светофоров, указанными в части первой настоящего пункта, в случаях применения этих светофоров совместно с иными транспортными светофорами.

46. Для регулирования движения на железнодорожных переездах применяются светофоры с двумя красными сигналами или одним бело-лунным и двумя красными сигналами, которые имеют следующие значения:

46.1. мигающие красные сигналы запрещают движение транспортных средств, участников дорожного движения через железнодорожный переезд. Одновременно с этими сигналами должен быть включен звуковой сигнал, который дополнительно информирует о запрещении движения через железнодорожный переезд;
46.2. мигающий бело-лунный сигнал дополнительно обозначает железнодорожный переезд, информирует об исправности сигнализации и не запрещает движения транспортных средств, участников дорожного движения;
46.3. выключенные красный и бело-лунный сигналы означают, что сигнализация не работает или неисправна. В этом случае разрешается движение транспортных средств, участников дорожного движения только при отсутствии железнодорожного транспортного средства.

47. Для обозначения нерегулируемых перекрестков и пешеходных переходов могут применяться светофоры с одним или двумя мигающими желтыми сигналами.

48. На перекрестке при запрещающем сигнале регулировщика или светофора водители должны остановиться перед дорожным знаком «Стоп-линия» (линией горизонтальной дорожной разметки 1.12), а при ее отсутствии:

48.1. перед светофором, руководствуясь пунктом 106 настоящих Правил;
48.2. перед пешеходным переходом — при отсутствии светофора;
48.3. перед ближним к водителю краем тротуара — при отсутствии светофора и пешеходного перехода;
48.4. перед краем пересекаемой проезжей части дороги — при отсутствии светофора, пешеходного перехода и тротуара.

49. Вне перекрестка при запрещающем сигнале регулировщика или светофора (кроме реверсивного) водители должны остановиться перед дорожным знаком «Стоп-линия» (линией горизонтальной дорожной разметки 1.12), а при его отсутствии:

49.1. на регулируемом пешеходном переходе — перед светофором, а при его отсутствии — перед пешеходным переходом;
49.2. перед железнодорожным переездом — в соответствии с пунктом 129 настоящих Правил;
49.3. в других местах — перед регулировщиком или светофором, не создавая препятствия и опасности для дорожного движения.

50. При поднятии регулировщиком руки вверх или включении желтого сигнала светофора:

50.1. водителям, которые не могут остановиться, не прибегая к экстренному торможению, в местах, определенных пунктами 48 и 49 настоящих Правил, разрешается дальнейшее движение;
50.2. пешеходам, находящимся на проезжей части дороги, разрешается продолжить движение в том же направлении до островка безопасности (при его наличии) или завершить переход проезжей части дороги (при отсутствии островка безопасности);
50.3. пешеходам запрещается:
50.3.1. выходить на проезжую часть дороги;
50.3.2. покидать островок безопасности.

ГЛАВА 8
ПРИМЕНЕНИЕ АВАРИЙНОЙ СВЕТОВОЙ СИГНАЛИЗАЦИИ,
ЗНАКА АВАРИЙНОЙ ОСТАНОВКИ, ФОНАРЯ С МИГАЮЩИМ КРАСНЫМ СВЕТОМ
51. Аварийная световая сигнализация должна быть включена в случаях:
51.1. дорожно-транспортного происшествия;
51.2. вынужденной остановки транспортного средства на проезжей части дороги и в местах, где остановка запрещена;
51.3. ослепления водителя светом фар;
51.4. буксировки механического транспортного средства (если не определено иное, далее — буксировка) — на буксируемом механическом транспортном средстве;
51.5. остановки, стоянки транспортного средства в темное время суток на неосвещенных участках дороги (кроме жилых зон) и (или) при недостаточной видимости дороги при неисправных габаритных и стояночных огнях;
51.6. движения на транспортном средстве с технической неисправностью, указанной в приложении 4 к настоящим Правилам, если движение не запрещено настоящими Правилами;
51.7. предупреждения участников дорожного движения об опасности для движения;
51.8. посадки (высадки) групп детей в перевозящие их автобусы — на автобусах;
51.9. приближения трамвая к зоне остановочного пункта трамвая, обозначенной дорожными знаками «Остановочный пункт трамвая», «Место остановки трамвая» и (или) горизонтальной дорожной разметкой 1.17.2, и во время нахождения его в этой зоне — на трамваях. На трамваях, не оборудованных аварийной световой сигнализацией, должен быть включен световой указатель правого поворота.
52. Аварийную световую сигнализацию рекомендуется включать в случае движения транспортного средства задним ходом.
53. После включения аварийной световой сигнализации, а также при ее отсутствии или неисправности должен быть незамедлительно выставлен знак аварийной остановки (в темное время суток в дополнение к знаку аварийной остановки может быть выставлен фонарь с мигающим красным светом):
53.1. при дорожно-транспортном происшествии;
53.2. при вынужденной остановке транспортного средства на проезжей части дороги и в местах, где остановка запрещена, за исключением прекращения движения транспортного средства в связи со скоплением остановившихся на проезжей части дороги других транспортных средств (далее — затор);
53.3. в случае остановки, стоянки транспортного средства в темное время суток на неосвещенных участках дороги (кроме жилых зон) и (или) при недостаточной видимости дороги при неисправных габаритных и стояночных огнях.
54. Знак аварийной остановки и фонарь с мигающим красным светом устанавливаются на расстоянии, обеспечивающем в конкретной дорожно-транспортной обстановке своевременное предупреждение других водителей об опасности, но не менее 15 метров от транспортного средства в населенных пунктах и не менее 40 метров — вне населенных пунктов.
55. При отсутствии или неисправности аварийной световой сигнализации на буксируемом механическом транспортном средстве или транспортном средстве, движущемся с технической неисправностью, на его задней части слева должен быть закреплен знак аварийной остановки.
ГЛАВА 9
МАНЕВРИРОВАНИЕ
56. Перед началом движения, перестроением, выездом на трамвайные пути попутного направления, съездом с них, поворотом налево или направо, разворотом, выездом на проезжую часть дороги, съездом с нее и остановкой водитель обязан убедиться, что его действия будут безопасны и не создадут препятствия и опасности для дорожного движения, подать сигнал световыми указателями поворота соответствующего направления, а если они отсутствуют или неисправны либо включена аварийная световая сигнализация — рукой. При этом:

56.1. сигналу левого светового указателя поворота соответствует левая рука, вытянутая в сторону, или правая рука, вытянутая в сторону и согнутая в локте под прямым углом вверх;
56.2. сигналу правого светового указателя поворота соответствует правая рука, вытянутая в сторону, или левая рука, вытянутая в сторону и согнутая в локте под прямым углом вверх;
56.3. сигнал торможения подается поднятой вверх левой или правой рукой. Указанный сигнал используется также в случае торможения без намерения осуществить маневр.

57. Подача сигнала световыми указателями поворота или рукой должна производиться до начала маневрирования (за исключением случаев движения задним ходом) таким образом, чтобы другие участники дорожного движения имели возможность безопасного продолжения движения, и прекращаться немедленно после завершения маневрирования (подача сигнала рукой может быть закончена непосредственно перед маневрированием). При этом:

57.1. подача сигнала не дает водителю преимущества;
57.2. сигнал не должен подаваться, если он может ввести в заблуждение других участников дорожного движения.
571. При въезде на перекресток, где организовано круговое движение, подача сигнала световыми указателями поворота не производится.

58. После остановки или стоянки водитель транспортного средства, начинающего движение, обязан уступить дорогу движущимся транспортным средствам, кроме случая, предусмотренного пунктом 125 настоящих Правил.
При съезде с проезжей части дороги водитель обязан уступить дорогу всадникам и велосипедистам, а также предоставить преимущество пешеходам, путь движения которых он пересекает.

59. При перестроении, выезде на трамвайные пути, съезде с них водитель должен уступить дорогу транспортным средствам, движущимся попутно, без изменения их направления движения.
При одновременном перестроении транспортных средств, движущихся попутно, водитель должен уступить дорогу транспортному средству, находящемуся справа. Этим правилом должен руководствоваться водитель, транспортное средство которого съезжает с трамвайных путей.

60. Перестроение транспортных средств на перекрестке запрещается, кроме перекрестка, на котором организовано круговое движение.

61. Перестраиваться на соседнюю полосу движения на дороге с двумя и более полосами движения в одном направлении, обозначенными горизонтальной дорожной разметкой, когда эти полосы равномерно заняты движущимися транспортными средствами, разрешается только для поворота налево или направо, разворота, остановки или объезда препятствия.

62. Если на дороге, имеющей две и более полосы движения в одном направлении, из-за препятствия на одной из них образовался затор, водитель каждого транспортного средства, движущегося по соседней полосе движения, должен дать возможность перестроиться на его полосу одному из стоящих в заторе транспортных средств.

63. Перед разворотом, поворотом налево или направо водитель обязан, не создавая препятствия и опасности для движения других участников дорожного движения, занять соответствующее крайнее положение на проезжей части дороги, предназначенной для движения в данном направлении, кроме случаев, когда поворот при въезде на перекресток и выезде с него совершается в тех местах, где организовано круговое движение, а также в местах, где направление движения по проезжей части дороги (перекрестку) определено дорожными знаками и (или) горизонтальной дорожной разметкой.

64. При наличии трамвайных путей попутного направления, расположенных слева на одном уровне с проезжей частью дороги:

64.1. поворот налево или разворот должен выполняться с этих путей, если дорожными знаками «Направления движения по полосам», «Направление движения по полосе» не предписан иной порядок движения;
64.2. если выезд на трамвайные пути создаст препятствие для движения трамвая, других транспортных средств, водитель должен остаться на занимаемой полосе движения, не выезжая на трамвайные пути, в ожидании проезда указанных транспортных средств;
64.3. в случае создания препятствия для движения трамвая трамвайный путь по возможности должен быть освобожден. Водители транспортных средств, движущихся рядом в попутном направлении, должны предоставить возможность для этого.

65. Поворот налево или направо должен осуществляться таким образом, чтобы при выезде с пересечения проезжих частей дорог транспортное средство не оказалось на встречной полосе движения:

65.1. при повороте налево транспортное средство должно двигаться как можно ближе к центру перекрестка, если дорожными знаками (горизонтальной дорожной разметкой) не предписан иной порядок движения, при этом поворачивающее налево встречное транспортное средство должно находиться справа;
65.2. при повороте направо транспортное средство должно двигаться ближе к правому краю проезжей части дороги, если дорожными знаками (горизонтальной дорожной разметкой) не предписан иной порядок движения.

66. Если транспортное средство из-за своих габаритов либо по другим причинам не может выполнить разворот, поворот налево или направо с соблюдением требований пунктов 63, 65 и 77 настоящих Правил, допускается производить его с отступлением от этих требований, если это не создаст препятствия для движения других участников дорожного движения.

67. Перед поворотом налево или разворотом вне перекрестка водитель транспортного средства обязан уступить дорогу встречным транспортным средствам и попутному трамваю.

68. Если для разворота вне перекрестка ширина проезжей части дороги недостаточна для его выполнения из крайнего левого положения, разворот допускается производить от правого края проезжей части дороги или с правой по ходу движения обочины. При этом водитель должен уступить дорогу попутным и встречным транспортным средствам.

69. В случаях, когда траектории движения транспортных средств пересекаются, а очередность проезда не оговорена настоящими Правилами, дорогу обязан уступить водитель, к которому транспортное средство приближается справа.

70. При наличии полосы торможения водитель, намеревающийся повернуть, должен своевременно перестроиться на эту полосу и снижать скорость движения только на ней.

71. При наличии в месте въезда на дорогу полосы разгона водитель должен двигаться по ней и перестраиваться на соседнюю полосу движения, уступая дорогу транспортным средствам, движущимся по этой дороге.

72. Разворот запрещается:
72.1. на пешеходных переходах и ближе 15 метров от них с обеих сторон, кроме случая разрешенного разворота на перекрестке;
72.2. в местах, где видимость дороги хотя бы в одном направлении движения менее 100 метров;
72.3. на остановочных пунктах маршрутных транспортных средств;
72.4. на путепроводах и под ними;
72.5. на железнодорожных переездах.

73. Движение транспортного средства задним ходом разрешается при условии, если эти действия не создадут препятствия для других участников дорожного движения и будет обеспечена безопасность дорожного движения. При необходимости водитель должен прибегнуть к помощи других лиц, которые сигнализировали бы о складывающейся ситуации позади транспортного средства.

74. Движение задним ходом запрещается на перекрестках (кроме перекрестков, расположенных в жилых зонах) и в местах, где запрещен разворот согласно пункту 72 настоящих Правил.

ГЛАВА 10
РАСПОЛОЖЕНИЕ ТРАНСПОРТНЫХ СРЕДСТВ НА ПРОЕЗЖЕЙ ЧАСТИ ДОРОГИ
75. Количество полос движения для транспортных средств (за исключением трамваев и одноколейных транспортных средств) определяется дорожными знаками «Направления движения по полосам», «Направление движения по полосе», «Направление движения по полосам» и (или) горизонтальной дорожной разметкой, а если их нет, то самими водителями с учетом ширины проезжей части дороги, габаритов транспортных средств и необходимых боковых интервалов между ними.
При отсутствии дорожных знаков и горизонтальной дорожной разметки половина ширины проезжей части дороги, расположенная слева, считается ее встречной стороной. На дороге с односторонним движением половина ширины проезжей части дороги, расположенная слева, считается левой стороной проезжей части.

76. На дороге с двусторонним движением при наличии в направлении движения двух и более полос движения запрещается выезжать на встречную полосу движения.

77. Исключен.

78. Если дорожными знаками запрещено движение велосипедистов, всадников и гужевых транспортных средств, водители транспортных средств должны вести их по возможности ближе к правому краю проезжей части дороги (линии горизонтальной дорожной разметки 1.2, обозначающей край проезжей части дороги).
Если такое запрещение отсутствует, то водители должны вести транспортное средство по возможности ближе к левому краю в пределах правой крайней полосы движения.

79. При движении перестраиваться на другую полосу движения можно только перед обгоном, опережением, объездом препятствия, поворотом налево или направо, разворотом либо остановкой. При этом:

79.1. вне населенных пунктов запрещается занимать левые полосы движения при свободных правых;
79.2. при трех и более полосах движения в данном направлении занимать крайнюю левую полосу движения разрешается только тогда, когда заняты другие полосы движения, либо для опережения, объезда препятствия, поворота налево или разворота, а также для остановки, стоянки на левой стороне дороги с односторонним движением в случае, указанном в подпункте 138.3 пункта 138 настоящих Правил;
79.3. при трех и более полосах движения в данном направлении запрещается производить перестроение на крайнюю правую полосу движения в целях опережения по ней;
79.4. грузовые автомобили с технически допустимой общей массой более 3,5 тонны, колесные тракторы и самоходные машины могут перестраиваться в другие полосы движения левее второй полосы только для объезда препятствия, поворота налево или разворота, а также для остановки, стоянки на левой стороне дороги с односторонним движением в случае, указанном в подпункте 138.3 пункта 138 настоящих Правил;
79.5. в населенных пунктах маршрутные транспортные средства, выполняющие городские перевозки в регулярном сообщении, должны двигаться по выделенной для них полосе движения, а при ее отсутствии — по крайней правой полосе движения. Перестраиваться на другие полосы движения можно только для объезда препятствия, поворота налево или разворота. Маршрутным транспортным средствам, выполняющим городские перевозки в регулярном сообщении, разрешается опережение транспортных средств, движущихся по крайней правой полосе движения со скоростью менее 40 км/ч, по второй справа полосе движения;
79.6. в случае возникновения затора, препятствующего движению транспортных средств оперативного назначения, водители должны обеспечить «коридор безопасности», по которому разрешается проезд только указанных транспортных средств. Для этого транспортные средства, находящиеся в крайней левой полосе движения, должны занять в этой полосе крайнее правое положение.

80. Транспортные средства, скорость движения которых не должна превышать 40 км/ч или которые по техническим причинам не могут развивать более высокую скорость движения по сравнению с указанной, должны двигаться по крайней правой полосе движения, кроме случаев обгона, опережения, объезда препятствия либо перестроения перед поворотом или разворотом.

81. Движение по трамвайным путям попутного направления, расположенным слева на одном уровне с проезжей частью дороги, разрешается только для опережения (вне обозначенных и регулируемых перекрестков), объезда препятствия при условии, что все полосы движения в данном направлении заняты, а также для поворота налево или разворота в соответствии с пунктом 64 настоящих Правил. При этом запрещается выезжать на трамвайные пути встречного направления и осуществлять движение по ним, а также движение по трамвайным путям попутного направления при наличии конструктивно выделенной над проезжей частью дороги посадочной площадки, с которой осуществляется посадка (высадка) пассажиров в трамвай.

82. На дороге, проезжая часть которой разделена на полосы движения линиями горизонтальной дорожной разметки, движение транспортных средств должно осуществляться строго по этим полосам. Наезжать на прерывистые линии горизонтальной дорожной разметки разрешается только при маневрировании.

83. При повороте на дорогу с реверсивным движением водитель должен управлять транспортным средством таким образом, чтобы при выезде с пересечения проезжих частей дорог транспортное средство заняло крайнюю правую полосу движения. Перестроение можно производить только после того, как водитель убедится, что движение в данном направлении разрешается и по другим полосам движения.

84. Запрещается движение транспортных средств по обочинам, тротуарам, велосипедным, пешеходным дорожкам и дорожкам для всадников, за исключением случаев, указанных в части второй пункта 26, пунктах 68, 138, 148, 152 и подпункте 160.2 пункта 160 настоящих Правил. Допускается движение по указанным элементам дороги транспортных средств дорожно-эксплуатационной и коммунальной служб, автомобилей с наклонной белой полосой на бортах, а также других транспортных средств, обслуживающих торговые и другие организации, расположенные непосредственно у обочин, тротуаров, велосипедных, пешеходных дорожек, дорожек для всадников или пешеходных зон, при отсутствии других возможностей подъезда. При этом должна быть обеспечена безопасность дорожного движения.

85. Водитель обязан соблюдать такую дистанцию до движущегося впереди транспортного средства, которая позволила бы избежать столкновения в случае его экстренного торможения или остановки, и необходимый боковой интервал, обеспечивающий безопасность дорожного движения с транспортными средствами или участниками дорожного движения, стоящими или движущимися по дороге, а также с техническими средствами организации дорожного движения и иными объектами.

86. На дороге вне населенного пункта водитель транспортного средства длиной более 10 метров или скорость движения которого не должна превышать 40 км/ч, либо которое по техническим причинам не может развивать более высокую скорость движения по сравнению с указанной, обязан поддерживать между управляемым им транспортным средством и движущимся впереди транспортным средством дистанцию, позволяющую обгоняющим их транспортным средствам беспрепятственно перестроиться на ранее занимаемую полосу движения.
Это правило не действует в случаях, когда водители указанных транспортных средств совершают обгон или готовятся к нему, а также при движении в колонне из трех и более транспортных средств, обозначенных опознавательными знаками «Колонна», и в организованной транспортной колонне.

ГЛАВА 11
СКОРОСТЬ ДВИЖЕНИЯ ТРАНСПОРТНЫХ СРЕДСТВ
87. При выборе скорости движения водитель должен учитывать ограничения скорости, установленные пунктами 88, 89 настоящих Правил и техническими средствами организации дорожного движения, а также интенсивность движения, обзорность дороги, особенности и состояние транспортного средства и перевозимого им груза, дорожные, погодные (метеорологические) условия и другие факторы, снижающие прозрачность атмосферы и влияющие на видимость дороги в направлении движения. При этом:

87.1. в темное время суток и (или) при недостаточной видимости дороги скорость движения должна позволять водителю остановить транспортное средство в пределах видимости дороги в направлении движения;
87.2. при возникновении препятствия или опасности для движения, которые водитель в состоянии обнаружить, он обязан немедленно принять меры к снижению скорости движения, вплоть до остановки транспортного средства.

88. В населенных пунктах разрешается движение транспортных средств со скоростью не более 60 км/ч, а буксирующим механические транспортные средства — не более 50 км/ч, в жилых и пешеходных зонах, на прилегающих территориях — не более 20 км/ч.

89. Вне населенных пунктов разрешается движение со скоростью:

89.1. легковым автомобилям и грузовым автомобилям с технически допустимой общей массой не более 3,5 тонны, мотоциклам на автомагистралях и дорогах для автомобилей — не более 120 км/ч, на остальных дорогах — не более 90 км/ч;
89.2. автобусам на автомагистралях и дорогах для автомобилей — не более 100 км/ч, на остальных дорогах — не более 90 км/ч;
89.3. автобусам, легковым и грузовым автомобилям при их движении с прицепом, грузовым автомобилям с технически допустимой общей массой более 3,5 тонны на автомагистралях — не более 90 км/ч, на остальных дорогах — не более 70 км/ч;
89.4. механическим транспортным средствам, управляемым водителями с водительским стажем до двух лет, а также при обучении управлению механическим транспортным средством, когда транспортным средством управляет обучаемый управлению, — не более 70 км/ч;
89.5. грузовым автомобилям, перевозящим пассажиров в кузове, — не более 60 км/ч;
89.6. транспортным средствам, буксирующим механические транспортные средства, — не более 50 км/ч;
89.7. транспортным средствам, перевозящим опасные грузы, тяжеловесным и (или) крупногабаритным транспортным средствам — со скоростью, не превышающей скорость движения, установленную при согласовании условий перевозки.

90. С учетом дорожных условий и обеспечения безопасности дорожного движения разрешенная пунктами 88 и 89 настоящих Правил скорость движения может быть изменена (понижена или повышена) применением дорожных знаков «Ограничение максимальной скорости».
Действие дорожных знаков «Ограничение максимальной скорости» не распространяется на указанные в пункте 88 настоящих Правил транспортные средства, буксирующие механические транспортные средства, и на транспортные средства, перечисленные в подпунктах 89.4–89.7 пункта 89 настоящих Правил, если указанная на этих знаках величина скорости превышает ограничение максимальной скорости, установленной в данных положениях.

91. Водителю запрещается:

91.1. превышать максимальную скорость движения, определенную технической характеристикой транспортного средства;
91.2. превышать скорость движения, установленную дорожными знаками «Ограничение максимальной скорости», «Зона с ограничением максимальной скорости движения», в пунктах 88 и 89 настоящих Правил;
91.3. исключен;
91.4. создавать препятствие для дорожного движения, двигаясь без вынужденной необходимости с малой скоростью, а также двигаться с меньшей скоростью, чем установлено дорожным знаком «Ограничение минимальной скорости»;
91.5. резко тормозить, если это не требуется для предотвращения дорожно-транспортного происшествия.

ГЛАВА 12
ОБГОН, ВСТРЕЧНЫЙ РАЗЪЕЗД
92. До начала обгона водитель должен убедиться в том, что полоса движения, на которую он намерен выехать, свободна и своими действиями он не создаст угрозу безопасности дорожного движения, не заставит участников дорожного движения изменить направление и (или) снизить скорость движения.
93. Водителю запрещается выполнять обгон:
93.1. если водитель транспортного средства, движущегося впереди по той же полосе движения, подал сигнал левого поворота;
93.2. если следующие за ним водители начали обгон.
94. Объезд транспортного средства, водитель которого подал сигнал поворота налево и приступил к выполнению маневра, производится с правой стороны.
95. Водитель обгоняемого транспортного средства обязан с учетом дорожно-транспортной обстановки двигаться ближе к правому краю проезжей части дороги и не препятствовать обгону увеличением скорости движения или иными действиями.
96. Обгон запрещается:
96.1. в зоне действия дорожных знаков «Обгон запрещен», «Обгон грузовым автомобилям запрещен», на поворотах дороги, обозначенных дорожными знаками «Опасный поворот», «Опасные повороты», на подъемах, обозначенных дорожным знаком «Крутой подъем», а также при наличии дорожной разметки 1.1 (за исключением обгона одиночного транспортного средства, движущегося со скоростью менее 30 км/ч), в конце подъемов и на других участках дорог с ограниченной обзорностью дороги;
96.2. на обозначенных и (или) регулируемых перекрестках;
96.3. на пешеходных переходах и ближе 50 метров от них в обе стороны;
96.4. транспортного средства, производящего обгон или объезд препятствия;
96.5. при недостаточной видимости дороги;
96.6. на путепроводах и под ними;
96.7. на железнодорожных переездах и ближе чем за 100 метров перед ними.
97. Вне населенных пунктов водитель тихоходного, тяжеловесного и (или) крупногабаритного транспортного средства, а также транспортного средства, конструкция которого, перевозимый груз или техническое состояние затрудняют его обгон, должен занять положение на дороге как можно правее, а при необходимости и остановиться, чтобы пропустить скопившиеся за ним транспортные средства.
98. Если встречный разъезд транспортных средств затруднен, то водитель, на стороне которого имеется препятствие для дорожного движения, обязан уступить дорогу.
99. На уклонах, обозначенных дорожными знаками «Крутой спуск», «Крутой подъем», при наличии препятствия для дорожного движения уступить дорогу обязан водитель транспортного средства, движущегося на спуск.
ГЛАВА 13
ПРОЕЗД ПЕРЕКРЕСТКОВ
100. При повороте налево или направо водитель обязан предоставить преимущество пешеходам, переходящим (пересекающим) проезжую часть дороги, на которую он поворачивает, уступить дорогу велосипедистам, а также всадникам, пересекающим ее по дорожке для всадников.

101. Запрещается выезжать на перекресток, если образовался затор, который вынудит водителя остановиться.

102. Перекресток, на котором очередность движения определяется сигналами регулировщика или светофора, является регулируемым.
При желтом мигающем сигнале светофора, неработающих светофорах и отсутствии регулировщика перекресток является нерегулируемым и водители обязаны руководствоваться правилами проезда нерегулируемых перекрестков и дорожными знаками приоритета. Светофоры считаются неработающими, если отсутствуют сигналы одновременно во всех светофорах данного направления либо сигналы противоречат друг другу.

103. При повороте налево или развороте по зеленому сигналу светофора водитель транспортного средства, за исключением трамвая, обязан уступить дорогу встречным транспортным средствам, движущимся прямо или направо, и попутному трамваю. Таким же правилом должны руководствоваться между собой водители трамваев.

104. При движении в направлении стрелки, включенной в дополнительной секции одновременно с желтым или красным сигналом светофора, водитель обязан уступить дорогу транспортным средствам, движущимся с других направлений.
При включенной стрелке дополнительной секции светофора (одновременно с запрещающим сигналом) водитель, находящийся на крайней полосе проезжей части дороги, должен продолжать движение в направлении указанной стрелки, если его остановка создаст препятствие для движения транспортных средств, движущихся за ним по этой же полосе, если иной порядок движения не определен дорожными знаками «Направления движения по полосам», «Направление движения по полосе» или соответствующей горизонтальной дорожной разметкой.

При движении в направлении стрелки, включенной в дополнительной секции одновременно с зеленым сигналом светофора, водитель имеет преимущество перед транспортными средствами, движущимися с других направлений.

105. Если сигналы регулировщика или светофора разрешают движение одновременно трамваю и другим транспортным средствам, то трамвай имеет преимущество независимо от направления его движения. При движении по сигналу стрелки, включенной в дополнительной секции одновременно с красным или желтым сигналом светофора, водитель трамвая должен уступить дорогу транспортным средствам, движущимся с других направлений.

106. Водитель, въехавший на перекресток при разрешающем сигнале светофора, должен выехать в намеченном направлении независимо от сигнала светофора на выходе с перекрестка, при этом он обязан уступить дорогу встречным транспортным средствам, движущимся прямо или направо. Если на перекрестке перед светофорами, расположенными на пути следования водителя, имеется дорожный знак «Стоп-линия» (линия горизонтальной дорожной разметки 1.12), водитель обязан руководствоваться сигналами каждого светофора.

107. При включении разрешающего сигнала светофора водитель должен уступить дорогу транспортным средствам, завершающим движение через перекресток, и предоставить преимущество пешеходам, не закончившим переход проезжей части дороги.

108. На перекрестке неравнозначных дорог водитель транспортного средства, движущегося по второстепенной дороге, должен уступить дорогу транспортным средствам, приближающимся к нему по главной дороге, независимо от направления их дальнейшего движения.

109. В случае, когда главная дорога на перекрестке меняет направление, водители транспортных средств, движущихся по главной дороге, должны руководствоваться между собой правилами проезда перекрестков равнозначных дорог. Этими же правилами руководствуются водители транспортных средств, движущихся по второстепенной дороге.

110. На перекрестке равнозначных дорог водитель транспортного средства, кроме трамвая, обязан уступить дорогу транспортным средствам, приближающимся справа. Этим же правилом должны руководствоваться между собой водители трамваев. На таких перекрестках водитель трамвая имеет преимущество перед другими транспортными средствами (кроме трамваев) независимо от направления его движения.

111. При повороте налево или развороте водитель транспортного средства обязан уступить дорогу встречным транспортным средствам, движущимся по равнозначной дороге прямо или направо, и попутному трамваю. Этим же правилом должны руководствоваться между собой водители трамваев. При одновременном праве на движение водители трамваев имеют преимущество перед другими транспортными средствами (кроме трамваев) независимо от направления их движения.

112. Если водитель не может определить последовательность проезда перекрестка (из-за невозможности распознать наличие покрытия на проезжей части дороги (темное время суток, грязь, снег и прочее) либо по другим причинам), он должен действовать так, как если находится на второстепенной дороге.

113. На регулируемых перекрестках могут применяться информационные секции с бело-лунным мигающим сигналом на черном фоне или информационные таблички белого цвета с черными символами. Информационные секции или таблички могут размещаться под правой дополнительной секцией транспортных светофоров либо перед пешеходным переходом вместе с дорожными знаками «Пешеходный переход». Информационная секция или табличка не изменяет значения сигналов светофоров, требований дорожных знаков, настоящих Правил и дополнительно предупреждает водителей о необходимости предоставить преимущество пешеходам, уступить дорогу велосипедистам и водителям трамваев.

ГЛАВА 14
ПЕШЕХОДНЫЕ ПЕРЕХОДЫ И ОСТАНОВОЧНЫЕ ПУНКТЫ
МАРШРУТНЫХ ТРАНСПОРТНЫХ СРЕДСТВ
114. Пешеходный переход обозначается дорожными знаками «Пешеходный переход» и (или) горизонтальной дорожной разметкой 1.14.1–1.14.3.
Велосипедный переезд обозначается дорожными знаками «Велосипедный переезд» и (или) горизонтальной дорожной разметкой 1.15.

Дополнительно на пешеходном переходе и велосипедном переезде могут быть установлены иные технические средства организации дорожного движения.

При отсутствии на пешеходном переходе или велосипедном переезде горизонтальной дорожной разметки 1.14.1–1.14.3 или 1.15 соответственно их ширина определяется расстоянием между дорожными знаками «Пешеходный переход» или «Велосипедный переезд» соответственно.

115. Пешеходный переход и велосипедный переезд, на которых движение пешеходов и велосипедистов через проезжую часть дороги регулируется регулировщиком или светофором, называются регулируемыми.
На регулируемых пешеходном переходе и (или) велосипедном переезде при подаче разрешающего сигнала регулировщиком или включении разрешающего сигнала светофора водитель должен предоставить преимущество пешеходам, не закончившим переход проезжей части дороги, и уступить дорогу велосипедистам, завершающим пересечение проезжей части дороги.

116. При подъезде к нерегулируемым пешеходному переходу и (или) велосипедному переезду водитель должен предоставить преимущество пешеходу и уступить дорогу велосипедисту.

117. Если перед нерегулируемыми пешеходным переходом и (или) велосипедным переездом остановилось (стоит), замедлило движение или движется с меньшей скоростью транспортное средство, водители других транспортных средств, движущихся по соседним полосам движения в попутном направлении, должны снизить скорость движения и при наличии пешеходов и (или) велосипедистов предоставить им преимущество и уступить дорогу соответственно.

118. Водителю запрещается въезжать на пешеходный переход и (или) велосипедный переезд, если образовался затор, который вынудит его остановиться на пешеходном переходе и (или) велосипедном переезде.

119. Везде, в том числе и вне пешеходных переходов, водитель должен предоставить преимущество пешеходу — инвалиду по зрению, подающему сигнал тростью белого цвета либо тростью с покрытием повышенной видимости, в том числе со световозвращающим элементом (элементами). Водитель должен быть готов снизить скорость движения или остановиться, чтобы исключить вероятность наезда на таких участников дорожного движения, а также детей и пешеходов с видимыми нарушениями опорно-двигательного аппарата.

120. Водитель должен остановиться, предоставив преимущество пешеходам, идущим к стоящему на остановочном пункте маршрутному транспортному средству либо от него (со стороны дверей), если посадка (высадка) пассажиров производится с проезжей части дороги или с посадочной площадки, расположенной на ней. Начинать движение разрешается только после закрытия дверей маршрутного транспортного средства и выключения на нем аварийной световой сигнализации (светового указателя правого поворота).

121. Запрещается опережать движущийся трамвай, у которого включена аварийная световая сигнализация (световой указатель правого поворота), в зоне остановочного пункта трамвая, обозначенной дорожным знаком «Остановочный пункт трамвая» и (или) горизонтальной дорожной разметкой 1.17.2.

122. Приближаясь к стоящему транспортному средству с включенной аварийной световой сигнализацией и имеющему опознавательный знак «Перевозка детей», водитель должен снизить скорость движения, при необходимости остановиться и предоставить преимущество пешеходам.

ГЛАВА 15
ПРЕИМУЩЕСТВО МАРШРУТНЫХ ТРАНСПОРТНЫХ СРЕДСТВ
123. Вне перекрестков в местах, где трамвайные пути пересекают проезжую часть дороги, трамвай имеет преимущество перед другими транспортными средствами, кроме случаев выезда из депо и мест, где очередность движения определяется дорожными знаками приоритета или сигналами светофоров.

124. На дорогах с полосой движения для маршрутных транспортных средств, обозначенных дорожными знаками «Полоса для маршрутных транспортных средств», «Дорога с полосой для маршрутных транспортных средств», запрещаются движение, остановка и стоянка других транспортных средств на этой полосе, за исключением движения в данной полосе электромобилей.
Если полоса движения, обозначенная дорожным знаком «Полоса для маршрутных транспортных средств», отделена от остальной проезжей части дороги прерывистой линией горизонтальной дорожной разметки, то для осуществления поворота водитель обязан перестраиваться на нее. Разрешается также в таких местах заезжать на эту полосу для посадки (высадки) пассажиров у правого края проезжей части, если это не создаст препятствия для движения маршрутных транспортных средств.

125. В населенном пункте водитель транспортного средства, движущегося по крайней правой полосе, должен уступить дорогу маршрутному транспортному средству, начинающему движение от обозначенного остановочного пункта, при его перестроении на крайнюю правую полосу движения.

ГЛАВА 16
ЖЕЛЕЗНОДОРОЖНЫЕ ПЕРЕЕЗДЫ
126. Водители могут пересекать железнодорожные пути только по железнодорожным переездам, уступая дорогу железнодорожному транспортному средству.

127. При подъезде к железнодорожному переезду водитель обязан убедиться в отсутствии приближающегося железнодорожного транспортного средства и руководствоваться указаниями дежурного по железнодорожному переезду, требованиями светофоров, дорожных знаков, дорожной разметки, положением шлагбаума и звуковым сигналом.

128. Запрещается:

128.1. выезжать на железнодорожный переезд:
128.1.1. при закрытом или начинающем закрываться шлагбауме независимо от сигнала светофора;
128.1.2. при запрещающем сигнале светофора независимо от наличия и положения шлагбаума;
128.1.3. при запрещающем сигнале дежурного по железнодорожному переезду (дежурный обращен к водителю грудью или спиной с поднятым над головой фонарем, излучающим красный свет, или флажком красного цвета, либо с вытянутыми в стороны руками);
128.1.4. если за железнодорожным переездом образовался затор, который вынудит водителя остановиться на железнодорожном переезде;
128.1.5. если к железнодорожному переезду в пределах видимости приближается железнодорожное транспортное средство;
128.2. объезжать с выездом на встречную полосу движения стоящие перед железнодорожным переездом транспортные средства;
128.3. самовольно открывать шлагбаум;
128.4. провозить через железнодорожный переезд сельскохозяйственные, дорожные, строительные и другие машины и механизмы в положении, при котором они при транспортировке могут стать препятствием для дорожного движения, повредить покрытие дороги, железнодорожный путь, оборудование железнодорожного переезда, технические средства организации дорожного движения;
128.5. движение через железнодорожный переезд на электрифицированных участках транспортных средств, габаритные размеры которых с грузом или без груза превышают по высоте 4 метра от поверхности дороги, — без согласования с начальником дистанции электроснабжения организации Белорусской железной дороги;
128.6. движение через железнодорожный переезд тихоходных транспортных средств, скорость движения которых менее 8 км/ч, и саней-волокуш — без разрешения начальника дистанции пути железной дороги.

129. В случае, когда движение через железнодорожный переезд запрещено, водитель должен остановиться у дорожного знака «Движение без остановки запрещено» или «Стоп-линия» (линии горизонтальной дорожной разметки 1.12), при их отсутствии — перед светофором, при отсутствии светофора — не ближе 5 метров от шлагбаума, при отсутствии шлагбаума — у дорожного знака «Однопутная железная дорога» или «Многопутная железная дорога», при отсутствии технических средств организации дорожного движения — не ближе 10 метров до ближайшего рельса.

130. При вынужденной остановке транспортного средства на железнодорожном переезде водитель обязан включить аварийную световую сигнализацию, немедленно высадить пассажиров и принять меры для освобождения железнодорожного переезда.
Одновременно водитель должен при имеющейся возможности послать двух человек вдоль железнодорожных путей в обе стороны от переезда на 1 километр (если одного, то в сторону худшей видимости железнодорожного пути), объяснив им порядок подачи сигнала остановки машинисту приближающегося железнодорожного транспортного средства, а сам — оставаться возле транспортного средства и подавать сигналы общей тревоги (серии из одного длинного и трех коротких звуковых сигналов).

При появлении железнодорожного транспортного средства водитель (пассажир) обязан бежать ему навстречу, подавая сигнал остановки и соблюдая меры предосторожности. Сигналом остановки служит круговое движение руки (днем — с лоскутом яркой материи или каким-либо хорошо видимым предметом, ночью — с фонарем или факелом).

ГЛАВА 17
ДВИЖЕНИЕ ПО АВТОМАГИСТРАЛИ
131. Автомагистраль обозначается дорожным знаком «Автомагистраль». На автомагистралях запрещается:
131.1. движение пешеходов, гужевых транспортных средств, всадников, погонщиков скота, движение на велосипедах, мопедах, колесных тракторах, самоходных машинах и транспортных средствах, которые по техническим причинам не могут развивать скорость движения более 40 км/ч;
131.2. остановка транспортных средств вне площадок для стоянки, обозначенных дорожными знаками «Место стоянки», «Место отдыха»;
131.3. разворот и въезд в разрывы разделительной полосы, за исключением мест, обозначенных дорожными знаками «Место для разворота», «Зона для разворота»;
131.4. движение задним ходом;
131.5. буксировка механического транспортного средства (при его эвакуации необходимо покинуть автомагистраль на ближайшем съезде с нее);
131.6. обучение управлению механическим транспортным средством.
132. Требования настоящих Правил, установленные для движения по автомагистрали, распространяются также на дороги, обозначенные дорожным знаком «Дорога для автомобилей».
ГЛАВА 18
ДВИЖЕНИЕ В ЖИЛОЙ И ПЕШЕХОДНОЙ ЗОНАХ,
НА ПРИЛЕГАЮЩЕЙ ТЕРРИТОРИИ
133. Движение транспортных средств в жилой и пешеходной зонах, на прилегающей территории допускается с учетом требований настоящей главы при условии принятия водителями всех мер по обеспечению безопасности пешеходов, велосипедистов, иных участников дорожного движения.
134. В пешеходной зоне допускается движение только транспортных средств дорожно-эксплуатационной и коммунальной служб, автомобилей с наклонной белой полосой на бортах, а также других транспортных средств, обслуживающих торговые и другие организации, расположенные в пешеходной зоне (граждан, проживающих в данной зоне), транспортных средств, принадлежащих гражданам, проживающим в этой зоне, при отсутствии иных возможностей их подъезда.
135. В жилой и пешеходной зонах, на прилегающей территории движение пешеходов, в том числе передвигающихся на средствах персональной мобильности, велосипедистов разрешается по тротуару, обочине и по проезжей части дороги. Пешеходы, велосипедисты имеют преимущество перед транспортными средствами, но не должны необоснованно препятствовать их движению.
136. При выезде из жилой и пешеходной зон, с прилегающей территории водители должны уступить дорогу транспортным средствам, велосипедистам, всадникам, предоставить преимущество пешеходам, путь движения которых они пересекают.
137. В жилой и пешеходной зонах, на прилегающей территории водителям механических транспортных средств запрещается:
137.1. движение со скоростью более 20 км/ч;
137.2. транзитное движение;
137.3. обучение управлению механическим транспортным средством;
137.4. стоянка механического транспортного средства с известной водителю неисправностью противоугонной звуковой сигнализации, произвольно подающей непрерывные звуковые сигналы;
137.5. стоянка грузовых автомобилей, автобусов, колесных тракторов и самоходных машин вне специально отведенных мест, обозначенных дорожным знаком «Место стоянки», если это не связано с выполнением ими работ.
ГЛАВА 19
ОСТАНОВКА И СТОЯНКА ТРАНСПОРТНЫХ СРЕДСТВ
138. Остановка и стоянка транспортных средств разрешаются:

138.1. в специально отведенном месте, обозначенном дорожным знаком «Место стоянки» («Место стоянки такси», «Место отдыха»);
138.2. на правой стороне дороги (вне населенных пунктов разрешается только остановка транспортных средств):

на обочине;
у правого края проезжей части дороги параллельно ему, за исключением тех мест, где с помощью дорожных знаков или дорожной разметки допускается иное расположение транспортных средств, — при отсутствии обочины или невозможности остановиться на ней;
138.3. на левой стороне дороги (вне населенных пунктов разрешается только остановка транспортных средств):
— на обочине дороги с односторонним движением;

у края проезжей части дороги с односторонним движением параллельно ему при наличии там тротуара, непосредственно прилегающего к нему, за исключением тех мест, где с помощью дорожных знаков или дорожной разметки допускается иное расположение транспортных средств, — при отсутствии обочины или невозможности остановиться на ней;
в местах и с соблюдением условий, указанных в абзацах втором и третьем настоящего подпункта, — в населенных пунктах на дороге с одной полосой движения для каждого направления без трамвайных путей посередине.
139. Транспортные средства разрешается ставить на стоянку с соблюдением требований дорожных знаков и горизонтальной дорожной разметки, а при их отсутствии — при условии рационального использования места стоянки, не создавая препятствия для доступа к находящимся на нем другим транспортным средствам и их последующего движения.140. Остановка на время более 5 минут и стоянка транспортного средства, в том числе в местах, специально отведенных для отдыха, должна осуществляться с неработающим двигателем транспортного средства.

141. При вынужденной остановке транспортного средства на проезжей части дороги и в местах, где остановка запрещена, водитель должен принять все возможные меры для выведения его за пределы проезжей части дороги.
Устранять возникшие технические неисправности транспортного средства по возможности необходимо вне проезжей части дороги. В случае устранения технических неисправностей транспортного средства на проезжей части дороги лица, выполняющие такие работы, должны находиться в одежде повышенной видимости со световозвращающими элементами.

142. Транспортные средства, за исключением велосипеда, мопеда, мотоцикла без бокового прицепа, толкать по проезжей части дороги запрещается (за исключением случая выведения их за пределы проезжей части дороги).

143. Остановка и стоянка транспортных средств запрещаются:

143.1. в зоне действия соответственно дорожных знаков «Остановка запрещена», «Стоянка запрещена», «Стоянка запрещена по нечетным числам месяца», «Стоянка запрещена по четным числам месяца» и (или) линий горизонтальной дорожной разметки 1.4, 1.10, а также в местах, предназначенных для стоянки транспортных средств с опознавательным знаком «Инвалид», за исключением транспортных средств с опознавательным знаком «Инвалид»;
143.2. в местах, где расстояние между сплошной линией горизонтальной дорожной разметки (кроме обозначающей край проезжей части дороги) и остановившимся транспортным средством составляет менее 3 метров;
143.3. на пешеходных переходах и ближе 15 метров от них на дороге в обе стороны;
143.4. на перекрестках и ближе 15 метров от края пересекаемой проезжей части дороги (кроме жилых зон), за исключением стороны напротив бокового проезда трехсторонних перекрестков, имеющих сплошную линию горизонтальной дорожной разметки или сплошную разделительную полосу;
143.5. на остановочных пунктах маршрутных транспортных средств и ближе 15 метров от них, кроме случаев остановки для посадки (высадки) пассажиров, если это не создаст препятствия для движения маршрутных транспортных средств;
143.6. на путепроводах и под ними, кроме специально оборудованных мест для стоянки;
143.7. на полосах разгона и торможения, съездах транспортных развязок в разных уровнях и въездах на них;
143.8. на железнодорожных переездах и ближе 50 метров от них в обе стороны;
143.9. на поворотах дороги, обозначенных дорожными знаками «Опасный поворот», «Опасные повороты», в других местах с ограниченной обзорностью дороги и где видимость дороги менее 100 метров хотя бы в одном направлении движения;
143.10. на проезжей части двухполосной дороги напротив стоящего на противоположной стороне дороги транспортного средства;
143.11. на левой стороне дороги, за исключением случаев, указанных в подпункте 138.3 пункта 138 настоящих Правил;
143.12. на трамвайных путях и в непосредственной близости от них, если это создаст препятствие для движения трамваев;
143.13. в местах, где транспортное средство закроет от других водителей сигналы светофора, дорожные знаки или другие технические средства организации дорожного движения;
143.14. на тротуарах, кроме специально отведенных мест, обозначенных дорожным знаком «Место стоянки» («Место стоянки такси»). Допускается остановка транспортных средств дорожно-эксплуатационной и коммунальной служб, автомобилей с наклонной белой полосой на бортах, а также других транспортных средств, обслуживающих торговые и другие организации, расположенные непосредственно у тротуаров, на время выполнения работ либо загрузки (разгрузки) транспортного средства при условии обеспечения безопасности дорожного движения;
143.15. на газонах и других участках с зелеными насаждениями;
143.16. исключен;
143.17. в местах, где стоящее транспортное средство создаст препятствие для движения, работы транспортных средств оперативного назначения и транспортных средств дорожно-эксплуатационной и коммунальной служб (въезды во дворы и выезды из них, проезды в арках, узкие местные проезды, места размещения контейнеров для сбора бытовых отходов и др.);
143.18. исключен.

144. Включение водителем аварийной световой сигнализации при преднамеренной остановке и стоянке в местах, где они запрещены, не освобождает его от ответственности за нарушение требований пункта 143 настоящих Правил.

145. Стоянка запрещается:

145.1. вне населенных пунктов транспортных средств на проезжей части дороги и на обочине;
145.2. транспортных средств с технически допустимой общей массой свыше 3,5 тонны вне специально отведенных мест, обозначенных дорожным знаком «Место стоянки» («Место отдыха»);
145.3. на проездах во дворах со стороны, прилегающей к жилой застройке;
145.4. ближе 10 метров от служебных дверей магазинов, через которые производятся погрузочно-разгрузочные работы, закрытых ворот, в том числе ворот гаражей;
145.5. в местах, оборудованных станциями для зарядки электромобилей.

146. Запрещается открывать (закрывать) двери транспортного средства или держать их открытыми, если это создаст препятствие для движения других участников дорожного движения.

147. При нарушении водителями правил остановки или стоянки транспортных средств, в результате которого создано препятствие для дорожного движения или возникла угроза безопасности граждан, а также в случае остановки или стоянки транспортного средства без установленного на нем опознавательного знака «Инвалид» на месте, отведенном для стоянки транспортных средств инвалидов, либо стоянки транспортного средства на месте, предназначенном для зарядки электромобилей, сотрудники ГАИ вправе произвести принудительную отбуксировку (эвакуацию) таких транспортных средств в порядке, установленном законодательными актами и принятыми в целях их реализации постановлениями Совета Министров Республики Беларусь.
При нарушении водителями правил остановки или стоянки грузовых автомобилей, автобусов, колесных тракторов, самоходных машин сотрудниками ГАИ может быть произведена блокировка колес этих транспортных средств в порядке, установленном законодательными актами и принятыми в целях их реализации постановлениями Совета Министров Республики Беларусь.

ГЛАВА 20
ДВИЖЕНИЕ НА ВЕЛОСИПЕДАХ И МОПЕДАХ
148. Движение на велосипеде должно осуществляться по велосипедной дорожке, а при ее отсутствии — по обочине, тротуару или пешеходной дорожке, не создавая препятствия для безопасного движения пешеходов. При отсутствии указанных элементов дороги или невозможности движения по ним допускается движение велосипедистов по проезжей части дороги в один ряд не далее 1 метра от ее правого края. При этом:

148.1. выезд далее 1 метра от правого края проезжей части дороги допускается лишь для объезда препятствия и в разрешенных случаях для поворота налево или разворота;
148.2. колонны велосипедистов при движении по проезжей части дороги должны быть разделены на группы не более чем по 10 велосипедистов. Расстояние между группами должно составлять не менее 100 метров;
148.3. при наличии на проезжей части дороги линии горизонтальной дорожной разметки 1.2, обозначающей ее край, эта линия должна располагаться слева от велосипедиста.
1481. Движение велосипедистов по проезжей части вне зависимости от наличия велосипедной дорожки, обочины, тротуара или пешеходной дорожки может осуществляться:

в зоне с ограничением максимальной скорости движения не далее 1 метра от ее правого края в один ряд;
в ходе учебно-тренировочного процесса в случае сопровождения автомобилем прикрытия. При этом движение велосипедистов допускается в два ряда, но не более 10 велосипедистов в группе.
149. При движении по дороге в темное время суток и (или) при ее недостаточной видимости на велосипеде или мопеде должны быть включены: спереди — фара (фонарь), излучающая белый свет, сзади — фонарь, излучающий красный свет. При этом вне населенных пунктов велосипедист должен быть одет в одежду повышенной видимости со световозвращающими элементами (за исключением движения по велосипедной дорожке).

150. Велосипедист обязан пересекать проезжую часть дороги по велосипедному переезду или велосипедной дорожке, а при их отсутствии — по пешеходному переходу, на перекрестке по линии тротуаров или обочин, не создавая препятствий для движения пешеходов. При пересечении проезжей части дороги велосипедист вправе не спешиваться.
При движении на нерегулируемых пешеходных переходах, велосипедных переездах и регулируемых пешеходных переходах, велосипедных переездах при одновременном для водителей и велосипедистов разрешающем сигнале регулировщика или светофора велосипедист имеет преимущество перед другими транспортными средствами.

В случае пересечения проезжей части дороги на перекрестке по велосипедной дорожке, по линии тротуаров или обочин велосипедист обязан руководствоваться требованиями транспортных светофоров или регулировщика для транспортных средств, а на нерегулируемом перекрестке — правилами проезда нерегулируемых перекрестков и дорожными знаками приоритета.

151. При подъезде к пересечению с проезжей частью дороги велосипедист должен заблаговременно снизить скорость движения и, убедившись, что выезд на проезжую часть дороги безопасен, пересекать ее со скоростью идущего шагом пешехода.

152. Движение на мопеде должно осуществляться по проезжей части дороги не далее 1 метра от ее правого края. При этом выезд далее 1 метра от ее правого края допускается лишь для объезда препятствия и в разрешенных случаях для поворота налево или разворота, а также в случаях, когда полоса движения предназначена только для поворота направо.

153. Велосипедисту и водителю мопеда запрещается:

153.1. использовать технически неисправные велосипеды и мопеды, а также оборудованные с нарушением установленных требований;
153.2. исключен;
153.3. исключен;
153.4. двигаться по проезжей части дороги, обочине в условиях снегопада и (или) гололедицы;
153.5. перевозить пассажиров, за исключением случаев перевозки на велосипеде детей в возрасте до семи лет в велосипедном шлеме на дополнительном специально оборудованном сиденье, фиксирующем (предохраняющем) ноги ребенка, или когда перевозка пассажиров предусмотрена конструкцией мопеда;
153.6. перевозить грузы, которые выступают более чем на 0,5 метра по длине или ширине за габариты транспортного средства, а также грузы, мешающие управлению этим транспортным средством.

154. Водителю велосипеда запрещается:

не достигнув четырнадцати лет, управлять велосипедом на дороге без сопровождения совершеннолетнего лица (кроме пешеходных и жилых зон, тротуаров, велосипедных и пешеходных дорожек);
поворачивать налево или разворачиваться на дороге, имеющей трамвайный путь, и на дороге, имеющей более одной полосы для движения в данном направлении.
155. Водителю мопеда запрещается ездить по тротуарам, велосипедным и пешеходным дорожкам, дорожкам для всадников.

156. Запрещается буксировка велосипеда и велосипедом, за исключением велосипедного прицепа промышленного производства.

ГЛАВА 21
ДВИЖЕНИЕ ГУЖЕВЫХ ТРАНСПОРТНЫХ СРЕДСТВ,
ВСАДНИКОВ И ПРОГОН СКОТА
157. Водители гужевых транспортных средств, всадники и погонщики скота должны быть не моложе четырнадцати лет.
158. Водителям гужевых транспортных средств, всадникам и погонщикам скота запрещается:
158.1. водить животных по дорогам общего пользования с усовершенствованным покрытием вне населенных пунктов;
158.2. оставлять животных без присмотра на дороге, перегонять их через железнодорожные пути и дороги вне специально оборудованных мест, согласованных в установленном порядке, а также в темное время суток и (или) при недостаточной видимости дороги;
158.3. производить выпас животных в пределах полосы земли, на которой размещаются дорога и все ее сооружения.
159. При движении по дороге в темное время суток и (или) при ее недостаточной видимости на гужевом транспортном средстве спереди должен быть включен фонарь, излучающий белый свет, сзади — фонарь, излучающий красный свет.
160. Движение по проезжей части дороги на гужевых транспортных средствах и всадников разрешается только в один ряд на расстоянии не далее 1 метра от ее правого края. При этом:
160.1. запрещается поворачивать налево или разворачиваться на дороге, имеющей трамвайный путь, и на дороге, имеющей более одной полосы для движения в данном направлении;
160.2. допускается движение гужевых транспортных средств и всадников по обочине, если это не создает препятствия для безопасного движения пешеходов.
161. Водитель гужевого транспортного средства, всадник при выезде со второстепенной дороги на главную в темное время суток, при недостаточной видимости дороги или в местах с ее ограниченной обзорностью обязаны вести животное под уздцы.
ГЛАВА 22
ПОЛЬЗОВАНИЕ ВНЕШНИМИ СВЕТОВЫМИ ПРИБОРАМИ
И ЗВУКОВЫМИ СИГНАЛАМИ ТРАНСПОРТНЫХ СРЕДСТВ
162. При движении в темное время суток и (или) при недостаточной видимости дороги независимо от ее освещенности на транспортном средстве должны быть включены следующие световые приборы:
162.1. фары дальнего или ближнего света — на механическом транспортном средстве;
162.2. фары и (или) фонари — на велосипеде;
162.3. габаритные огни — на прицепе, а также на буксируемом механическом транспортном средстве при отсутствии или неисправности на нем аварийной световой сигнализации.
163. Дальний свет фар должен быть переключен на ближний:
163.1. в населенном пункте, если дорога освещена;
163.2. при встречном разъезде на расстоянии не менее 300 метров до транспортного средства, а также на большем расстоянии, если водитель встречного транспортного средства периодическим переключением света фар покажет необходимость этого;
163.3. если дальний свет фар будет освещать движущееся в попутном направлении транспортное средство или его водитель включением аварийной световой сигнализации покажет необходимость такого переключения;
163.4. в любых других случаях для исключения возможности ослепления водителей как встречных, так и попутных транспортных средств. При ослеплении водитель должен немедленно включить аварийную световую сигнализацию и, не перестраиваясь, снизить скорость движения и остановиться.
164. При остановке, стоянке в темное время суток на неосвещенных участках дороги и (или) при ее недостаточной видимости (кроме жилых зон) на транспортном средстве должны быть включены габаритные или стояночные огни.
165. Противотуманные фары на транспортном средстве могут использоваться водителем:
165.1. в темное время суток и (или) при недостаточной видимости дороги совместно с ближним или дальним светом фар;
165.2. вместо ближнего света фар в условиях, предусмотренных пунктами 166 и 167 настоящих Правил.
166. В светлое время суток для обозначения движущегося транспортного средства должны быть включены ближний свет фар или дневные ходовые огни (при их наличии):
166.1. на мотоцикле и мопеде;
166.2. при движении в транспортной колонне;
166.3. на маршрутном транспортном средстве, движущемся по специально выделенной полосе навстречу движению;
166.4. при организованной перевозке группы детей;
166.5. при перевозке опасных грузов, движении тяжеловесных и (или) крупногабаритных транспортных средств;
166.6. при буксировке (на буксирующем транспортном средстве);
166.7. во время обучения управлению механическим транспортным средством, сдачи квалификационного практического экзамена на право управления механическим транспортным средством на дорогах;
166.8. на механических транспортных средствах при организации временного их движения по встречной полосе движения;
166.9. ежегодно в периоды с 25 мая по 5 июня и с 25 августа по 5 сентября.
167. При ухудшении видимости транспортного средства на дороге для его обозначения во время движения в светлое время суток могут быть включены ближний свет фар или дневные ходовые огни (при их наличии).
168. Фарой-прожектором и фарой-искателем разрешается пользоваться только вне населенных пунктов при отсутствии встречных транспортных средств. В населенных пунктах пользоваться такими фарами могут только водители транспортных средств оперативного назначения при выполнении служебного задания.
169. Задние противотуманные фонари на транспортных средствах могут применяться только при недостаточной видимости дороги.
170. Опознавательный знак «Автопоезд» должен быть включен при движении автопоезда, а в темное время суток на неосвещенных участках дороги и (или) при ее недостаточной видимости, кроме того, — и на время его остановки или стоянки.
171. Маячок оранжевого цвета должен быть включен на:
171.1. транспортном средстве, самоходной машине при выполнении ремонтных и других работ на дороге;
171.2. транспортном средстве, перевозящем опасные грузы, тяжеловесном и (или) крупногабаритном транспортном средстве;
171.3. механическом транспортном средстве, осуществляющем сопровождение при перевозке тяжеловесных и (или) крупногабаритных грузов;
171.4. механическом транспортном средстве, специально предназначенном для транспортировки поврежденных и неисправных транспортных средств, при их погрузке, транспортировке и выгрузке;
171.5. механическом транспортном средстве, специально предназначенном для подвоза групп детей в учреждения образования, при посадке и высадке пассажиров;
171.6. самоходной машине, колесном тракторе при их движении по дороге;
171.7. механическом транспортном средстве, сопровождающем группы лиц, занимающихся физической культурой и спортом, при проведении спортивных и (или) спортивно-массовых мероприятий по велосипедному спорту и триатлону.
172. Звуковые сигналы могут применяться только для:
172.1. предупреждения других водителей о намерении произвести обгон вне населенных пунктов;
172.2. предотвращения дорожно-транспортного происшествия.
173. Для предупреждения об обгоне вместо звукового сигнала (или совместно с ним) может подаваться световой сигнал, который представляет собой в светлое время суток периодическое кратковременное включение и выключение света фар, а в темное время суток — периодическое переключение фар с ближнего света на дальний.
ГЛАВА 23
ПЕРЕВОЗКА ПАССАЖИРОВ
174. При перевозке пассажиров фактическая масса транспортного средства не должна превышать технически допустимую общую массу транспортного средства, установленную изготовителем.

175. Перевозка пассажиров в кузове грузового автомобиля должна осуществляться водителями, имеющими стаж управления механическим транспортным средством данной категории более трех лет и водительское удостоверение на право управления механическим транспортным средством категории «С», а при перевозке более 8 человек (включая пассажиров в кабине) — на право управления механическим транспортным средством категорий «С» и «D» (кроме перевозки пассажиров, осуществляемой в установленном порядке военнослужащими).

176. Перед поездкой водитель грузового автомобиля обязан проинструктировать пассажиров о порядке их посадки (размещения и высадки) в кузов, а также о правилах поведения во время движения.

177. Число перевозимых пассажиров в кузове грузового автомобиля с бортовой платформой, в кузове-фургоне не должно превышать количества мест, оборудованных для сидения.
Проезд в кузове грузового автомобиля с бортовой платформой или в кузове-фургоне, не оборудованных для перевозки пассажиров, разрешается только лицам, следующим за получением груза или сопровождающим его, при условии, что они обеспечены местами для сидения, расположенными ниже уровня бортов.

178. Перевозка детей в легковом автомобиле, оборудованном ремнями безопасности, должна осуществляться с использованием:
детских удерживающих устройств, соответствующих весу и росту ребенка, – в возрасте до пяти лет;

детских удерживающих устройств, соответствующих весу и росту ребенка, иных средств (бустеров, специальных подушек для сидения, дополнительных сидений), позволяющих безопасно пристегнуть ребенка с помощью ремней безопасности, предусмотренных конструкцией транспортного средства, – в возрасте от пяти до двенадцати лет.

Допускается перевозить детей в возрасте до двенадцати лет без использования указанных в части первой настоящего пункта устройств в случае, если рост ребенка превышает 150 сантиметров, а также в автомобиле-такси.

Запрещается перевозка детей на переднем сиденье легкового автомобиля с использованием детских удерживающих устройств, соответствующих весу и росту ребенка, спинка которых развернута к лобовому стеклу транспортного средства, если переднее сиденье имеет подушку безопасности, за исключением случая, когда механизм фронтальной подушки безопасности отключен.

179. При перевозке групп детей в автобусе каждый ребенок должен быть обеспечен отдельным посадочным местом, а в салоне должно находиться не менее одного совершеннолетнего сопровождающего на двадцать детей. На автобусе спереди и сзади устанавливается опознавательный знак «Перевозка детей».

180. Водитель транспортного средства обязан осуществлять посадку (высадку) пассажиров только после полной остановки транспортного средства, а начинать движение — только с закрытыми дверями и не открывать их до полной остановки. При этом водитель маршрутного транспортного средства для посадки (высадки) пассажиров обязан останавливаться только на обозначенных остановочных пунктах.

181. Запрещается перевозить:

181.1. пассажиров с нарушением требований, изложенных в пунктах 174–180 настоящих Правил, и других требований, установленных настоящими Правилами в отношении перевозки пассажиров;
181.2. пассажиров вне салона (кабины) автомобиля (кроме случаев перевозки пассажиров в кузове грузового автомобиля с бортовой платформой или в кузове-фургоне), кабины колесного трактора, самоходной машины, на прицепе (за исключением бокового прицепа к мотоциклу), в кузове грузового мотоцикла и вне предусмотренных конструкцией мотоцикла мест для сидения;
181.3. пассажиров сверх количества, предусмотренного технической характеристикой транспортного средства;
181.4. пассажиров на учебном механическом транспортном средстве, управляемом лицом, обучаемым управлению механическим транспортным средством, за исключением случаев проведения администрацией учебной организации контроля за обучением управлению механическим транспортным средством (прием тематических контролей и практических экзаменов в учебной организации в соответствии с едиными программами подготовки водителей), приема квалификационного практического экзамена на право управления механическим транспортным средством;
181.5. детей до двенадцати лет на мотоцикле, мопеде;
181.6. детей на коленях у водителя, у пассажира на переднем сиденье легкового, грузового автомобилей в случаях, когда такая перевозка допускается без применения устройств и средств, указанных в части первой пункта 178 настоящих Правил;
181.7. детей в кузове грузового автомобиля с бортовой платформой и в кузове-фургоне;
181.8. пассажира, находящегося в состоянии алкогольного опьянения либо в состоянии, вызванном потреблением наркотических средств, психотропных веществ, их аналогов, токсических или других одурманивающих веществ, на мопеде, мотоцикле (кроме бокового прицепа к мотоциклу).

ГЛАВА 24
ПЕРЕВОЗКА ГРУЗОВ
182. Масса перевозимого груза и распределение нагрузки по осям не должны превышать величин, установленных изготовителем для данного транспортного средства.

183. Перед началом движения и в пути следования водитель обязан при наличии объективной возможности контролировать размещение, крепление и состояние груза во избежание его смещения и падения. Если размещение, крепление, состояние груза создают угрозу безопасности дорожного движения, водитель должен принять меры к устранению возникшей опасности либо прекратить дальнейшее движение.

184. Перевозка груза запрещается, если он:

184.1. создает угрозу безопасности дорожного движения;
184.2. ограничивает водителю обзорность дороги;
184.3. затрудняет управление транспортным средством, нарушает его устойчивость;
184.4. закрывает внешние световые приборы и световозвращатели, регистрационные, временные номерные и опознавательные знаки транспортных средств, а также препятствует восприятию сигналов, подаваемых рукой при неисправных (отсутствующих) световых указателях поворотов;
184.5. создает шум, пылит, загрязняет дорогу и окружающую среду.

185. Груз, выступающий за габариты транспортного средства спереди или сзади более чем на 1 метр или сбоку более чем на 0,4 метра от внешнего края габаритного огня, должен быть обозначен опознавательными знаками «Крупногабаритный груз», а в темное время суток и (или) при недостаточной видимости дороги, кроме того, спереди — фонарем, излучающим белый свет, сзади — фонарем, излучающим красный свет.

186. В соответствии со специальными разрешением на проезд тяжеловесных и (или) крупногабаритных транспортных средств по автомобильным дорогам общего пользования и правилами осуществляется движение тяжеловесного транспортного средства и транспортного средства, габаритные размеры которого с грузом или без груза превышают хотя бы один из следующих показателей*:
________________
* Данные требования не распространяются на тяжеловесные и (или) крупногабаритные транспортные средства, въезжающие (въехавшие) на территорию Республики Беларусь через таможенную границу Евразийского экономического союза в Республике Беларусь и превышающие допустимую общую массу и (или) допустимую осевую массу (сумму осевых масс) до 10 процентов включительно, или в иных случаях, предусмотренных законодательством.

186.1. по высоте — 4 метра от поверхности дороги;
186.2. по длине:
186.2.1. 12 метров для автомобиля, троллейбуса, прицепа;
186.2.2. 13,5 метра для автобуса с двумя осями, 15 метров для автобуса с более чем двумя осями;
186.2.3. 18,75 метра для сочлененного автобуса, сочлененного троллейбуса;
186.2.4. 20 метров для автопоезда;
186.2.5. 24 метра для комбинированного транспортного средства;
186.3. по ширине:
186.3.1. 2,6 метра для транспортных средств с изотермическим кузовом, автомобиля-самосвала МАЗ-6501, автопоезда в составе автомобиля-самосвала МАЗ-6501 и прицепа-самосвала МАЗ-8561;
186.3.2. 2,75 метра для автомобилей КрАЗ, МАЗ-509А, МАЗ-543, МАЗ-5316, МАЗ-6317, МАЗ-6425, МЗКТ-6906 и их модификаций;
186.3.3. 2,55 метра для других транспортных средств;
186.4. если груз выступает за габариты транспортного средства по длине на 2 метра и более, то это транспортное средство относится к категории крупногабаритных.

187. Перевозка опасных грузов и использованной для их перевозки неочищенной тары производится в соответствии с правилами перевозки опасных грузов автомобильным транспортом, утвержденными Министерством по чрезвычайным ситуациям.

ГЛАВА 25
БУКСИРОВКА МЕХАНИЧЕСКИХ ТРАНСПОРТНЫХ СРЕДСТВ
188. Буксировка механического транспортного средства производится при помощи сцепки (гибкой или жесткой) либо путем его частичной погрузки на буксирующее транспортное средство.

189. Буксировка при помощи сцепки должна осуществляться только при наличии водителя за рулем буксируемого транспортного средства, кроме случая, когда конструкция жесткой сцепки обеспечивает движение буксируемого транспортного средства по траектории буксирующего.

190. При буксировке автобуса, троллейбуса, трамвая, грузового автомобиля, колесного трактора, самоходной машины при помощи сцепки запрещается перевозка в них пассажиров.
При буксировке путем частичной погрузки запрещается нахождение людей в буксируемом транспортном средстве, а также в кузове буксирующего транспортного средства.

191. При буксировке с помощью гибкой сцепки расстояние между буксирующим и буксируемым транспортными средствами должно быть в пределах 4–6 метров, а при буксировке с помощью жесткой сцепки — не более 4 метров. Для обозначения гибких связующих звеньев применяются предупредительные устройства в соответствии с пунктом 206 настоящих Правил.

192. При буксировке:

192.1. с помощью гибкой сцепки у буксируемого транспортного средства должны быть исправны рабочая тормозная система и рулевое управление;
192.2. с помощью жесткой сцепки у буксируемого транспортного средства должно быть исправно рулевое управление, кроме случая, когда конструкция жесткой сцепки обеспечивает движение буксируемого транспортного средства по траектории буксирующего, а при массе буксируемого транспортного средства более половины массы буксирующего транспортного средства также должна быть исправна рабочая тормозная система;
192.3. путем частичной погрузки допускаются неисправности рабочей тормозной системы и рулевого управления буксируемого транспортного средства.

193. Запрещается буксировка:

193.1. осуществляемая с нарушением требований, определенных в пунктах 189–192 настоящих Правил, и других требований, установленных настоящими Правилами в отношении буксировки;
193.2. в гололедицу при помощи гибкой сцепки;
193.3. автопоездами;
193.4. мотоциклами без боковых прицепов, а также таких мотоциклов, кроме буксировки прицепов, специально предназначенных для мотоциклов;
193.5. механических транспортных средств на гибкой сцепке, если работа их рабочих тормозных и (или) рулевых систем связана с работой двигателя, который остановлен;
193.6. двух и более транспортных средств, за исключением буксировки на жесткой сцепке седельного тягача с полуприцепом;
193.7. мопедов и мопедами, за исключением буксировки велосипедного прицепа промышленного производства.

ГЛАВА 26
ОСНОВНЫЕ ПОЛОЖЕНИЯ О ДОПУСКЕ ТРАНСПОРТНЫХ СРЕДСТВ
К УЧАСТИЮ В ДОРОЖНОМ ДВИЖЕНИИ, ИХ ТЕХНИЧЕСКОЕ
СОСТОЯНИЕ, ОБОРУДОВАНИЕ
194. Запрещается участие в дорожном движении транспортного средства:

194.1. конструкция и техническое состояние которого не отвечают требованиям технических регламентов Таможенного союза и Евразийского экономического союза, а также требованиям, установленным настоящими Правилами;
194.2. без установленных в предусмотренных местах регистрационных знаков (временных номерных знаков), транспортного средства, имеющего следы видоизменения или уничтожения регистрационных знаков (временных номерных знаков), а также маркировок кузова, шасси, рамы, нанесенных на них ранее изготовителем (за исключением зарегистрированных в установленном порядке);
194.3. с правосторонним расположением органов управления транспортным средством (кроме транспортных средств, зарегистрированных на территории Республики Беларусь до 10 августа 2002 г., а также принадлежащих лицам, временно прибывшим в Республику Беларусь);
194.4. переоборудованного (путем изменения его типа и (или) назначения, а также весовых, габаритных или иных технических характеристик, предусмотренных документацией изготовителя, в том числе путем оборудования транспортного средства маячками, специальными звуковыми сигналами) без согласования с ГАИ в порядке, установленном Министерством внутренних дел;
194.5. не зарегистрированного в порядке, установленном Советом Министров Республики Беларусь;
194.6. не имеющего разрешения на его допуск к участию в дорожном движении;
194.7. при наличии неисправности, указанной в приложении 4;
194.8. с неисправными рабочей тормозной системой, рулевым управлением;
194.9. с неисправным сцепным устройством (в составе автопоезда);
194.10. с негорящими (отсутствующими) фарами и (или) задними габаритными огнями в темное время суток и (или) при недостаточной видимости дороги (негорящими фарами считаются фары, у которых не горит (не работает) ни ближний, ни дальний свет);
194.11. с неисправными стеклоочистителями (во время выпадения осадков);
194.12. ветровое (стекло, применяемое для остекления переднего проема транспортного средства) и (или) передние боковые стекла которого имеют степень светопропускания менее 70 процентов*;
________________
* Данные требования не распространяются на транспортные средства, используемые для транспортного обслуживания, сопровождения и обеспечения безопасности должностных лиц, подлежащих государственной охране в соответствии с законодательными актами.

194.13. с внешне видимыми наклейками (изображениями), кроме размещаемых в установленном порядке опознавательных знаков транспортных средств, предусмотренных в приложении 5, трафаретов, выставленных на ветровом или боковом стекле транспортного средства оперативного назначения, рекламы, информации о принадлежности транспортного средства соответствующей организации (индивидуальному предпринимателю).

195. Запрещается участие в дорожном движении троллейбусов и трамваев при наличии одной и более неисправности, указанной в обязательных для соблюдения технических нормативных правовых актах, регламентирующих техническое состояние этих транспортных средств.

196. При возникновении неисправностей, за исключением указанных в подпунктах 194.8–194.11 пункта 194 настоящих Правил, водитель должен принять меры к их устранению, а если это невозможно, он может следовать к месту стоянки или ремонта, соблюдая необходимые меры предосторожности по обеспечению безопасности дорожного движения.

197. На механических транспортных средствах (кроме трамваев и троллейбусов) и прицепах в предусмотренных местах должны быть установлены регистрационные знаки, соответствующие требованиям технических регламентов Таможенного союза и Евразийского экономического союза (временные номерные знаки, соответствующие нормативным правовым актам). При этом запрещается установка регистрационных знаков, временных номерных знаков, отличающихся от установленных образцов.
198. Грузовые автомобили с бортовой платформой, используемые для перевозки пассажиров, должны быть оборудованы сиденьями, закрепленными на высоте не менее 0,3 метра от верхнего края борта вниз к полу. Сиденья, расположенные вдоль заднего и боковых бортов, должны иметь прочные спинки.
Грузовые автомобили с кузовом-фургоном, используемые для перевозки пассажиров, должны быть оборудованы сиденьями, закрепленными на высоте 0,3–0,5 метра от пола.

199. Механические транспортные средства, используемые для обучения управлению механическим транспортным средством и принадлежащие учебным организациям, а также используемые для приема квалификационного практического экзамена на право управления транспортным средством, должны быть дополнительно оборудованы:

199.1. автомобиль (автобус):

педалями привода сцепления и тормоза, необходимым количеством зеркал заднего вида для обучающего управлению автомобилем (автобусом) или принимающего квалификационный практический экзамен на право управления автомобилем (автобусом), а также обозначены спереди и сзади опознавательным знаком «Учебное транспортное средство». Педали приводов сцепления и тормоза для обучаемого и обучающего управлению автомобилем (автобусом), а также сдающего и принимающего квалификационный практический экзамен на право управления автомобилем (автобусом), допущенным к участию в дорожном движении с 1 июля 2003 г., должны воздействовать на рабочий орган соответствующей системы независимо друг от друга;
видеорегистраторами при проведении экзаменов в учебной организации. Порядок применения видеорегистраторов устанавливается обязательными для соблюдения техническими нормативными правовыми актами, а порядок использования и хранения информации, полученной с их помощью, — Министерством транспорта и коммуникаций по согласованию с Министерством внутренних дел;
199.2. троллейбус и трамвай — специальной кабиной с сиденьем и зеркалом заднего вида для обучающего управлению троллейбусом или трамваем, приводами тормоза, а также обозначены спереди и сзади опознавательным знаком «Учебное транспортное средство».

200. Велосипед должен иметь исправные тормозную систему, рулевое управление и звуковой сигнал, быть оборудован спереди световозвращателем белого цвета, сзади — световозвращателем (световозвращателями) красного цвета, а с каждой боковой стороны — световозвращателями оранжевого цвета.
Гужевое транспортное средство должно быть оборудовано спереди световозвращателями белого цвета, сзади — красного, иметь предусмотренные конструкцией исправное стояночное тормозное устройство и противооткатные упоры.

201. На транспортных средствах должны быть установлены опознавательные знаки, указанные в приложении 5:

201.1. «Автопоезд» — в виде трех фонарей, излучающих оранжевый свет, горизонтально расположенных на крыше кабины, с промежутком между ними от 150 до 300 мм — на грузовых автомобилях и колесных тракторах (классов тяги 1,4 тонны и выше) с прицепами, на сочлененных автобусах и троллейбусах или в виде верхних габаритных фонарей в крайних передних габаритных точках крыши кабины на указанных транспортных средствах;
201.2. «Знак аварийной остановки» — в случаях, предусмотренных настоящими Правилами;
201.3. исключен;
201.4. «Учебное транспортное средство» — в виде равностороннего треугольника белого цвета вершиной вверх с каймой красного цвета, в который вписана буква «У» черного цвета (сторона треугольника — не менее 200 мм, ширина каймы — 1/10 стороны), — спереди и сзади механических транспортных средств, используемых для обучения управлению механическим транспортным средством, приема квалификационного практического экзамена на право управления транспортным средством (на крыше легковых автомобилей устанавливается двусторонний светящийся знак);
201.5. «Ограничение скорости» — в виде уменьшенного цветного изображения дорожного знака «Ограничение максимальной скорости» с указанием разрешенной скорости движения (диаметр знака — не менее 160 мм, ширина каймы — 1/10 диаметра) — на задней стороне кузова слева механических транспортных средств, управляемых водителями с водительским стажем менее двух лет, механических транспортных средств, перевозящих опасные, тяжеловесные и (или) крупногабаритные грузы, а также в случаях, когда максимальная скорость движения транспортного средства по технической характеристике ниже скорости движения, определенной в пункте 89 настоящих Правил;
201.6. «Перевозка детей» — в виде квадрата желтого цвета с каймой красного цвета (сторона квадрата — не менее 250 мм, ширина каймы — 1/10 стороны) с черным изображением символа дорожного знака «Дети» — спереди и сзади автобусов при перевозке групп детей;
201.7. «Колонна» — в виде квадрата желтого цвета с каймой красного цвета, в который вписана буква «К» черного цвета (сторона квадрата — не менее 300 мм, ширина каймы — 1/10 стороны), — спереди и сзади транспортных средств, движущихся в транспортной колонне. При движении в организованной транспортной колонне данный опознавательный знак устанавливается спереди и сзади только на замыкающем указанную колонну транспортном средстве, не являющемся транспортным средством оперативного назначения;
201.8. «Тихоходное транспортное средство» — сзади транспортных средств;
201.9. исключен;
201.10. «Крупногабаритный груз» — в виде квадрата размером 400 x 400 мм с нанесенными по диагонали от левого нижнего к правому верхнему углу красными и белыми чередующимися полосами шириной 50 мм со световозвращающей поверхностью — на крайних внешних частях груза, выступающего за габариты транспортных средств;
201.11. «Опасный груз» — в виде прямоугольника оранжевого цвета размером 400 x 300 мм с каймой черного цвета шириной 15 мм, в верхней части которого указывается идентификационный номер вида опасности, в нижней части — идентификационный номер соответствующего опасного вещества, и «Знак опасности» — в виде ромба со стороной 250 мм, изображение которого должно соответствовать классу опасного вещества, — устанавливаются в соответствии с правилами перевозки опасных грузов автомобильным транспортом;
201.12. «Инвалид по слуху» — в виде желтого круга диаметром 160 мм с нанесенными внутри тремя черными кружками диаметром 40 мм, расположенными по углам воображаемого равностороннего треугольника вершиной вниз, — спереди и сзади механических транспортных средств, управляемых водителями — инвалидами по слуху;
201.13. «Транспортное средство большой грузоподъемности», «Транспортное средство большой длины».

202. Опознавательные знаки «Тихоходное транспортное средство», «Транспортное средство большой грузоподъемности», «Транспортное средство большой длины» должны быть изготовлены и установлены на транспортных средствах, а «Знак аварийной остановки» — изготовлен в соответствии с обязательными для соблюдения требованиями технических нормативных правовых актов.

203. По желанию водителя могут быть установлены опознавательные знаки:

203.1. «Инвалид» — в виде квадрата желтого цвета со стороной 150 мм и с изображением символа дорожного знака «Инвалиды» черного цвета — спереди и сзади механических транспортных средств, управляемых инвалидами І, ІІ группы, а также инвалидами ІІІ группы с нарушениями опорно-двигательного аппарата или перевозящих таких инвалидов, а также детей-инвалидов;
203.2. «Врач» — в виде квадрата синего цвета со стороной 140 мм с вписанным в него белым кругом диаметром 125 мм, на который нанесен зеленый крест (высота квадрата — 90 мм, ширина штриха — 25 мм), — спереди и сзади автомобилей, управляемых водителями-врачами;
203.3. «Шипы» — в виде равностороннего треугольника белого цвета вершиной вверх с каймой красного цвета, в который вписана буква «Ш» черного цвета (сторона треугольника — не менее 200 мм, ширина каймы — 1/10 стороны), — сзади механических транспортных средств, имеющих ошипованные шины;
203.4. «Отличительный знак транспортного средства Республики Беларусь» — на задней стороне кузова справа механических транспортных средств.

204. Разрешается установка световозвращающих лент (полос) красного цвета сзади и белого цвета спереди транспортных средств в соответствии с установленными требованиями.

205. Транспортные средства (кроме принадлежащих Министерству обороны, Министерству внутренних дел, Министерству по чрезвычайным ситуациям, Комитету государственной безопасности, Государственному пограничному комитету, другим войскам и воинским формированиям) должны быть обозначены маркировкой с улучшенными световозвращающими характеристиками в случаях, предусмотренных обязательными для соблюдения техническими нормативными правовыми актами.

206. Предупредительные устройства для обозначения гибких связующих звеньев при буксировке механических транспортных средств должны выполняться в виде флажков или щитков размером 200 x 200 мм с нанесенными на них по диагонали красными и белыми чередующимися полосами шириной 50 мм со световозвращающей поверхностью. На гибком связующем звене должно быть установлено не менее двух указанных предупредительных устройств.

207. Конструкция жесткого буксирующего устройства должна соответствовать обязательным для соблюдения требованиям технических нормативных правовых актов.

2071. При участии в дорожном движении с 1 декабря по 1 марта автомобили с технически допустимой общей массой до 3,5 тонны включительно, легковые и грузопассажирские автомобили с технически допустимой общей массой свыше 3,5 тонны, а также автобусы с технически допустимой общей массой до 5 тонн должны быть оборудованы зимними шинами. Зимние шины устанавливаются на всех колесах транспортного средства и должны соответствовать требованиям части второй пункта 25 приложения 4.

ГЛАВА 27
ОБЯЗАННОСТИ ДОЛЖНОСТНЫХ И ИНЫХ ЛИЦ ПО
ОБЕСПЕЧЕНИЮ БЕЗОПАСНОСТИ ДОРОЖНОГО ДВИЖЕНИЯ
208. Должностным и иным лицам транспортных и других организаций, ответственным за техническое состояние и эксплуатацию транспортных средств, запрещается допускать их к участию в дорожном движении и допускать водителей к управлению транспортными средствами с нарушением требований, установленных настоящими Правилами и иными актами законодательства.
209. Должностные и иные лица, ответственные за эксплуатацию дорог, дорожных сооружений, железнодорожных переездов и технических средств организации дорожного движения, обязаны:
209.1. содержать дороги, дорожные сооружения, железнодорожные переезды и технические средства организации дорожного движения в соответствии с установленными требованиями в состоянии, безопасном для дорожного движения;
209.2. своевременно принимать меры к ограничению или запрещению движения транспортных средств по дорогам или их отдельным участкам с предварительным информированием ГАИ.
210. Должностные лица дорожных, строительных и других организаций, а также граждане, осуществляющие на дороге и (или) прилегающей территории ремонтные и другие работы, обязаны:
210.1. организовать обозначение мест проведения на дороге и (или) прилегающей территории ремонтных и других работ, оставленных на дороге и (или) прилегающей территории дорожно-строительных машин, строительных материалов, конструкций и иных объектов дорожными знаками, ограждающими и направляющими устройствами, указателями объезда, а в темное время суток и (или) при недостаточной видимости дороги — дополнительно фонарями, излучающими красный или желтый свет;
210.2. после окончания на дороге и (или) прилегающей территории ремонтных и других работ принять безотлагательные меры по ее приведению в состояние, обеспечивающее беспрепятственное и безопасное дорожное движение;
210.3. принимать меры по предотвращению загрязнения дорог.
211. Работники дорожных, строительных и других организаций, а также граждане при проведении на дороге ремонтных и других работ должны находиться в одежде повышенной видимости, описание которой определяется Министерством транспорта и коммуникаций.
212. Дорожно-эксплуатационные и коммунальные службы должны принимать незамедлительные меры по ликвидации последствий, возникших на дороге в результате чрезвычайных и иных ситуаций, снижающих безопасность дорожного движения, а также по эвакуации транспортных средств, поврежденных в результате дорожно-транспортных происшествий. Органы и подразделения по чрезвычайным ситуациям участвуют в ликвидации чрезвычайных ситуаций, возникших на дороге в результате дорожно-транспортных происшествий.
Приложение 1
к Правилам
дорожного движения
ДОРОЖНЫЕ СВЕТОФОРЫ
Транспортные светофоры
1. С вертикальным расположением сигнала:
Приложение 1 к Правилам дорожного движения РБ
2. С дополнительными секциями
Вид транспортного светофора с секциями направлений
Пешеходные светофоры

Дополнительное оборудование, применяемое с дорожными светофорами

Приложение 2
к Правилам
дорожного движения
ДОРОЖНЫЕ ЗНАКИ РБ 2024 год
ГЛАВА 1
ОПИСАНИЕ ДОРОЖНЫХ ЗНАКОВ
1. Дорожные знаки (если не определено иное, далее — знаки) изготавливаются и устанавливаются в соответствии с настоящим приложением и требованиями технических нормативных правовых актов республиканского органа государственного управления по стандартизации, метрологии и сертификации.
2. Знаки подразделяются на:
постоянные и временные;
предупреждающие, знаки приоритета, запрещающие, предписывающие, информационно-указательные, знаки сервиса и знаки дополнительной информации (таблички) (если не указано иное, далее — таблички).
3. Знаки на желтом фоне относятся к временным и применяются как отдельно, так и в сочетании с другими временными техническими средствами организации дорожного движения в местах производства ремонтных и других работ на дороге, а также в случаях оперативного изменения в организации дорожного движения, связанного с обеспечением его безопасности или проведением специальных мероприятий.
4. В случаях, когда значения временных и постоянных знаков противоречат друг другу, участники дорожного движения должны руководствоваться временными знаками.
 

§ 1. Предупреждающие знаки <*>
5. Предупреждающие знаки информируют водителей о приближении к опасному участку дороги, движение по которому требует принятия мер, соответствующих дорожной обстановке.
6. К предупреждающим знакам относятся следующие:
 
1.1. Железнодорожный переезд со шлагбаумом

Предупреждает участников дорожного движения о приближении к ж/д переезду со шлагбаумом.
1.1.
предупреждает о приближении к железнодорожному переезду оборудованным шлагбаумом
1.2 Железнодорожный переезд без шлагбаума ;

Информирует участников дорожного движения о приближении к железнодорожному переезду без шлагбаума
1.2.
предупреждает о приближении к железнодорожному переезду не оборудованному шлагбаумом
1.3.1 Однопутная железная дорога

Устанавливается только при наличии одного пути, непосредственно перед ЖД переездом
1.3.1.
предупреждает о приближении к железнодорожному переезду c 1 путем
1.3.2 Многопутная железная дорога

Предупреждает водителей о приближении к железнодорожному переезду с двумя и более путями
1.3.2
предупреждает о приближении к железнодорожному переезду с 2 и более путями
1.4.1 Приближение к железнодорожному переезду за 150 м справа ;

Этот знак устанавливается за 150 метров до ЖД переезда справа.
1.4.1.
предупреждает за 150 метров о приближении к ЖД переезду (по правой стороне)
1.4.2 Приближение к железнодорожному переезду за 100 м справа ;

Этот знак устанавливается за 100 метров до ЖД переезда справа.
1.4.2.
предупреждает за 100 метров о приближении к ЖД переезду (по правой стороне)
1.4.3 Приближение к железнодорожному переезду за 50 м справа ;

Этот знак устанавливается за 50 метров до ЖД переезда справа.
1.4.3.
предупреждает за 50 метров о приближении к ЖД переезду (по правой стороне)
1.4.4 Приближение к железнодорожному переезду за 150 м слева ;

Этот знак устанавливается за 150 метров до ЖД переезда слева.
1.4.4
предупреждает за 150 метров о приближении к ЖД переезду (по левой стороне)
1.4.5 Приближение к железнодорожному переезду за 100 м слева ;

Этот знак устанавливается за 100 метров до ЖД переезда справа.
1.4.5.
предупреждает за 100 метров о приближении к ЖД переезду (по левой стороне)
1.4.6 Приближение к железнодорожному переезду за 50 м слева ;

Этот знак устанавливается за 50 метров до ЖД переезда слева.
1.4.6
предупреждает за 50 метров о приближении к ЖД переезду (по левой стороне)
1.5 Пересечение с трамвайной линией;
Указатель дорожный 1,5 "Пересечение с трамвайной линией"
«1.6 Конец дороги с усовершенствованным покрытием» — переход дороги с усовершенствованным покрытием в гравийную или грунтовую дорогу;
«1.7 Пересечение с круговым движением«;
«1.8 Светофорное регулирование» — перекресток, пешеходный переход или участок дороги, движение на которых регулируется светофором;
«1.9 Разводной мост или паромная переправа»;
«1.10 Выезд на набережную» — выезд на набережную (берег водоема);
«1.11.1, 1.11.2 Опасный поворот» — закругление дороги малого радиуса (1.11.1 — направо, 1.11.2 — налево) или с ограниченной обзорностью;
«1.12.1, 1.12.2 Опасные повороты» — участок дороги с двумя и более опасными поворотами, расположенными один за другим (1.12.1 — первый поворот направо, 1.12.2 — первый поворот налево). При трех и более поворотах знак применяется с табличкой 7.7, а также может применяться с табличкой 7.2.1;
«1.13 Крутой спуск», «1.14 Крутой подъем» — спуск или подъем, на котором действуют специальные требования Правил дорожного движения (далее — Правила), устанавливающие порядок дорожного движения соответственно на крутых спусках или крутых подъемах.
Знаки 1.13, 1.14 могут устанавливаться без таблички 7.1.1 непосредственно перед началом спуска или подъема, если спуски и подъемы следуют один за другим;
«1.15 Скользкая дорога»;
«1.16.1 Искусственная неровность» — участок дороги с установленной искусственной неровностью (искусственными неровностями) на проезжей части дороги;
«1.16.2 Неровная дорога» — участок дороги с неровностями на проезжей части (волны, наплывы, гребенка и т.п.);
«1.16.3 Неровная дорога» — участок дороги, имеющий неплавные сопряжения с покрытием дороги в виде наплыва (бугра);
«1.16.4 Неровная дорога» — участок дороги, имеющий повреждения покрытия в виде отдельных выбоин, просадок;
«1.17 Выброс щебня» — участок дороги с усовершенствованным покрытием, на котором возможен выброс щебня из-под колес транспортных средств;
«1.18.1 — 1.18.6 Сужение дороги» — сужение дороги: 1.18.1, 1.18.4 — с обеих сторон, 1.18.2, 1.18.5 — справа, 1.18.3, 1.18.6 — слева;
«1.19.1, 1.19.2 Двустороннее движение» — начало участка дороги (проезжей части дороги) со встречным движением после участка дороги с односторонним движением;
«1.20 Впереди пешеходный переход» — приближение к нерегулируемому пешеходному переходу, обозначенному знаками 5.16.1, 5.16.2 и (или) горизонтальной дорожной разметкой 1.14.1, 1.14.2;
«1.21 Дети» — участок дороги, на котором возможно появление детей с территории детского или иного учреждения (школы, оздоровительного лагеря, больницы и т.п.), прилегающего непосредственно к дороге;
«1.22 Пересечение с велосипедной дорожкой» — место пересечения велосипедной дорожки с проезжей частью дороги;
(в ред. Указа Президента Республики Беларусь от 13.10.2014 N 483)
«1.23 Дорожные работы» — участок дороги, на котором в установленном порядке выполняются ремонтные и другие работы;
«1.24 Перегон скота» — участок дороги, на котором возможно появление скота;
«1.25 Дикие животные» — участок дороги, проходящий по территории заповедников (охотничьих хозяйств, лесных массивов и т.п.), на котором возможно появление диких животных;
«1.26 Падение камней» — участок дороги, на котором возможны обвалы, оползни, падение камней;
«1.27 Боковой ветер» — участок дороги, на котором возможны сильный боковой ветер или его внезапные порывы;
«1.28 Низколетящие самолеты» — участок дороги вблизи аэродромов либо над которым пролетают самолеты или вертолеты на небольшой высоте;
«1.29 Аварийно-опасный участок» — участок дороги, на котором часто совершаются дорожно-транспортные происшествия;
«1.30 Прочие опасности» — опасный участок дороги, который невозможно обозначить другими предупреждающими знаками;
«1.31.1 — 1.31.5 Направление поворота» — направление движения на повороте дороги малого радиуса с ограниченной обзорностью (знаки 1.31.1, 1.31.2, 1.31.4, 1.31.5); направление объезда препятствия для дорожного движения на ремонтируемом участке дороги (знаки 1.31.1, 1.31.2); направление объезда центрального островка на перекрестке с круговым движением (знак 1.31.1); направление движения на Т-образном перекрестке, разветвлении дорог (знаки 1.31.1 — 1.31.3); направление объезда ремонтируемого участка дороги (знак 1.31.3);
«1.32 Опасная обочина» — участок дороги с заниженной или разрушенной обочиной либо на котором ведутся работы по ремонту обочин;
«1.33 Гололедица» — участок дороги, на котором возможны снежные заносы либо ледяные или снежно-ледяные образования;
«1.34 Затор на дороге»;
«1.35 Сезонные миграции земноводных» — участок дороги, на котором возможны массовые появления земноводных на проезжей части.
7. Знаки 1.1, 1.2, 1.5 — 1.30, 1.32 — 1.35 устанавливаются вне населенных пунктов на расстоянии от 150 до 300 метров, а в населенных пунктах — как правило, на расстоянии от 50 до 100 метров до начала опасного участка дороги. При необходимости (начало опасного участка дороги скрыто от водителя крутым поворотом, переломом продольного профиля, зданием и т.п.) указанные знаки могут быть установлены на ином расстоянии, которое в таком случае указывается на табличке 7.1.1.
8. Знаки 1.1, 1.2, 1.9, 1.10, 1.21, 1.23 повторяются вне населенных пунктов и устанавливаются на расстоянии от 20 до 50 метров до начала опасного участка дороги. Знак 1.23 повторяется также в населенных пунктах и устанавливается непосредственно у начала участка проведения ремонтных и других работ. За начало участка следует считать первое по ходу движения ограждающее или направляющее устройство.
9. Знаки 1.3.1, 1.3.2, 1.31.1 — 1.31.5 устанавливаются в пределах опасного участка дороги или непосредственно перед ним.
10. Знаки 1.4.1 — 1.4.3 устанавливаются на правой стороне, а знаки 1.4.4 — 1.4.6 — на левой стороне дороги.
<*> В настоящем приложении используются параграфы — структурные элементы глав, объединяющие пункты (кроме пунктов 1 — 4) и имеющие сквозную нумерацию для каждой главы приложения.
Параграф § 2. Знаки приоритета
11. Знаки приоритета устанавливают очередность проезда перекрестков, пересечений отдельных проезжих частей дорог, узких участков дорог, а также порядок проезда железнодорожных переездов и иных отдельных участков дорог, движение на которых не регулируется сигналами регулировщика или светофора.
(в ред. Указа Президента Республики Беларусь от 13.10.2014 N 483)
12. К знакам приоритета относятся следующие:
«2.1 Главная дорога» — предоставляется право преимущественного проезда перекрестка (пересечения проезжих частей дорог);
«2.2 Конец главной дороги» — отменяется право преимущественного проезда перекрестка (пересечения проезжих частей дорог);
«2.3.1 Пересечение со второстепенной дорогой«;
«2.3.2, 2.3.3 Примыкание второстепенной дороги» — примыкание второстепенной дороги: 2.3.2 — справа, 2.3.3 — слева;
«2.3.4 Пересечение равнозначных дорог» — приближение к перекрестку равных по значению дорог, на котором действуют требования пункта 110 Правил;
«2.4 Уступить дорогу» — необходимо уступить дорогу транспортным средствам, движущимся по пересекаемой дороге, а при наличии таблички 7.13 — транспортным средствам, движущимся по главной дороге, а также справа по равнозначной дороге. Знак, установленный на главной дороге, обозначает также конец главной дороги;
«2.5 Движение без остановки запрещено» — запрещается движение без остановки перед знаком 2.5 или знаком 5.33 (горизонтальной дорожной разметкой 1.12), а при их отсутствии — перед краем пересекаемой проезжей части дороги. Необходимо уступить дорогу транспортным средствам, движущимся по пересекаемой дороге, а при наличии таблички 7.13 — транспортным средствам, движущимся по главной дороге, а также справа по равнозначной дороге. При подъезде к участку дороги, на котором установлен знак, а также к железнодорожному переезду, движение через который не запрещено, водитель должен остановиться перед знаком 2.5 или знаком 5.33 (горизонтальной дорожной разметкой 1.12);
(в ред. Указа Президента Республики Беларусь от 13.10.2014 N 483)
«2.6.1, 2.6.2 Преимущество встречного движения» — запрещается въезд на участок дороги, если это может затруднить встречное движение. Необходимо уступить дорогу транспортным средствам, находящимся на данном участке дороги или на противоположном подъезде к нему;
«2.7 Преимущество перед встречным движением» — участок дороги, при движении по которому водитель пользуется преимуществом по отношению к встречным транспортным средствам.
13. Знак 2.1 устанавливается непосредственно перед перекрестком, в том числе с табличкой 7.13 — перед перекрестком со сложной планировкой или на котором главная дорога изменяет направление. При этом вне населенных пунктов перед перекрестком, на котором главная дорога изменяет направление, знак 2.1 повторяется: первый знак 2.1 с табличками 7.1.1 и 7.13 устанавливается на расстоянии от 100 до 150 метров до перекрестка, второй знак 2.1 с табличкой 7.13 — непосредственно перед перекрестком.
Знак 2.1, установленный со знаком 5.22.1 или 5.22.2, предоставляет преимущество при проезде всех перекрестков населенного пункта, расположенных на данной дороге.
14. Установленные на регулируемых перекрестках знаки 2.1, 2.4, 2.5 не определяют очередность проезда перекрестков и отдельных проезжих частей дороги, а информируют водителей, что перекрестки являются обозначенными.
15. Знаки 2.3.1 — 2.3.3 применяются вне населенных пунктов для обозначения дорог, на которых предоставляется преимущество при проезде перекрестков, и устанавливаются на расстоянии от 150 до 300 метров до перекрестка.
Знак 2.3.4 устанавливается вне населенных пунктов на расстоянии от 150 до 300 метров, а в населенных пунктах — как правило, на расстоянии от 50 до 100 метров до перекрестка.
16. Знак 2.4 устанавливается непосредственно перед перекрестком, а при наличии полосы разгона — перед началом этой полосы. Перед перекрестком, на котором главная дорога изменяет направление, знак 2.4 устанавливается с табличкой 7.13.
Вне населенных пунктов на дорогах с усовершенствованным покрытием знак 2.4 с табличкой 7.1.1 или 7.1.2 устанавливается на расстоянии от 150 до 300 метров до перекрестка. В населенных пунктах знак 2.4 с табличкой 7.1.1 или 7.1.2 может устанавливаться на расстоянии от 50 до 100 метров до перекрестка.
параграф § 3. Запрещающие знаки
17. Запрещающие знаки вводят или отменяют определенные ограничения дорожного движения.
18. К запрещающим знакам относятся следующие:
«3.1 Въезд запрещен» — запрещается въезд транспортных средств;
«3.2 Движение запрещено» — запрещается движение транспортных средств;
«3.3 Движение механических транспортных средств запрещено»;
«3.4 Движение грузовых автомобилей запрещено» — запрещается движение грузовых автомобилей (автопоездов) с технически допустимой общей массой более 3,5 тонны (если на знаке не указана масса) или с фактической массой, превышающей указанную на знаке, а также колесных тракторов и самоходных машин;
«3.5 Движение мотоциклов запрещено» — запрещается движение мотоциклов и мопедов;
«3.6 Движение тракторов запрещено» — запрещается движение колесных тракторов и самоходных машин;
«3.7 Движение с прицепом запрещено» — запрещаются движение грузовых автомобилей, колесных тракторов и самоходных машин с прицепами, а также буксировка механических транспортных средств;
«3.8 Движение гужевых транспортных средств запрещено» — запрещаются движение гужевых транспортных средств, животных под седлом или вьюком, а также прогон скота;
«3.9 Движение велосипедов запрещено»;
«3.10 Движение пешеходов запрещено»;
«3.11.1, 3.11.2 Ограничение массы» — запрещается движение транспортных средств, в том числе автопоездов, общая фактическая масса которых больше указанной на знаке;
«3.12.1, 3.12.2 Ограничение нагрузки на ось» — запрещается движение транспортных средств, у которых фактическая нагрузка на любую ось больше указанной на знаке;
«3.13 Ограничение высоты» — запрещается движение транспортных средств, габаритная высота которых (с грузом или без груза) больше указанной на знаке;
«3.14 Ограничение ширины» — запрещается движение транспортных средств, габаритная ширина которых (с грузом или без груза) больше указанной на знаке;
«3.15.1, 3.15.2 Ограничение длины» — запрещается движение транспортных средств (автопоездов), габаритная длина которых (с грузом или без груза) больше указанной на знаке;
«3.16 Ограничение минимальной дистанции» — запрещается движение транспортных средств с дистанцией между ними меньше указанной на знаке;
«3.17.1 Таможня» — запрещается проезд без остановки у таможни (контрольного пункта). Разрешение на дальнейшее движение дает работник таможни (контрольного пункта);
«3.17.2 Опасность» — запрещается движение всех без исключения транспортных средств в связи с дорожно-транспортным происшествием, аварией, стихийным бедствием или другой опасностью для движения;
«3.18.1 Поворот направо запрещен»;
«3.18.2 Поворот налево запрещен» — запрещается поворот налево, при этом разворот разрешается;
«3.19 Разворот запрещен» — запрещается разворот, при этом поворот налево разрешается;
«3.20.1, 3.20.2 Обгон запрещен» — запрещается обгон транспортных средств, кроме одиночных, движущихся со скоростью менее 30 км/ч;
«3.20.3 Обгон запрещен» — запрещается обгон транспортных средств, скорость движения которых больше указанной на знаке;
«3.21.1, 3.21.2 Конец зоны запрещения обгона»;
«3.22 Обгон грузовым автомобилям запрещен» — грузовым автомобилям с технически допустимой общей массой более 3,5 тонны запрещается обгон транспортных средств, кроме одиночных, движущихся со скоростью менее 30 км/ч. Колесным тракторам и самоходным машинам запрещается обгон транспортных средств, кроме одиночных велосипедов, гужевых транспортных средств;
«3.23 Конец зоны запрещения обгона грузовым автомобилям»;
«3.24.1, 3.24.2 Ограничение максимальной скорости» — запрещается движение со скоростью (км/ч), превышающей указанную на знаке;
«3.25.1, 3.25.2 Конец зоны ограничения максимальной скорости»;
«3.26 Подача звукового сигнала запрещена» — запрещается пользоваться звуковым сигналом, кроме случая подачи его для предотвращения дорожно-транспортного происшествия;
«3.27 Остановка запрещена» — запрещаются остановка и стоянка транспортных средств;
«3.28 Стоянка запрещена»;
«3.29 Стоянка запрещена по нечетным числам месяца»;
«3.30 Стоянка запрещена по четным числам месяца».
При одновременном применении знаков 3.29 и 3.30 на противоположных сторонах дороги транспортные средства должны быть переставлены с одной ее стороны на другую в период с 19 до 24 часов;
«3.31 Конец зоны всех ограничений» — обозначение конца зоны действия следующих знаков: 3.16, 3.20.1 — 3.20.3, 3.22, 3.24.1, 3.24.2, 3.26 — 3.30;
«3.32 Движение транспортных средств с опасными грузами запрещено» — запрещается движение транспортных средств с опознавательными знаками «Опасный груз».
19. Действие не распространяется:
знаков 3.1 — 3.3, 3.18.1 — 3.19, 3.27 — на маршрутные транспортные средства, движущиеся по установленным маршрутам;
знаков 3.2 — 3.8 — на транспортные средства дорожно-эксплуатационной и коммунальной служб, автомобили с наклонной белой полосой на бортах и на другие транспортные средства, обслуживающие торговые и другие организации, расположенные в обозначенной зоне (граждан, проживающих или работающих в данной зоне), а также на транспортные средства, принадлежащие гражданам, проживающим или работающим в этой зоне, при отсутствии иных возможностей их подъезда. Такие транспортные средства должны въезжать в обозначенную зону и выезжать из нее на ближайшем к месту назначения перекрестке;
(в ред. Указа Президента Республики Беларусь от 18.10.2007 N 526)
знаков 3.2, 3.3, 3.28 — 3.30 — на транспортные средства, управляемые инвалидами I либо II группы, III группы с нарушениями опорно-двигательного аппарата или перевозящие инвалидов этих групп;
знака 3.4 — на грузовые автомобили, предназначенные для перевозки пассажиров;
(в ред. Указа Президента Республики Беларусь от 18.10.2007 N 526)
знаков 3.27 — 3.30 — на места, обозначенные знаком 5.15;
знаков 3.28 — 3.30 — на такси с включенным таксометром;
знаков 3.2 — 3.4, 3.27, 3.28 — на автомобили для инкассации денежной выручки и перевозки ценностей при условии, что невыполнение требований этих знаков не создаст затора.
(абзац введен Указом Президента Республики Беларусь от 13.10.2014 N 483)
20. Действие распространяется:
знаков 3.10, 3.27 — 3.30 — только на ту сторону дороги, у которой (над которой) они установлены. Действие знаков 3.27 — 3.30, установленных на прилегающей к дороге территории, распространяется на эту территорию с учетом требований табличек, установленных с такими знаками;
знаков 3.16, 3.20.1, 3.20.3, 3.22, 3.24.1, 3.24.2, 3.26 — 3.30 — от места установки знака до ближайшего обозначенного перекрестка, при этом в населенном пункте без обозначенного перекрестка — до конца населенного пункта;
знаков 3.18.1 и 3.18.2 — на перекресток, перед которым установлен знак, а также на ближайшее пересечение проезжих частей дорог на перекрестке, если дорога, на которую совершается поворот, содержит разделительную полосу (разделительную зону);
(в ред. Указа Президента Республики Беларусь от 18.10.2007 N 526)
знаков 3.24.1, 3.24.2, установленных перед населенным пунктом, обозначенным знаком 5.22.1 или 5.22.2, — до этого знака.
21. Зона действия может быть уменьшена для:
знаков 3.16, 3.26 — применением таблички 7.2.1;
знаков 3.20.1 — 3.20.3, 3.22, 3.24.1, 3.24.2 — установкой в конце зоны их действия соответственно знаков 3.21.1, 3.21.2, 3.23, 3.25.1, 3.25.2 или применением таблички 7.2.1;
знаков 3.24.1, 3.24.2 — установкой этих знаков с другим значением максимальной скорости движения;
знаков 3.27 — 3.30 — применением табличек 7.2.1, 7.2.2 или установкой в конце зоны их действия повторных знаков 3.27 — 3.30 с табличкой 7.2.3.
параграф § 4. Предписывающие знаки
22. Предписывающие знаки применяются для обозначения необходимых направлений, условий и режимов движения.
23. К предписывающим знакам относятся следующие:
«4.1.1 Движение прямо»;
«4.1.2 Движение направо»;
«4.1.3 Движение налево»;
«4.1.4 Движение прямо или направо»;
«4.1.5 Движение прямо или налево»;
«4.1.6 Движение направо или налево».
Знаки 4.1.1 — 4.1.6 разрешают движение только в направлениях, указанных стрелками. Знаки 4.1.3, 4.1.5, 4.1.6 также разрешают разворот из крайней левой полосы движения.
(в ред. Указа Президента Республики Беларусь от 18.10.2007 N 526)
Могут применяться знаки с измененной конфигурацией стрелок, соответствующей установленным направлениям движения на конкретном перекрестке;
«4.2.1 Объезд препятствия справа», «4.2.2 Объезд препятствия слева» — объезд островков безопасности и различного рода препятствий для дорожного движения, находящихся на проезжей части дороги, разрешается только со стороны, указанной стрелкой;
«4.2.3 Объезд препятствия справа или слева» — объезд островков безопасности и различного рода препятствий для дорожного движения, находящихся на проезжей части дороги, разрешается с любой стороны;
«4.3 Круговое движение» — разрешается объезд центрального островка на перекрестке (площади) с круговым движением только в направлении, указанном стрелками;
«4.4 Движение легковых автомобилей» — разрешается движение только легковых автомобилей и мотоциклов;
«4.5.1 Велосипедная дорожка» — разрешается движение только на велосипедах, а при отсутствии тротуара или пешеходной дорожки — и движение пешеходов, при этом пешеходы не должны создавать препятствий для движения велосипедистов. В нижней части знака может быть дополнительно нанесен силуэт пешехода;
(в ред. Указа Президента Республики Беларусь от 13.10.2014 N 483)
«4.5.2 Конец велосипедной дорожки» — конец зоны действия знака 4.5.1. В нижней части знака может быть дополнительно нанесен силуэт пешехода;
(в ред. Указа Президента Республики Беларусь от 13.10.2014 N 483)
«4.6.1 Пешеходная дорожка» — разрешается движение только пешеходам, а при отсутствии велосипедной дорожки — и на велосипедах, при этом велосипедисты не должны создавать препятствий для движения пешеходов. В нижней части знака может быть дополнительно нанесен силуэт велосипеда;
(в ред. Указа Президента Республики Беларусь от 13.10.2014 N 483)
«4.6.2 Конец пешеходной дорожки» — конец зоны действия знака 4.6.1. В нижней части знака может быть дополнительно нанесен силуэт велосипеда;
(в ред. Указа Президента Республики Беларусь от 13.10.2014 N 483)
«4.7 Ограничение минимальной скорости» — разрешается движение только с указанной или с большей скоростью, но не более предусмотренной пунктами 88 и 89 Правил;
«4.8 Конец зоны ограничения минимальной скорости»;
«4.9.1 — 4.9.3 Направление движения транспортных средств с опасными грузами» — движение транспортных средств с опознавательными знаками «Опасный груз» разрешается только в направлении, указанном на знаке: 4.9.1 — налево, 4.9.2 — прямо, 4.9.3 — направо;
«4.10.1 Дорожка для всадников» — разрешается движение только всадникам;
«4.10.2 Конец дорожки для всадников».
24. Действие знаков 4.1.1 — 4.1.6, установленных перед перекрестком, распространяется на весь перекресток, если знаки 4.1.1 — 4.1.6 или 5.8.1, 5.8.2, установленные на нем, не дают других предписаний (указаний).
Действие знаков 4.1.1 — 4.1.6 не распространяется на маршрутные транспортные средства, движущиеся по установленным маршрутам.
Действие знака 4.1.1, установленного за перекрестком, распространяется до следующего обозначенного перекрестка. Зона действия данного знака может быть уменьшена применением таблички 7.2.1.
25. Знаки 4.2.1 и 4.2.2 могут применяться группами (не менее трех знаков) для обозначения линии отклонения траектории движения транспортных средств от препятствия для дорожного движения.
26. Действие знаков 4.4, 4.7, установленных с табличкой 7.14 и размещенных над полосой движения, распространяется только на данную полосу. При отсутствии таблички 7.14 действие этих знаков распространяется на все полосы проезжей части дороги данного направления. Действие знаков 4.4, 4.7, изображения которых нанесены на поле знаков 5.8.1, 5.8.2, 5.8.7, 5.8.8, распространяется на соответствующие полосы движения.
27. Действие знаков 4.9.1 — 4.9.3 распространяется на ближайший перекресток.
параграф § 5. Информационно-указательные знаки
28. Информационно-указательными знаками вводятся или отменяются определенные режимы движения, а также информируются участники дорожного движения о расположении населенных пунктов и других объектов.
29. К информационно-указательным знакам относятся следующие:
«5.1 Автомагистраль», «5.2 Конец автомагистрали».
Знаки информируют о начале и конце дороги, на которой действуют специальные требования Правил, устанавливающие порядок дорожного движения на автомагистрали;
«5.3 Дорога для автомобилей» — дорога, предназначенная для движения только автомобилей, автобусов и мотоциклов;
«5.4 Конец дороги для автомобилей»;
«5.5 Дорога с односторонним движением» — дорога или конструктивно отделенная проезжая часть дороги, по которой движение транспортных средств по всей ширине осуществляется в одном направлении;
«5.6 Конец дороги с односторонним движением»;
«5.7.1, 5.7.2 Выезд на дорогу с односторонним движением» — выезд на дорогу, по которой движение транспортных средств разрешено только в направлении, указанном на знаке;
«5.8.1 Направления движения по полосам» — количество полос движения на перекрестке и разрешенные направления движения по каждой из них;
«5.8.2 Направление движения по полосе» — разрешенное направление (направления) движения по полосе.
На знаках 5.8.1, 5.8.2 может быть отражена информация об ограничениях дорожного движения на перекрестке (нанесены изображения запрещающих или предписывающих знаков). Знаки 5.8.1, 5.8.2, разрешающие поворот налево с крайней левой полосы движения, разрешают и разворот с этой полосы. Конфигурация стрелок может быть изменена в соответствии с конфигурацией конкретного перекрестка.
Действие знаков 5.8.1, 5.8.2, установленных перед перекрестком, распространяется на весь перекресток, если знаки 5.8.1, 5.8.2 или 4.1.1 — 4.1.6, установленные на перекрестке, не дают других указаний;
«5.8.3 Начало полосы» — начало дополнительной полосы движения на подъеме или полосы торможения.
Если на знаке, установленном перед дополнительной полосой движения, нанесено изображение знака 4.4 или 4.7, то водитель транспортного средства, которое не может продолжить движение по основной полосе с учетом требований указанных знаков, должен перестроиться на дополнительную полосу движения;
(в ред. Указа Президента Республики Беларусь от 18.10.2007 N 526)
«5.8.4 Начало полосы» — начало участка средней полосы трехполосной дороги, предназначенного для движения в данном направлении, или начало полосы торможения для поворота налево либо разворота;
«5.8.5 Конец полосы» — конец дополнительной полосы движения на подъеме или полосы разгона;
«5.8.6 Конец полосы» — конец полосы, предназначенной для движения в данном направлении;
«5.8.7, 5.8.8 Направление движения по полосам».
Если на знаке 5.8.7 нанесено изображение запрещающего или предписывающего знака, то указанные ограничения, условия или режимы движения вводятся на соответствующей полосе движения.
Части знаков 5.8.7, 5.8.8, обозначающие количество полос для встречных направлений движения, могут быть выполнены в виде отдельных знаков, установленных на небольшом расстоянии один от другого;
«5.9.1 Полоса для маршрутных транспортных средств» — полоса, предназначенная для движения только маршрутных транспортных средств;
«5.9.2 Конец полосы для маршрутных транспортных средств»;
«5.10.1 Дорога с полосой для маршрутных транспортных средств» — дорога, по которой движение маршрутных транспортных средств осуществляется по специально выделенной полосе навстречу общему потоку транспортных средств;
«5.10.2, 5.10.3 Выезд на дорогу с полосой для маршрутных транспортных средств»;
«5.10.4 Конец дороги с полосой для маршрутных транспортных средств»;
«5.11.1 Место для разворота»;
«5.11.2 Зона для разворота» — начало зоны для разворота транспортных средств и ее длина;
«5.12.1 Остановочный пункт автобуса и (или) троллейбуса».
Знак обозначает начало посадочной площадки остановочного пункта автобуса и (или) троллейбуса. Вне населенных пунктов знак может быть установлен на павильоне со стороны прибытия маршрутных транспортных средств.
В нижней части знака может быть нанесено изображение таблички 7.2.1 с указанием расстояния, равного протяженности посадочной площадки;
«5.12.2 Место остановки автобуса и (или) троллейбуса».
Знак может устанавливаться в конце посадочной площадки остановочного пункта автобуса и (или) троллейбуса. Под знаком размещается табличка (таблички) с информацией о разновидности транспорта общего пользования (автобус — буквенный индекс «А», троллейбус — «Т») и режиме его движения (расписание);
«5.13.1 Остановочный пункт трамвая».
Знак обозначает начало зоны остановочного пункта трамвая. В нижней части знака может быть нанесено изображение таблички 7.2.1 с указанием расстояния, равного протяженности зоны остановочного пункта трамвая;
«5.13.2 Место остановки трамвая».
Знак может устанавливаться в конце зоны остановочного пункта трамвая. Под знаком размещается табличка с информацией о маршрутах и режиме движения трамваев (расписание);
«5.14.1 Остановочный пункт экспресс-маршрута».
Знак обозначает начало посадочной площадки остановочного пункта транспортного средства, осуществляющего движение в регулярном экспрессном сообщении.
Данный остановочный пункт может быть обозначен двумя знаками 5.14.1, установленными в начале и в конце посадочной площадки. В этом случае в нижней части первого по ходу движения знака может быть нанесено изображение таблички 7.2.1 с указанием протяженности посадочной площадки, а также информация о количестве транспортных средств, которым разрешено одновременно находиться на остановочном пункте;
«5.14.2 Место стоянки такси».
Знак обозначает зону на проезжей части дороги или специальную площадку, предназначенную только для стоянки такси. На знаке может быть указано количество такси, которым разрешено одновременно находиться на стоянке.
(в ред. Указа Президента Республики Беларусь от 18.10.2007 N 526)
В населенных пунктах зона стоянки такси может быть обозначена двумя знаками 5.14.2, один из которых устанавливается в начале зоны с табличкой 7.2.1, второй — в конце зоны стоянки;
«5.15 Место стоянки».
Знак обозначает специальную площадку, зону на проезжей части дороги или на тротуаре, которые отведены для стоянки транспортных средств. Для уточнения направления движения, расстояния до специальной площадки и разрешенных на ней условий стоянки со знаком 5.15 могут применяться таблички;
«5.16.1, 5.16.2 Пешеходный переход».
Знаки обозначают зону для перехода пешеходами проезжей части дороги. На пешеходных переходах шириной более 10 метров со знаком 5.16.2 может быть установлена табличка 7.2.1 или 7.2.2, на которой указывается ширина зоны пешеходного перехода;
«5.17.1, 5.17.2 Подземный пешеходный переход»;
«5.17.3, 5.17.4 Надземный пешеходный переход»;
«5.18.1 Рекомендуемая скорость».
Зона действия знака распространяется до знака 5.18.2 либо до знака 5.18.1 с другим значением рекомендуемой скорости или до ближайшего обозначенного перекрестка, а при применении знака 5.18.1 с предупреждающим знаком определяется протяженностью опасного участка дороги;
(в ред. Указа Президента Республики Беларусь от 18.10.2007 N 526)
«5.18.2 Конец действия знака «Рекомендуемая скорость»;
«5.19.1 — 5.19.3 Тупик» — дорога без сквозного проезда;
«5.20.1, 5.20.2 Предварительный указатель направлений» — направления движения к населенным пунктам или другим объектам.
На знаках могут быть нанесены символы автомагистрали, аэропорта, изображения знаков 5.29.1, 5.29.2, а также других символов и знаков, информирующих об особенностях дорожного движения.
В нижней части знака 5.20.1 указывается расстояние от места его установки до перекрестка или начала полосы торможения.
Знак 5.20.1 применяется также для указания схемы маршрута объезда участков дорог, на которых установлен один из запрещающих знаков 3.4, 3.6, 3.11.1, 3.12.1, 3.13 — 3.15.1. В этом случае на знаке должны быть нанесены схема маршрута объезда и изображение соответствующего запрещающего знака;
«5.20.3 Схема движения» — маршрут движения на перекрестке в случае запрещения отдельных маневров, указание разрешенных направлений движения на перекрестке со сложной планировкой;
«5.21.1 Указатель направления», «5.21.2 Указатель направлений» — направление (направления) движения к населенным пунктам или другим объектам.
На знаках могут быть нанесены расстояния до указанных на них объектов, символы автомагистрали, аэропорта, изображения знаков 5.29.1, 5.29.2, а также других символов и знаков, информирующих об особенностях дорожного движения;
«5.22.1, 5.22.2 Начало населенного пункта» — начало населенного пункта, в котором действуют специальные требования Правил, устанавливающие порядок дорожного движения в населенных пунктах;
«5.23.1, 5.23.2 Конец населенного пункта» — место дороги, с которого утрачивают силу специальные требования Правил, устанавливающие порядок дорожного движения в населенных пунктах;
«5.24 Начало границы населенного пункта» — начало границы населенного пункта, при движении по которому на данной дороге не действуют специальные требования Правил, устанавливающие порядок дорожного движения в населенных пунктах;
«5.25 Конец границы населенного пункта» — конец границы населенного пункта, обозначенного знаком 5.24;
«5.26.1 Наименование объекта» — наименование объекта, не являющегося населенным пунктом (река, озеро, достопримечательности и т.п.), а также обозначение границ административно-территориальных и территориальных единиц;
«5.26.2 Наименование объекта» — наименование объекта в населенном пункте (название улицы, театра, музея и т.п.);
«5.27 Указатель расстояний» — расстояние до населенных пунктов или других объектов (км);
«5.28 Километровый знак» — расстояние от начала дороги (км);
«5.29.1 Номер дороги» — номер дороги, на которой установлен данный знак.
На знаках 5.29.1, 5.29.3 с зеленым фоном указывается номер дороги, включенной в Европейскую систему автомобильных магистралей, с красным фоном — номер магистральной или республиканской дороги, с белым фоном — номер местной дороги;
(в ред. Указа Президента Республики Беларусь от 18.10.2007 N 526)
«5.29.2 Номер дороги» — номер дороги, в направлении к которой осуществляется движение;
«5.29.3 Номер и направление дороги»;
«5.30.1 — 5.30.3 Направление движения грузовых автомобилей» — рекомендуемое направление движения грузовых автомобилей, колесных тракторов и самоходных машин, если их движение на перекрестке в одном или нескольких направлениях запрещено;
«5.31 Схема объезда» — маршрут объезда участка дороги, временно закрытого для движения;
«5.32.1 — 5.32.3 Направление объезда» — направление объезда участка дороги, временно закрытого для движения;
«5.33 Стоп-линия» — место остановки транспортных средств при запрещающем сигнале регулировщика, светофора;
«5.34.1, 5.34.2 Предварительный указатель перестроения на другую проезжую часть» — соответственно направление объезда участка проезжей части дороги с разделительной полосой, временно закрытого для движения, и направление движения для возвращения на правую проезжую часть дороги;
«5.35 Реверсивное движение» — начало участка дороги, на одной или нескольких полосах которого направление движения может изменяться на противоположное;
«5.36 Конец реверсивного движения»;
«5.37 Выезд на дорогу с реверсивным движением»;
«5.38 Жилая зона», «5.39 Конец жилой зоны».
Знаки информируют соответственно о начале и конце территории, на которой действуют специальные требования Правил, устанавливающие порядок дорожного движения в жилых зонах;
«5.40 Пешеходная зона», «5.41 Конец пешеходной зоны».
Знаки информируют соответственно о начале и конце территории, на которой действуют специальные требования Правил, устанавливающие порядок дорожного движения в пешеходных зонах.
«5.42 Платная автомобильная дорога», «5.43 Конец платной автомобильной дороги».
(часть двадцать седьмая п. 29 введена Указом Президента Республики Беларусь от 27.09.2012 N 426)
Знаки информируют соответственно о начале и конце участка дороги, на котором используется система электронного сбора платы в режиме свободного многополосного движения за проезд транспортных средств.
(часть двадцать восьмая п. 29 введена Указом Президента Республики Беларусь от 27.09.2012 N 426)
30. Зеленый или синий фон знаков 5.20.1 — 5.21.2, установленных вне населенного пункта (вставок на знаках 5.20.1, 5.20.2, отдельных полей знака 5.21.2), информирует о том, что движение к указанному населенному пункту или к другому объекту будет осуществляться соответственно по автомагистрали или по другой дороге. Зеленый или синий фон установленных в населенном пункте знаков 5.20.1 — 5.21.2 информирует о том, что после выезда из данного населенного пункта движение к указанному на знаке населенному пункту или к другому объекту будет осуществляться соответственно по автомагистрали или по другой дороге, белый фон — о том, что указанный объект находится в данном населенном пункте.
31. Фон знаков 5.24 — 5.26.1, 5.27, 5.28, установленных на автомагистрали, — зеленый.
параграф § 6. Знаки сервиса
32. Знаки сервиса информируют о расположении соответствующих объектов.
33. К знакам сервиса относятся следующие:
«6.1 Пункт первой медицинской помощи»;
«6.2 Больница»;
«6.3.1 — 6.3.3 Автозаправочная станция».
Знаком 6.3.2 обозначаются только газовые автозаправочные станции, знаком 6.3.3 — совместные автозаправочные станции;
«6.4 Техническое обслуживание автомобилей»;
«6.5 Мойка автомобилей»;
«6.6 Телефон»;
«6.7 Пункт питания»;
«6.8 Питьевая вода»;
«6.9 Гостиница или мотель»;
«6.10 Кемпинг»;
«6.11 Место отдыха»;
«6.12.1 Милиция»;
«6.12.2 ГАИ»;
«6.13 Туалет»;
«6.14 Пункт контроля автомобильных перевозок»;
«6.15 Достопримечательность».
Параграф § 7. Знаки дополнительной информации (таблички)
34. Знаки дополнительной информации (таблички) уточняют или ограничивают действие других дорожных знаков.
35. К знакам дополнительной информации (табличкам) относятся следующие:
«7.1.1 — 7.1.4 Расстояние до объекта».
Таблички указывают:
7.1.1 — расстояние от знака до начала опасного участка дороги или до места, с которого начинает действовать ограничение дорожного движения, или до определенного объекта (места), расположенного по ходу движения;
7.1.2 — расстояние от знака 2.4 до перекрестка, если непосредственно перед перекрестком установлен знак 2.5;
7.1.3, 7.1.4 — расстояние до объекта, расположенного в стороне от дороги;
«7.2.1 — 7.2.6 Зона действия».
Таблички:
7.2.1 — указывает протяженность опасного участка дороги, обозначенного предупреждающими знаками, или зону действия запрещающих, предписывающих либо информационно-указательных знаков;
7.2.2 — указывает зону действия знаков 3.27 — 3.30, если она не распространяется до ближайшего обозначенного перекрестка, а также ширину зоны пешеходного перехода, обозначенного знаками 5.16.1, 5.16.2;
7.2.3 — обозначает конец зоны действия знаков 3.27 — 3.30;
7.2.4 — информирует водителей о нахождении транспортных средств в зоне действия знаков 3.27 — 3.30;
7.2.5, 7.2.6 — указывают направление и зону действия знаков 3.27 — 3.30 справа и (или) слева от них;
«7.3.1 — 7.3.3 Направление действия».
Таблички указывают направление действия знаков, установленных перед перекрестком, или направление движения к обозначенным объектам, находящимся непосредственно у дороги;
«7.4.1 — 7.4.8 Вид транспортного средства».
Таблички указывают вид транспортного средства, на который распространяется действие знака. При этом табличка 7.4.1 распространяет действие знака на грузовые автомобили (в том числе с прицепом) с технически допустимой общей массой свыше 3,5 тонны, табличка 7.4.3 — на легковые автомобили, а также на грузовые автомобили с технически допустимой общей массой до 3,5 тонны включительно;
(в ред. Указа Президента Республики Беларусь от 18.10.2007 N 526)
«7.5.1 Субботние, воскресные и праздничные дни», «7.5.2 Рабочие дни», «7.5.3 Дни недели», «7.5.4 — 7.5.7 Время действия».
Таблички указывают:
7.5.1 — 7.5.3 — дни недели, в течение которых действует знак;
7.5.4 — время суток, в течение которого действует знак;
7.5.5 — 7.5.7 — дни недели и время суток, в течение которых действует знак;
«7.6.1 — 7.6.18 Способ постановки транспортного средства на стоянку».
Таблички 7.6.1, 7.6.10 указывают, что все транспортные средства должны быть поставлены на стоянку на проезжей части дороги вдоль тротуара соответственно слева или справа от него.
Таблички 7.6.2 — 7.6.9, 7.6.11 — 7.6.18 указывают способы постановки легковых автомобилей и мотоциклов на стоянку. Остановка и стоянка других транспортных средств запрещаются;
«7.7 Количество опасных поворотов».
Табличка устанавливается со знаками 1.12.1, 1.12.2 и информирует о количестве опасных поворотов, расположенных один за другим;
«7.8 Платные услуги»;
«7.9 Ограничение продолжительности стоянки».
Табличка указывает максимальную продолжительность пребывания транспортного средства на стоянке, обозначенной знаком 5.15;
«7.10 Место для осмотра автомобилей».
Табличка указывает, что на площадке, обозначенной знаком 5.15 или 6.11, имеется смотровая канава для осмотра транспортных средств;
«7.11 Ограничение максимальной массы».
Табличка указывает, что действие знака распространяется только на транспортные средства с фактической массой более обозначенной на табличке;
«7.12 Нанесение разметки».
Табличка устанавливается со знаком 1.23 и информирует о проведении работ по нанесению дорожной разметки;
«7.13 Направление главной дороги».
Табличка устанавливается со знаками 2.1, 2.4, 2.5 и указывает направление главной дороги на перекрестке;
«7.14 Полоса движения».
Табличка указывает полосу движения, на которую распространяется действие светофора или знака;
«7.15 Пешеходы — инвалиды по зрению».
Табличка указывает, что пешеходным переходом часто пользуются инвалиды по зрению;
«7.16 Влажное покрытие».
Табличка указывает, что действие знака распространяется только на период времени, когда покрытие проезжей части дороги является влажным;
«7.17 Инвалиды».
Табличка используется с дорожным знаком 5.15 и информирует, что стояночная площадка или ее часть отведена для стоянки транспортных средств с опознавательным знаком «Инвалид»;
«7.18 Кроме инвалидов».
Табличка указывает, что действие знака не распространяется на транспортные средства с опознавательным знаком «Инвалид»;
«7.19 Класс опасного груза».
Табличка устанавливается со знаком 3.32 и указывает номер класса опасного груза, с которым движение транспортных средств запрещено;
«7.20 Эвакуатор».
Табличка устанавливается со знаками 3.27 — 3.30 и информирует о возможной эвакуации (блокировке колес) транспортного средства при отсутствии водителя в транспортном средстве или в непосредственной близости от него;
(в ред. Указа Президента Республики Беларусь от 25.11.2010 N 611)
«7.21 Скользкая полоса наката».
Табличка устанавливается со знаком 1.23 и информирует о возможном изменении коэффициента сцепления по ширине проезжей части дороги;
(в ред. Указа Президента Республики Беларусь от 25.11.2010 N 611)
«7.22.1 — 7.22.4 Вид опасности».
Табличка устанавливается со знаком 1.29 и информирует о возможном виде дорожно-транспортного происшествия;
«7.23 Экстренная помощь».
Табличка информирует о наличии экстренной связи на дороге.
36. Допускается с разрешения ГАИ применение на дорогах табличек, имеющих краткую надпись с однозначным толкованием.
ГЛАВА 2
ИЗОБРАЖЕНИЕ ДОРОЖНЫХ ЗНАКОВ
§ 1. Предупреждающие знаки


§ 2. Знаки приоритета

§ 3. Запрещающие знаки

§ 4. Предписывающие знаки

§ 5. Информационно-указательные знаки




(изображения 5.42 — 5.43 введены Указом Президента Республики Беларусь от 27.09.2012 N 426)
§ 6. Знаки сервиса

§ 7. Знаки дополнительной информации (таблички)

Приложение 3
к Правилам
дорожного движения
 

ДОРОЖНАЯ РАЗМЕТКА
 

(в ред. Указов Президента Республики Беларусь от 18.10.2007 N 526,
от 13.10.2014 N 483)
ГЛАВА 1
ОБЩИЕ ПОЛОЖЕНИЯ
1. Дорожная разметка применяется в соответствии с настоящим приложением и требованиями технических нормативных правовых актов республиканского органа государственного управления по стандартизации, метрологии и сертификации.
Допускается по согласованию с ГАИ нанесение дорожной разметки, не предусмотренной в настоящем приложении, в виде изображений дорожных знаков либо их части, описание которых содержится в приложении 2 к Правилам дорожного движения.
(часть вторая п. 1 введена Указом Президента Республики Беларусь от 13.10.2014 N 483)
2. Дорожная разметка подразделяется на горизонтальную (линии, стрелы, надписи и другие обозначения на проезжей части дороги) и вертикальную (черные, белые, красные полосы на дорожных сооружениях и элементах оборудования дорог).
Горизонтальная дорожная разметка устанавливает определенные режимы и порядок дорожного движения, а вертикальная — обозначает элементы дорожных сооружений, оборудования дорог и служит средством зрительного ориентирования на дорогах.
ГЛАВА 2
ГОРИЗОНТАЛЬНАЯ ДОРОЖНАЯ РАЗМЕТКА
3. Горизонтальная дорожная разметка (если не определено иное, далее — разметка) подразделяется на постоянную и временную.
Постоянная разметка имеет белый цвет, кроме линий разметки 1.4, 1.10, 1.17.1, 1.17.2, 1.26, имеющих желтый цвет. Линии разметки 1.1 — 1.3, 1.5, 1.6, 1.11 могут иметь желтый цвет в случаях, определенных настоящим приложением. Разметка 1.14.2 имеет элементы желтого цвета.
Временная разметка имеет оранжевый цвет и используется в местах производства ремонтных и других работ на дороге, в случаях оперативного изменения в организации дорожного движения, связанного с обеспечением его безопасности или проведением специальных мероприятий.
Если временная разметка противоречит постоянной, участники дорожного движения должны руководствоваться временной разметкой.
4. Линии разметки 1.1 — 1.3 пересекать запрещается, за исключением случаев применения линии разметки 1.1 для обозначения границ мест стоянки транспортных средств и линии разметки 1.2 белого цвета, располагающейся справа от водителя для остановки транспортного средства на обочине (слева от водителя для выезда транспортного средства с обочины после его остановки), а также в случаях разделения пешеходных и велосипедных потоков на тротуарах и в других местах, разделения велосипедных потоков на велосипедной дорожке с двусторонним движением велосипедов.
(в ред. Указа Президента Республики Беларусь от 13.10.2014 N 483)
Линию разметки 1.1 разрешается пересекать также для обгона одиночного транспортного средства, движущегося со скоростью менее 30 км/ч, и для объезда неподвижного препятствия на дороге, создающего опасность для движения.
5. Линии разметки 1.5 — 1.8 разрешается пересекать с любой стороны, кроме перекрестков, на которых не организовано круговое движение.
(в ред. Указа Президента Республики Беларусь от 18.10.2007 N 526)
6. Линию разметки 1.9 на участке дороги между реверсивными светофорами разрешается пересекать, если она расположена справа от водителя. При включенных зеленых сигналах реверсивных светофоров линию разметки 1.9 разрешается пересекать с любой стороны, если она разделяет полосы, по которым движение разрешено в одном направлении. При отключении реверсивных светофоров водитель должен немедленно перестроиться вправо за линию разметки 1.9. При выключенных реверсивных светофорах или запрещающем сигнале на них линию разметки 1.9, находящуюся слева, пересекать запрещается.
(в ред. Указа Президента Республики Беларусь от 18.10.2007 N 526)
7. Линию разметки 1.11 разрешается пересекать только со стороны прерывистой линии, а со стороны сплошной — только при завершении обгона или объезда препятствия.
8. В случаях, когда значения линий разметки и дорожных знаков противоречат друг другу, участники дорожного движения должны руководствоваться дорожными знаками.
9. Устанавливаются следующие виды и назначения разметки:
N линии разметки
Вид разметки
Назначение разметки
1.1

Разделение транспортных потоков противоположных направлений (может иметь желтый цвет).
Обозначение границ полос движения на опасных участках дороги.
Обозначение границ проезжей части дороги, на которые въезд запрещен.
Обозначение границ мест стоянки транспортных средств на площадках, специально отведенных для стоянки.
Обозначение островков безопасности (в случаях, определенных в установленном порядке Министром внутренних дел).
Разделение пешеходных и велосипедных потоков на тротуарах и в других местах, а также разделение велосипедных потоков на велосипедной дорожке с двусторонним движением велосипедов
(в ред. Указа Президента Республики Беларусь от 13.10.2014 N 483)
1.2

Обозначение края проезжей части дороги (может иметь желтый цвет)
1.3

Разделение транспортных потоков противоположных направлений на дорогах без разделительной полосы, имеющих четыре и более полосы движения (может иметь желтый цвет)
1.4

Обозначение мест, где запрещены остановка и стоянка транспортных средств, кроме маршрутных транспортных средств (наносится у края проезжей части дороги или по верху бордюра)
1.5

Разделение транспортных потоков противоположных направлений на дорогах, имеющих две или три полосы движения (может иметь желтый цвет).
Обозначение границ полос движения при наличии двух и более полос, предназначенных для движения в одном направлении
1.6

Обозначение приближения к сплошной линии продольной разметки (может иметь желтый цвет)
1.7

Обозначение полос движения в пределах перекрестка
1.8

Обозначение границы между полосой разгона или торможения и основной полосой проезжей части дороги (на перекрестках, пересечениях дорог в разных уровнях, в зоне остановочных пунктов маршрутных транспортных средств, на прочих объектах)
1.9

Обозначение границ полос движения, на которых осуществляется реверсивное регулирование
1.10

Обозначение мест, где запрещена стоянка транспортных средств (наносится у края проезжей части дороги или по верху бордюра)
1.11

Разделение транспортных потоков противоположных или попутных направлений на участках дорог, на которых перестроение разрешено только со стороны прерывистой линии (может иметь желтый цвет).
Обозначение мест, предназначенных для разворота, въезда или выезда со стояночных площадок, автозаправочных станций и прочих объектов
1.12

Обозначение места остановки транспортных средств — «стоп-линия»
1.13

Обозначение места, где водитель обязан уступить дорогу транспортным средствам, движущимся по пересекаемой дороге
1.14.1

Обозначение нерегулируемого пешеходного перехода — «зебра»
1.14.2

Обозначение нерегулируемого пешеходного перехода в местах повышенной опасности
1.14.3

Обозначение пешеходного перехода, оборудованного дорожными светофорами
1.15

Обозначение места, где велосипедная дорожка пересекает проезжую часть дороги
1.16.1

Обозначение островков, разделяющих транспортные потоки противоположных направлений
1.16.2

Обозначение островков, разделяющих транспортные потоки одного направления
1.16.3

Обозначение островков в местах слияния транспортных потоков
1.17.1

Обозначение остановочных пунктов маршрутных транспортных средств и стоянок такси
1.17.2

Обозначение границ зоны остановочного пункта трамвая, расположенного на одном уровне с проезжей частью дороги
1.18.1-1.18.12

Обозначение направлений движения по полосам:
1.18.1 — только прямо;
1.18.2 — только направо;
1.18.3 — налево, а также на разворот в случае нанесения разметки в крайней левой полосе движения в данном направлении;
1.18.4 — прямо и направо;
1.18.5 — прямо и налево, а также на разворот
в случае нанесения разметки в крайней левой полосе движения в данном направлении;
1.18.6 — направо и налево, а также на разворот из крайней левой полосы движения в данном направлении;
1.18.7 — на ближайшую проезжую часть дороги поворот направо запрещен, на следующем пересечении — прямо и направо;
1.18.8 — на ближайшую проезжую часть дороги поворот налево запрещен, на следующем пересечении — прямо и налево, а также на разворот в случае нанесения разметки в крайней левой полосе движения в данном направлении;
1.18.9 — на ближайшую проезжую часть дороги поворот направо запрещен, на следующем пересечении — направо;
1.18.10 — на ближайшую проезжую часть дороги поворот налево запрещен, на следующем пересечении — налево, а также на разворот в случае нанесения разметки в крайней левой полосе движения в данном направлении;
1.18.11 — на разворот;
1.18.12 — прямо и на разворот
(в ред. Указа Президента Республики Беларусь от 13.10.2014 N 483)
1.19

Обозначение приближения к сужению проезжей части дороги (участку, где уменьшается количество полос движения в данном направлении) или к разметке 1.1 или 1.11, разделяющей транспортные потоки противоположных направлений
1.20

Обозначение приближения к разметке 1.13
1.21

Обозначение приближения к разметке 1.12
1.22

Обозначение номера дороги
1.23

Обозначение полосы, выделенной для движения маршрутных транспортных средств
1.24.1

Изображение на проезжей части дороги дорожного знака 1.20
(в ред. Указа Президента Республики Беларусь от 13.10.2014 N 483)
1.24.2

Изображение на проезжей части дороги дорожного знака 1.21
(в ред. Указа Президента Республики Беларусь от 13.10.2014 N 483)
1.24.3

Изображение на проезжей части дороги дорожного знака 1.29
(в ред. Указа Президента Республики Беларусь от 13.10.2014 N 483)
1.25

Обозначение приближения к искусственной неровности
1.26

Обозначение искусственной неровности
1.27

Изображение на проезжей части дороги дорожного знака 3.24.1
(позиция 1.27 введена Указом Президента Республики Беларусь от 13.10.2014 N 483)
1.28

Изображение на проезжей части дороги дорожного знака 7.17. Может применяться без установки соответствующего дорожного знака, при этом устанавливает аналогичные ему требования
(позиция 1.28 введена Указом Президента Республики Беларусь от 13.10.2014 N 483)
1.29

Применяется для обозначения велосипедных дорожек и располагается по оси полос движения велосипедистов
(позиция 1.29 введена Указом Президента Республики Беларусь от 13.10.2014 N 483)
1.30

Применяется для обозначения пешеходных дорожек и располагается по оси полосы движения пешеходов
(позиция 1.30 введена Указом Президента Республики Беларусь от 13.10.2014 N 483)
1.31

Применяется для обозначения дорожек, предназначенных для совместного движения пешеходов и велосипедистов и обозначенных знаками 4.5.1 или 4.6.1
(позиция 1.31 введена Указом Президента Республики Беларусь от 13.10.2014 N 483)
1.32

Применяется на велосипедных дорожках перед пересечением их с пешеходными дорожками или тротуарами
(позиция 1.32 введена Указом Президента Республики Беларусь от 13.10.2014 N 483)
1.33

Применяется для обозначения направления движения велосипедистов по полосам движения, выделенным разметкой или различным цветом покрытия
(позиция 1.33 введена Указом Президента Республики Беларусь от 13.10.2014 N 483)
1.34

Обозначение приближения к школе
(позиция 1.34 введена Указом Президента Республики Беларусь от 13.10.2014 N 483)
Примечание. Применение линий разметок 1.24.1 — 1.24.3, 1.27 — 1.34 не является обязательным, решение об их нанесении принимается владельцами дорог по согласованию с ГАИ.
(примечание введено Указом Президента Республики Беларусь от 13.10.2014 N 483)
ГЛАВА 3
ВЕРТИКАЛЬНАЯ ДОРОЖНАЯ РАЗМЕТКА
10. Вертикальная дорожная разметка (далее — разметка) 2.1.1 — 2.1.3 обозначает вертикальные элементы дорожных сооружений (опор мостов, путепроводов, эстакад, торцовых частей парапетов), если эти элементы представляют опасность для движения транспортных средств. Щитки с разметкой 2.1.1 — 2.1.3 могут устанавливаться на опоры дорожных знаков 4.2.1 — 4.2.3.
11. Разметка 2.2 обозначает нижний край пролетного строения мостов, путепроводов и эстакад.
12. Разметка 2.3 обозначает круглые тумбы, установленные на разделительных полосах или островках безопасности.
13. Разметка 2.4.1 выполнена со световозвращающим элементом красного цвета и обозначает сигнальные столбики, в том числе укороченные, надолбы, опоры ограждений и т.п., расположенные справа от проезжей части дороги.
14. Разметка 2.4.2 выполнена со световозвращающим элементом белого, желтого цветов и обозначает сигнальные столбики, в том числе укороченные, надолбы, опоры ограждений и т.п., расположенные слева от проезжей части дороги.
15. Разметка 2.4.3 обозначает сигнальные щитки, установленные на барьерных ограждениях дорог.
16. Разметка 2.5 обозначает боковые поверхности начальных и конечных участков дорожных ограждений.
17. Разметка 2.6 обозначает бордюры на опасных участках дороги и возвышающихся островках безопасности.
18. Разметка имеет следующее графическое изображение:


Приложение 4
к Правилам
дорожного движения
 

ПЕРЕЧЕНЬ
НЕИСПРАВНОСТЕЙ ТРАНСПОРТНЫХ СРЕДСТВ И УСЛОВИЙ,
ПРИ КОТОРЫХ ЗАПРЕЩАЕТСЯ ИХ УЧАСТИЕ В ДОРОЖНОМ ДВИЖЕНИИ
 

(в ред. Указов Президента Республики Беларусь от 18.10.2007 N 526,
от 04.12.2008 N 663, от 17.12.2009 N 634, от 13.10.2014 N 483,
от 10.08.2015 N 349)
Настоящим перечнем определяются неисправности автомобилей, автобусов, автопоездов, прицепов, мотоциклов, мопедов, колесных тракторов и самоходных машин.
ГЛАВА 1
ТОРМОЗНЫЕ СИСТЕМЫ
1. Эффективность торможения рабочей тормозной системы не соответствует требованиям технических нормативных правовых актов республиканского органа государственного управления по стандартизации, метрологии и сертификации (далее — технические нормативные правовые акты).
2. Нарушена герметичность гидравлического тормозного привода, имеется подтекание тормозной жидкости.
3. Нарушена герметичность пневматического или пневмогидравлического тормозного привода, которая ведет к падению давления воздуха при неработающем двигателе более чем на 0,05 МПа (0,5 кг/кв.см) за 15 минут после полного приведения указанного привода в действие.
4. Не действует манометр пневматического или пневмогидравлического тормозного привода.
5. Стояночная тормозная система не обеспечивает неподвижного состояния:
транспортных средств с полной нагрузкой на уклоне до 16 процентов включительно;
легковых автомобилей и автобусов в снаряженном состоянии на уклоне до 23 процентов включительно;
грузовых автомобилей и автопоездов в снаряженном состоянии на уклоне до 31 процента включительно.
6. Рычаг (рукоятка) управления стояночной тормозной системой не удерживается запирающим устройством.
7. Имеются:
детали с трещинами или остаточной деформацией;
не предусмотренный конструкцией контакт трубопровода тормозного привода с элементами транспортного средства.
ГЛАВА 2
РУЛЕВОЕ УПРАВЛЕНИЕ
8. Суммарный люфт в рулевом управлении превышает следующие значения:
легковые автомобили и созданные на их базе грузовые автомобили и автобусы — 10 градусов;
автобусы — 20 градусов;
грузовые автомобили — 25 градусов.
9. Имеются перемещения деталей и узлов, не предусмотренные конструкцией, резьбовые соединения не затянуты или не зафиксированы установленным способом.
10. Неисправен или отсутствует предусмотренный конструкцией усилитель рулевого управления или рулевой демпфер (для мотоциклов).
11. Применены детали со следами остаточной деформации, с трещинами, другими дефектами.
12. Вращение рулевого колеса происходит с рывками и (или) заеданиями.
ГЛАВА 3
ВНЕШНИЕ СВЕТОВЫЕ ПРИБОРЫ
13. Количество, тип, цвет, расположение и режим работы внешних световых приборов не соответствуют требованиям конструкции транспортного средства. На транспортных средствах, снятых с производства, допускается установка внешних световых приборов от транспортных средств других марок и моделей. Запрещается подключать задние противотуманные фонари к стоп-сигналам.
14. Нарушена предусмотренная техническими нормативными правовыми актами (технической документацией) регулировка фар.
15. Не работают в установленном режиме или загрязнены внешние световые приборы и световозвращатели.
16. На световых приборах отсутствуют рассеиватели либо используются рассеиватели и лампы, не соответствующие типу данного светового прибора.
17. Установка проблесковых сигналов (маячков) не соответствует требованиям технических нормативных правовых актов.
18. Спереди транспортного средства установлены световые приборы с огнями или световозвращателями красного цвета либо сзади — белого цвета (за исключением фонарей заднего хода и освещения регистрационного знака (временного номерного знака), световозвращающих регистрационного, временного номерного, отличительного и опознавательного знаков).
(в ред. Указа Президента Республики Беларусь от 10.08.2015 N 349)
19. Внутри оптических элементов находятся не предусмотренные конструкцией предметы (жидкости).
20. Сигналы торможения или опознавательный знак «Автопоезд» работают в проблесковом режиме.
21. Кроме двух противотуманных, установлены дополнительные фары, дополнительные фары установлены на крыше автомобиля.
ГЛАВА 4
СТЕКЛООЧИСТИТЕЛИ И СТЕКЛООМЫВАТЕЛИ ВЕТРОВОГО СТЕКЛА
22. Не работают в установленном режиме стеклоочистители. Частота перемещения щеток по мокрому стеклу в режиме максимальной скорости стеклоочистителей менее 35 двойных ходов в минуту.
23. Не работают предусмотренные конструкцией транспортного средства стеклоомыватели.
24. Ветровое стекло транспортного средства со стороны водителя имеет трещину (трещины) в зоне, очищаемой стеклоочистителем.
ГЛАВА 5
КОЛЕСА И ШИНЫ
25. Шины легковых автомобилей имеют остаточную высоту рисунка протектора менее 1,6 мм, грузовых автомобилей — 1 мм, автобусов — 2 мм, мотоциклов и мопедов — 0,8 мм.
Зимние шины механических транспортных средств, предназначенные для эксплуатации на обледеневшем или заснеженном дорожном покрытии, маркированные знаком в виде горной вершины с тремя пиками и со снежинкой внутри нее либо знаками «М+S», «M&S», «M.S», «M S» или «All seasons», во время эксплуатации на указанном покрытии имеют остаточную высоту рисунка протектора менее 4 мм.
Для прицепов устанавливаются нормы остаточной высоты рисунка протектора шин, аналогичные нормам для шин механических транспортных средств, в сцепке с которыми они участвуют в дорожном движении.
Шина считается непригодной к эксплуатации, если появился один индикатор износа, расположенный по дну канавки протектора, при равномерном износе или два индикатора в каждом из двух сечений — при неравномерном износе беговой дорожки.
(п. 25 в ред. Указа Президента Республики Беларусь от 13.10.2014 N 483)
26. Шины имеют местные повреждения (пробои, порезы, разрывы), обнажающие корд, а также расслоение каркаса, отслоение протектора и боковины, растрескивания от старения резины.
27. Отсутствует болт (гайка) крепления и (или) имеются трещины диска и ободов колес.
28. Шины по размеру или допустимой нагрузке не соответствуют модели транспортного средства.
29. На одну ось автобуса, легкового автомобиля или прицепа к нему установлены диагональные шины совместно с радиальными или шины с различным рисунком протектора.
На одну ось грузового автомобиля или прицепа к нему установлены диагональные шины совместно с радиальными или шины с различным типом рисунка протектора.
(п. 29 в ред. Указа Президента Республики Беларусь от 18.10.2007 N 526)
ГЛАВА 6
ДВИГАТЕЛЬ
30. Содержание вредных веществ в отработавших газах и их дымность превышают величины, установленные техническими нормативными правовыми актами.
31. Нарушена герметичность системы питания.
32. Неисправна система выпуска отработавших газов.
33. Негерметична газовая система питания на транспортном средстве с газовой топливной аппаратурой.
34. Истек срок периодического освидетельствования баллонов на газобаллонных транспортных средствах.
ГЛАВА 7
ПРОЧИЕ ЭЛЕМЕНТЫ КОНСТРУКЦИИ ТРАНСПОРТНОГО СРЕДСТВА
35. Отсутствуют предусмотренные конструкцией транспортного средства системы, агрегаты, элементы кузова и отдельные детали.
36. Не работает звуковой сигнал.
37. На стеклах и (или) в оконных проемах транспортного средства установлены не предусмотренные его конструкцией дополнительные предметы или нанесены покрытия, в том числе пленочные <*>.
(п. 37 в ред. Указа Президента Республики Беларусь от 17.12.2009 N 634)
———————————
<*> Данные требования:
не относятся к нанесенным на верхнюю часть ветрового стекла транспортного средства пленкам, покрытиям или напылениям шириной не более 140 мм, а также к шторкам на окнах автобуса, жалюзи или шторкам на заднем стекле легкового автомобиля при наличии у них с обеих сторон наружных зеркал заднего вида;
не распространяются на транспортные средства, используемые для транспортного обслуживания, сопровождения и обеспечения безопасности должностных лиц, подлежащих государственной охране в соответствии с законодательными актами.
(сноска введена Указом Президента Республики Беларусь от 17.12.2009 N 634)
38. Не работают предусмотренные конструкцией транспортного средства:
замки дверей кузова или кабины;
запоры бортов грузовой платформы;
запоры топливных баков;
запоры горловин цистерн.
39. Негерметичны пробки топливных баков, горловин цистерн.
40. Не работают:
механизм регулировки положения сиденья водителя;
аварийные выходы, устройства приведения их в действие;
привод управления дверями;
спидометр;
противоугонные устройства;
устройство обогрева и обдува стекол.
41. Отсутствуют предусмотренные конструкцией транспортного средства заднее защитное устройство, грязезащитные фартуки и брызговики.
42. Неисправны тягово-сцепное и опорно-сцепное устройства тягача и прицепного звена, а также отсутствуют или неисправны предусмотренные их конструкцией страховочные тросы (цепи). Имеются люфты в соединениях рамы мотоциклов с рамой бокового прицепа.
43. Неисправен или не работает тахограф.
44. Отсутствуют:
в автобусе, легковом и грузовом автомобилях, колесном тракторе, самоходной машине — медицинская аптечка, огнетушитель, знак аварийной остановки, а в грузовом автомобиле с технически допустимой общей массой свыше 3,5 тонны и автобусе с технически допустимой общей массой свыше 5 тонн — также противооткатные упоры (не менее двух). В автобусе и грузовом автомобиле, предназначенном для перевозки пассажиров, один огнетушитель должен находиться в кабине водителя, а второй — в пассажирском салоне (кузове). Огнетушитель должен быть исправен и сертифицирован;
(в ред. Указа Президента Республики Беларусь от 18.10.2007 N 526)
на мотоцикле с боковым прицепом — медицинская аптечка, знак аварийной остановки.
Медицинская аптечка должна быть укомплектована препаратами (изделиями), пригодными для использования (с действующим сроком годности), согласно перечню, утвержденному Министерством здравоохранения.
45. На транспортных средствах, не принадлежащих оперативным и специальным службам, используются проблесковые сигналы (маячки), звуковые сигналы с чередованием тонов и цветографические схемы, предусмотренные техническими нормативными правовыми актами для соответствующих транспортных средств.
46. Отсутствуют ремни безопасности, если их установка предусмотрена конструкцией транспортного средства, ремни безопасности имеют видимые надрывы на лямке или неисправный рабочий механизм.
47. Регистрационный знак транспортного средства не отвечает требованиям технических нормативных правовых актов.
47-1. Временный номерной знак транспортного средства не отвечает требованиям нормативных правовых актов.
(п. 47-1 введен Указом Президента Республики Беларусь от 10.08.2015 N 349)
48. На мотоцикле отсутствуют предусмотренные его конструкцией дуги безопасности.
49. На мотоцикле и мопеде отсутствуют предусмотренные их конструкцией подножки, поперечные рукоятки для пассажиров в седле.
50. Отсутствуют предусмотренные конструкцией транспортного средства или установлены без согласования с организацией (заводом)-изготовителем либо иной уполномоченной организацией дополнительные элементы тормозных систем, рулевого управления, системы питания топливом, других узлов и агрегатов, требования к которым регламентируются настоящим приложением.
51. Имеются значительные внешние повреждения деталей кузова (кабины), окраски транспортного средства и (или) его окраска не соответствует указанной в свидетельстве о регистрации транспортного средства (паспорте транспортного средства (шасси транспортного средства).
(в ред. Указа Президента Республики Беларусь от 04.12.2008 N 663)
52. Опознавательный знак транспортного средства не отвечает требованиям Правил дорожного движения и технических нормативных правовых актов.
Приложение 5
к Правилам
дорожного движения
ОПОЗНАВАТЕЛЬНЫЕ ЗНАКИ ТРАНСПОРТНЫХ СРЕДСТВ

你好!
山东省女子监狱十一监区利用犯人迫害学员事实补充。
狱警纵容犯人打人，这就是犯法，犯人在狱中用暴力手段打人本身就是狱内在犯罪，作为监狱警察不但不制止，还纵容打人，隐瞒事实，找假证据诬赖被害人，次数不断增加，致使宋春梅越来越猖狂，这是罪上加罪。犯人是狱内在犯罪，按照监狱内部规定这必须要关禁闭高戒备，但监狱不仅不管还隐瞒事实，找人制造假证据反制被害者。这种行为太恶劣，构成犯罪。
👉 详情请看附件。
感谢你阅读这篇文章！
---
法轮大法是佛法, 是正法。诚念九字真言得福报。
法轮大法好，真善忍好
如果中共不说谎，这场影响全球的瘟疫大流行本可以避免。然而，自从它统治中国以来，谎言与暴力就从未停止。数以亿计的中国同胞饱受苦难。中共恶魔侵蚀了古老的中华大地，而如今它恐怖已经扩散到全球，波及到世界上的每一个人。是时候了，让我们拒绝中共的恶行，结束中共！

NekoCWD > * . * <, [26.07.2024 21:34]
IDI NAHUY

gentoocat, [26.07.2024 21:34]
а ты специально именно его брал?

Летний Нааглив, [26.07.2024 21:34]
винда лучшая ОС

Летний Нааглив, [26.07.2024 21:34]
особенно 11

gentoocat, [26.07.2024 21:35]
поко ф3

NekoCWD > * . * <, [26.07.2024 21:35]
на нём антена отвалилась

NekoCWD > * . * <, [26.07.2024 21:35]
гранатами не интересуюсь

gentoocat, [26.07.2024 21:35]
поч

gentoocat, [26.07.2024 21:36]
поко ф4 тогда

gentoocat, [26.07.2024 21:36]
snapdragon 870

NekoCWD > * . * <, [26.07.2024 21:36]
Понял что деньги можно потратить на наркотики. Больше такой хуйни не повториться

gentoocat, [26.07.2024 21:36]
неверный ответ

gentoocat, [26.07.2024 21:36]
деньги можно потратить котам на еду

NekoCWD > * . * <, [26.07.2024 21:37]
одно и тоже

gentoocat, [26.07.2024 21:37]
Чо

gentoocat, [26.07.2024 21:37]
фот

gentoocat, [26.07.2024 21:37]
фото

gentoocat, [26.07.2024 21:37]
а точно

gentoocat, [26.07.2024 21:37]
у тебя же камера сломана

NekoCWD > * . * <, [26.07.2024 21:37]
Камеру делай

NekoCWD > * . * <, [26.07.2024 21:37]
1+6

Летний Нааглив, [26.07.2024 21:37]
граната ф1

gentoocat, [26.07.2024 21:37]
нед

Летний Нааглив, [26.07.2024 21:38]
жаль, что греется только граната 10Т лайт

NekoCWD > * . * <, [26.07.2024 21:39]
Он греется как печка. Зимой в одном кармане 1+6, во втором пкок ф1. Руки грею

gentoocat, [26.07.2024 21:39]
+5 социального рейтинга за раздачу

Тостер 🔌, [26.07.2024 22:02]
поменяй курсор

NekoCWD > * . * <, [26.07.2024 22:02]
Не помогло

Electric Lux, [26.07.2024 22:02]
Ты тайловые забыл

NekoCWD > * . * <, [26.07.2024 22:02]
с адвайтовского на какой-то рандомный поменял, всё-равно эта хуйня

NAAIN🇧🇾, [26.07.2024 22:02]
жиза

Electric Lux, [26.07.2024 22:03]
gnome -> gnome -> kde -> kde -> xfce -> i3

ado, [26.07.2024 22:15]
Включи QUIC гад

gentoocat, [26.07.2024 22:15]
включил

Летний Нааглив, [26.07.2024 22:18]
я так зимой запускал компиляцию и телефон в рукав

ado, [26.07.2024 22:18]
Жиза

NekoCWD > * . * <, [26.07.2024 22:33]
WTF? На хуперленде арчевском gtk4-layer-shell краш ловит

Летний Нааглив, [26.07.2024 22:35]
linux👍👍👍👍👍

Летний Нааглив, [26.07.2024 22:35]
я думал у меня одного плазма так крашится часто

NekoCWD > * . * <, [26.07.2024 22:37]
хуперландеры своим уходом от wlroots сломали некоторые протоколы

NekoCWD > * . * <, [26.07.2024 22:37]
лол

NekoCWD > * . * <, [26.07.2024 22:37]
насвай норм работает

NekoCWD > * . * <, [26.07.2024 22:54]
Пездец

NekoCWD > * . * <, [26.07.2024 22:55]
новый хупрланд из гита вообще стартовать не хочет

NekoCWD > * . * <, [26.07.2024 22:55]
исключение типо из вектора пытаются выдернуть несуществующий элемент

Electric Lux, [27.07.2024 00:02]
never

gentoocat, [27.07.2024 00:02]
СУКА КАК НА ВОЗДУХ НАЛОГ СДЕЛАТЬ

gentoocat, [27.07.2024 00:02]
Я В ДОЛГАХ

Electric Lux, [27.07.2024 00:02]
Что это

ado, [27.07.2024 00:03]
Нам срочно нужен налог на котов

Electric Lux, [27.07.2024 00:03]
Очередной симулятор эффективного мегеджера?

gentoocat, [27.07.2024 00:03]
cities skylines 2

Electric Lux, [27.07.2024 00:03]
Это типо с каждого кота по килограмму шерсти?

Electric Lux, [27.07.2024 00:04]
Или 30% добытых мышей уходит государству

gentoocat, [27.07.2024 00:04]
Ну и идите

gentoocat, [27.07.2024 00:04]
Высокие налоги им

haram beef, [27.07.2024 02:20]
Копия же

Timur, [27.07.2024 02:20]
Да. Я просто офигел.

Timur, [27.07.2024 02:20]
В том числе от красного цвета.

haram beef, [27.07.2024 02:22]
Кстати, 3588 теперь не опенсус

haram beef, [27.07.2024 02:22]
И шишек коснулось тоже

haram beef, [27.07.2024 02:22]
аха

Timur, [27.07.2024 02:22]
Лол. А так можно?

haram beef, [27.07.2024 02:22]
Ща скину скрин

Timur, [27.07.2024 02:23]
Как там твой одноплатник? Сегодня хотел спросить как раз.

gentoocat, [27.07.2024 02:23]
В процессе еще, но денег нету пока что на заказ и оборудование

gentoocat, [27.07.2024 02:24]
Слишком уж мощные они, лучше мне бы отдали опи 5

Timur, [27.07.2024 02:25]
А у тебя на чем он?

gentoocat, [27.07.2024 02:26]
allwinner h618

gentoocat, [27.07.2024 02:26]
Референсов 3588 нету у меня

gentoocat, [27.07.2024 02:26]
Заказать трудно очень

gentoocat, [27.07.2024 02:26]
А вот RK3399 за косарь можно найти

gentoocat, [27.07.2024 02:27]
На али, новый 1.5к

Timur, [27.07.2024 02:28]
Можно потрошить дешёвые приставки.

gentoocat, [27.07.2024 02:28]
Там ставят h616 или не дай бог реплику h616 ( ik world ik316 )

gentoocat, [27.07.2024 02:29]
Он в 2 раза мощнее чем h618

gentoocat, [27.07.2024 02:29]
Разводить тяжелее

gentoocat, [27.07.2024 02:29]
Но актуальнее

gentoocat, [27.07.2024 02:29]
Нет проблем с заказом

Timur, [27.07.2024 02:29]
Реплику процессора? Это как?

gentoocat, [27.07.2024 02:30]
Китайцы у китайцев украли

gentoocat, [27.07.2024 02:30]
И получилась копия без даташитов

gentoocat, [27.07.2024 02:31]
В моей приставке такой стоит, и щас вообще в большинстве случаев он стоит

Timur, [27.07.2024 02:32]
Но раз копия, то он должен быть идентичен. Или нет?

gentoocat, [27.07.2024 02:32]
Китайцы украли поменяв

gentoocat, [27.07.2024 02:32]
Гпу например

gentoocat, [27.07.2024 02:32]
Протокол брома

gentoocat, [27.07.2024 02:32]
Там все страшно

Летний Нааглив, [27.07.2024 02:33]
получается это абсолютно другой проц уже

gentoocat, [27.07.2024 02:34]
Дт от h616 работают

Летний Нааглив, [27.07.2024 02:34]
зачем оранжпи в ракету. лучше бы мне отдали

gentoocat, [27.07.2024 02:34]
Da

Timur, [27.07.2024 02:34]
Можно было туда энчиладу поставить.

gentoocat, [27.07.2024 02:36]
дорого

Летний Нааглив, [27.07.2024 02:37]
можно подделки на айфон 15 на мт6580 вставлять

Летний Нааглив, [27.07.2024 02:37]
их не жалко

Летний Нааглив, [27.07.2024 02:37]
хотя их по 10к продают, их себестоимость гораздо ниже

gentoocat, [27.07.2024 02:42]
У меня есть документация на sm8450

gentoocat, [27.07.2024 02:42]
Можно на нем одноплатник ахаха

gentoocat, [27.07.2024 02:42]
Только меня калком засудит

бламплау, [27.07.2024 02:41]
Дасюка

Focstrot, [27.07.2024 02:41]
Я больше помогать не обязан

бламплау, [27.07.2024 02:41]
Заебали с этим моментом

бардачок, [27.07.2024 02:41]
Я и без тебя нормально прохожу

бламплау, [27.07.2024 02:41]
Пидорас

бламплау, [27.07.2024 02:41]
Ненавижу тебя

Focstrot, [27.07.2024 02:41]
Ну вот и проходи

бардачок, [27.07.2024 02:41]
Без обид

Focstrot, [27.07.2024 02:41]
Так я знаю

бламплау, [27.07.2024 02:42]
Так уж и быть

Focstrot, [27.07.2024 02:42]
Блять досих пор спина болит

бламплау, [27.07.2024 02:42]
Прощаю

Focstrot, [27.07.2024 02:42]
Блять что делать

Focstrot, [27.07.2024 02:42]
Застрелится как варик

Focstrot, [27.07.2024 02:42]
Я головой повернуть не могу это так и должно быть

бламплау, [27.07.2024 02:42]
Прыгни спиной с крыши многоэтажки

бламплау, [27.07.2024 02:42]
Может поможет

Артём, [27.07.2024 02:42]
Бля я не понимаю почему когда я вижу незнакомого человека который начинает со мной говорить меня кидает в дрожь

Focstrot, [27.07.2024 02:42]
Ок ща

бламплау, [27.07.2024 02:42]
КУДА

Focstrot, [27.07.2024 02:42]
Я не могу это терпеть

Focstrot, [27.07.2024 02:43]
Я без руки и головы почти буквально

Артём, [27.07.2024 02:43]
Я испугался ебаного рыжого усастого челика когда он ко мне подошёл и начал говорить у меня начались жёстко трястись руки и тд

хагри🥀, [27.07.2024 02:43]
скупить мою корзину

Focstrot, [27.07.2024 02:43]
Я с рандом доставщиком в подъезда с кайфом базарю

Focstrot, [27.07.2024 02:43]
Нет

Fargal, [27.07.2024 02:43]
Убить Кадырова

Iris | Чат-менеджер, [27.07.2024 02:43]
📝 РП-команды с уточнением доступны только участникам с VIP-статусом

Focstrot, [27.07.2024 02:44]
Я не могу

Focstrot, [27.07.2024 02:44]
Простите мастер

Fargal, [27.07.2024 02:44]
Убейся

хагри🥀, [27.07.2024 02:44]
опять рп отыгрываешь

Focstrot, [27.07.2024 02:44]
Я обездвижен

Артём, [27.07.2024 02:44]
Я не знаю кто ты такой супер мен

NAAIN🇧🇾, [27.07.2024 02:44]
вытрахать

Focstrot, [27.07.2024 02:44]
СУКА

Focstrot, [27.07.2024 02:44]
Дай бог никто не придет

Fargal, [27.07.2024 02:44]
Кстати хагери дату релиза сублиминала объявят 25 августа

NAAIN🇧🇾, [27.07.2024 02:44]
я в чулочках мне можно

Fargal, [27.07.2024 02:45]
И геймплей ещё покажут

Focstrot, [27.07.2024 02:45]
Так уж и быть

Fargal, [27.07.2024 02:45]
Спустя полтора года

Focstrot, [27.07.2024 02:45]
Вскроюсь пока ты недошел

бардачок, [27.07.2024 02:45]
Пруфы

NAAIN🇧🇾, [27.07.2024 02:45]
уу сука

Focstrot, [27.07.2024 02:45]
С беларуси до меня приехать как нехуй

бламплау, [27.07.2024 02:45]
Ээ

бламплау, [27.07.2024 02:46]
Твоя жопа только моя

Focstrot, [27.07.2024 02:46]
Я вскроюсь до его прихода

хагри🥀, [27.07.2024 02:46]
ничосе

Focstrot, [27.07.2024 02:46]
Жопу отрежу и выкину

хагри🥀, [27.07.2024 02:46]
я и забыл про него

Focstrot, [27.07.2024 02:46]
Ого

бардачок, [27.07.2024 02:46]
Пон

Fargal, [27.07.2024 02:46]
А он существует

бламплау, [27.07.2024 02:46]
Нихуя себе

хагри🥀, [27.07.2024 02:46]
колбаса торчит

Focstrot, [27.07.2024 02:46]
Купи мне такие же

NAAIN🇧🇾, [27.07.2024 02:47]
где

хагри🥀, [27.07.2024 02:47]
бля думаю чоза тень ты на аву поставил

бламплау, [27.07.2024 02:47]
Ехх, денег нет

бламплау, [27.07.2024 02:47]
Это мне надо тебя просить

Focstrot, [27.07.2024 02:47]
Негр...

хагри🥀, [27.07.2024 02:47]
в одеяле

NAAIN🇧🇾, [27.07.2024 02:48]
эт еще лежит

Focstrot, [27.07.2024 02:48]
Если компу придет пизда раньше чем я куплю проц

Focstrot, [27.07.2024 02:48]
Я устрою раздачу накоплений

Focstrot, [27.07.2024 02:48]
Мистр бист

хагри🥀, [27.07.2024 02:48]
хахвххыха да бля я про ногу

NAAIN🇧🇾, [27.07.2024 02:48]
пофек

Focstrot, [27.07.2024 02:48]
Сотка градусов ежедневно напоминаю

бардачок, [27.07.2024 02:49]
ноутам тяжелее

Focstrot, [27.07.2024 02:49]
Ты мой пк не трогал просто

бламплау, [27.07.2024 02:49]
Мне..

бламплау, [27.07.2024 02:50]
Сука, я новый ПК соберу только в конце 2024-в начале 2025

бламплау, [27.07.2024 02:50]
Йопани врот

бламплау, [27.07.2024 02:50]
Дозуя же это стоить будет

Focstrot, [27.07.2024 02:50]
Какой же я артур морган

бардачок, [27.07.2024 02:50]
я видимо только если мне бюджетное место в колледже одобрят

Focstrot, [27.07.2024 02:50]
Я может позже

хагри🥀, [27.07.2024 02:50]
одобрят

хагри🥀, [27.07.2024 02:50]
не ссы

бардачок, [27.07.2024 02:51]
спасибо, не буду ссать. люблю тя

Артём, [27.07.2024 02:51]
А тебе обязательно на бюджет идти?

Focstrot, [27.07.2024 02:51]
Залетит родная

хагри🥀, [27.07.2024 02:51]
меня с угрозами что я тупой взяли в технический 10 класс

хагри🥀, [27.07.2024 02:51]
я тупо среди отличников

Артём, [27.07.2024 02:51]
Или и так и так можно но лучше на бюджет

Focstrot, [27.07.2024 02:51]
Меня возьмут максимум на стройку

Focstrot, [27.07.2024 02:51]
С угрозами что я тупой

хагри🥀, [27.07.2024 02:52]
блин хочу

Артём, [27.07.2024 02:52]
Чего бля

хагри🥀, [27.07.2024 02:52]
деньги хоть будут

хагри🥀, [27.07.2024 02:52]
и не будет времени

Focstrot, [27.07.2024 02:52]
Напоминаю я без спины нахуй

хагри🥀, [27.07.2024 02:53]
хахаха инвалид колясочник

Focstrot, [27.07.2024 02:53]
Пару недель и отдел хирургии

Focstrot, [27.07.2024 02:53]
Да

Артём, [27.07.2024 02:53]
СКОЛЬКО НАХУЙ

Артём, [27.07.2024 02:53]
КАКИЕ 18 ТЫСЯЧ

Garry’s Mod (рус. Мод Гэрри, Мод Гарри, Гэррис-мод, Гаррис-мод; от имени создателя — Гарри Ньюмана, англ. Garry Newman; сокращ. GMod) — компьютерная игра, физическая «песочница», которая позволяет игроку манипулировать объектами и экспериментировать с физикой, реализм которой обеспечивается движком Source. Данная модификация создавалась для демонстрации обширных возможностей движка Source, который ограничивает свободу игроков только их собственной фантазией и воображением.

Первоначально Garry’s Mod был бесплатной модификацией, размещался и обновлялся разработчиком на его сайте garry.tv вплоть до 9 версии. С 29 ноября 2006 года Garry’s Mod стал платной игрой и распространяется через Steam. Игра использует систему обновлений Steam. Обновляется ежемесячно. Имеется общедоступная Beta-версия для тестирования перед обновлением основной ветки игры.

29 июля 2009 года официально анонсированы достижения для Garry’s Mod, 26 августа они были добавлены в обновление.

В начале сентября 2011 Гарри Ньюман анонсировал крупнейшее обновление. В 13-м глобальном обновлении была введена поддержка мастерской Steam, переработано меню (теперь оно использует Awesomium Framework, вместо стандартного Source-меню) и множество других изменений, в основном связанных с изменением возможностей Lua-движка.

Продажи Garry’s Mod превысили 20 млн копий в сентябре 2021 года[4].


Содержание
1	Возможности
2	Разработка
3	Игровые режимы
4	Отзывы и продажи
5	Скандал с Nintendo
6	Примечания
7	Ссылки
Возможности
С помощью Garry’s Mod можно проводить любые действия с объектами и персонажами из игр на движке Source (CS:S, CS:GO, TF2, HL2 и других игр в Steam на движке Source), например, менять текстуры, изменять размеры, копировать, соединять, взрывать, прикручивать колеса, изменять выражения лиц персонажей, изменять их кости, ставить в причудливые позы и т. д. Модификации предоставляют игроку огромные просторы для творчества.

Garry’s Mod 9 предоставлял несколько сетевых режимов игры: игра в футбол с помощью гравипушки, стрельба из лазера, охота на птиц (одни игроки играют за охотников, другие — за птиц), гонки на арбузах и т. д. В Garry’s Mod 10 доступны режимы: «песочница», Ascension (двумерная игра, задача в которой — добраться до определённой точки), Dog Fight Arcade (воздушные сражения), Fretta, PropHunt, Trouble in Terrorist Town. Ранее был доступен режим гонок на арбузах, но был убран в связи с его непопулярностью. Другие игровые режимы доступны в виде отдельных скачиваемых дополнений.

Разработка
Первая версия была выпущена 24 декабря 2004 года и являлась не более чем экспериментом в Source SDK, поэтому ничем не отличалась от Half-Life 2, за исключением кнопок: создающая мэнхэков, добавляющая всё оружие и отключающая искусственный интеллект внутриигровых персонажей. Во второй версии, выпущенной 27 декабря 2004 года, были добавлены виды оружия из Half-Life 2. Третья версия была выпущена 30 декабря 2004 года. Эту версию можно считать началом создания полноценной игры, в ней представлены настоящие эксперименты в Source SDK. В игру добавлена первая версия карты gm_construct, которая используется по умолчанию по сей день. Добавлены кнопки, которые создают рэгдоллы и предметы, красная кнопка заменяла функцию удаления предметов (англ. Remover Tool). Физическая пушка тоже приобрела современный вид.

5 января 2005 года в четвёртой версии был добавлен многопользовательский режим и обновлена карта gm_construct. На карте стало больше пространства: появилось место для машин, новые платформы создания предметов, например, платформа для создания блоков, которые были использованы в дополнении PhoeniX-Storms (сокр. PHX). Но всё же ими было трудно пользоваться с помощью примитивной физической пушки. Так же монтировка могла делать не только верёвки и сваривать предметы, а создавать ускорители (ракетные двигатели, англ. thrusters), что позволяло поднимать предметы в воздух без помощи физической пушки.

9 января 2005 года в пятой версии снова обновили карту: в игровой мир была добавлена вода, а небо было сделано более реалистичным (скайбокс), похожие на PHX платформы остались, но некоторые старые были убраны из-за ненадобности. В игру были добавлены два новых инструмента: инструмент рисования (англ. paint gun) и инструмент создания шариков (англ. balloon gun). Инструмент для рисования имел ограниченное количество цветов, инструмент для создания шариков мог создавать одинаковые шарики по длине верёвки и весомости, различающиеся только цветом. Также в этой версии было организовано меню для создания предметов (англ. qbox), заменяющее пушку RPG (стреляющую предметами) и платформы.

29 января 2005 года в шестой версии добавлены меню с инструментами (лампы, шарики и сварка), окно помощи с решениями всех главных проблем и важных советов при начале игры, инструмент для создания ламп и фонарей, возможность передвижения по воздуху (англ. noclip), инструмент для позирования лица (англ. face-posing tool), в котором можно изменять только лицо (делать некоторые выражения лица: поцелуй, улыбка, и т. д.). Все старые предметы были улучшены, карта приобретала современный вид. 12 февраля 2005 г. в седьмую версию внесли незначительные обновления карты и предметов, цвет луча физической пушки заменён на синий. В меню инструментов добавлены новые функции, в частности дубликатор предметов, копирующий, красящий, соединяющий и разрушающий предметы. Пополнился список предметов.

15 февраля 2005 г., вышла восьмая версия Garry’s mod. Восьмая версия модификации стала продвигаться как самостоятельная игра. Были изменены главное меню, добавлена загрузка карт и создание многопользовательского сервера, в меню добавлен менеджер дополнений (материалов и моделей). Изменён и вид меню создания предметов (англ. qbox), имя по умолчанию было изменено с Minge_Bag на MingeBag, улучшена стандартная карта, горы в скайбоксе заменены домами. Добавлены эффекты простого изменения ГРИП (англ. simple DOF), свечения (англ. bloom) и др. 27 ноября 2005 г. выпущена последняя версия, доступная для бесплатного скачивания (9.0.4). В эту версию добавлена возможность загрузки любых карт: полученных из Сети; созданных самостоятельно при помощи Hammer Editor и других редакторов игрового содержимого, использующих формат двоичного разбиения пространства (файлы карт с расширением .bsp); взятых из поставки других игр на движке Source. В эту версию также добавлено программирование на языке Lua.

Десятая версия, выпущенная 29 ноября 2006 г., имеет большое количество изменений по сравнению со свободной 9 версией. Для запуска модификации необходима хотя бы одна игра на Source от Valve. Обновлены библиотеки, связанные со сценарным языком Lua, переписана система модификаций, SWEP (англ. scripted weapons), SENT (англ. scripted entities). 15 января 2008 года Garry’s Mod был переведен на последнюю на тот момент сборку Source (14 версия; ранее использовался движок 7 версии), используемую в играх серии The Orange Box[5]. В 2009 году была добавлена поддержка новых игр на движке Source (например, Zeno Clash), а также изменён интерфейс игры, в частности, Q-меню. Новая версия игры, называемая Garry’s Mod 11, появилась на свет 16 января, когда она была переведена на последнюю, на тот момент, версию движка Source, что появилась с выходом знаменитого Orange Box, куда входили Half-Life 2, Half-Life 2: Episode One, Half-Life 2: Episode Two, Portal и Team Fortress 2. В двенадцатой версии игры был изменён интерфейс, добавлена поддержка новых игр, что работали на движке Source и поддержка онлайн-загрузки дополнений. В игру добавили онлайновую загрузку дополнений (англ. Toybox). Кроме того, Garry’s Mod 12 стала работать на операционной системе Mac OS. Это произошло 23 сентября 2010. Гарри Ньюмен объявил о запуске бета-теста 13 версии — в основном на оружие, NPC и карты.

Сейчас в Garry’s Mod 13 больше чем 1000000 модификаций. Также в Garry’s Mod 13 доступен сервис Steam Workshop. Со временем Gmod перенесли на обновлённую версию движка Source, которая использовалась в играх, включённых в издание The Orange Box, что позволило создать отличную физику и более новую, современную графику.

Игровые режимы
В Garry’s Mod было создано множество игровых режимов, которые разрабатываются и по сей день. Простор для создания игровых режимов был обеспечен благодаря SDK движка Source и языку программирования Lua.

По информации Мастерской Steam Garry’s mod насчитывает более 5100 игровых режимов, включая постеры главного меню, контенты серверов и дополнения уже к существующим игровым режимам. Процент игровых режимов от других публикаций мастерской не превышает 1 % из-за большого количества дубликаций и сохранений[6].

Отзывы и продажи
Летом 2018 года благодаря уязвимости в защите Steam Web API стало известно, что точное количество пользователей сервиса Steam, которые играли в игру хотя бы один раз, составляет 18 576 379 человек[7].

Скандал с Nintendo
В апреле 2024 года компания Nintendo подала запрос об удалении аддонов, связанных с их произведениями. Facepunch Studio приняла решение удалить абсолютно все аддоны, нарушающие авторские права Nintendo, но из-за того, что их слишком много, этот процесс будет долгим, и студия также попросила создателей аддонов удалить их самостоятельно[8]. Из-за этой ситуации в мастерской игры начали появляться аддоны, разжигающие ненависть к компании Nintendo.

Garry's Mod
6
ПРОСМОТР КОДА
Garry's Mod
250px-Gmodlogo.svg
Основная информация
Жанр
Песочница с элементами шутера от первого лица
Разработчик
Великобритания Facepunch Studios
Издатель
США Valve Corporation
Дата(ы) выпуска
24 декабря 2004 г.
Платформы
PC
Garry's Mod — физическая песочница на движке Source. Игра была названа в честь геймдизайнера игры — Гарри Ньюмана.

Содержание
1	Описание
2	Игровые режимы
3	Возможности
4	Дополнения
5	Интересные факты
6	Трейлер (неофициальный)
7	Оценки
7.1	Плюсы
7.2	Минусы
7.3	Итог
Описание
Garry’s Mod (рус. Мод Гэрри, Мод Гарри, Гэррис-мод, Гаррис-мод; от имени создателя — Гарри Ньюмана, англ. Garry Newman), GMod — модификация на движке шутера от первого лица Half-Life 2. Это физическая «песочница», которая позволяет игроку манипулировать объектами и экспериментировать с физикой, реализм которой обеспечивается движком Source. Данная модификация создавалась для демонстрации обширных возможностей движка Source, который ограничивает свободу игроков только их собственной фантазией.

Для функционирования Garry’s Mod необходимо иметь игру на движке Source (например Half-Life 2, Counter-Strike: Source, Team Fortress 2 или Portal). C момента выхода 13-ой версии эти игры больше не требуются. Объекты и персонажи Half-Life 2 доступны при покупке любой из них, так как входят в основной дистрибутив движка Source. Соответственно, другие игры позволяют использовать в Garry’s Mod свое содержимое.

Первоначально Garry’s Mod был бесплатной модификацией, размещался и обновлялся разработчиком на его сайте garry.tv вплоть до 9 версии, которая до сих пор доступна в качестве бесплатного мода на Steam. С 29 ноября 2006 года появилась новая версия Garry’s Mod, которая стала платной игрой и распространяется через Steam. Игра использует систему обновлений Steam. Цена игры 199 рублей.

29 июля 2009 года официально анонсированы достижения для Garry’s Mod, 26 августа они были добавлены через очередное обновление.

В начале сентября 2011 Гарри Ньюмен анонсировал крупнейшее обновление, вышедшее 24 октября.

За 8 лет продажи модификации превысили в 30 миллионов долларов.

Игровые режимы
Для игры Garry’s Mod было разработано множество игровых режимов, разнообразивших игровой процесс. Вот некоторые из них:

Песочница (англ. SandBox) — стандартный режим песочницы: постройка и забавы с физическими возможностями движка.
Бег насмерть (англ. DeathRun) — цель одной команды добежать до конца карты, избежав ловушек; цель другой команды — убить бегущих, активируя ловушки. Обычно в конце трассы лежит оружие, с помощью которых бегущие смогут уничтожить убийц.
SCP Breach - режим, вдохновлённый игрой SCP - Containment Breach. Игрокам даются роли расходников, которые должны сбежать, охраны и ученых комплекса, МОГ (среди которых есть шпион от Повстанцев Хаоса).
Космическая песочница (англ. SpaceBuild) необходимо построить космический корабль/станцию, исследовать космос, и при этом обогатить космический корабль/станцию системой жизнеобеспечения — англ. life support.
Зомби-режим (англ. Zombie Survival) цель одной команды — выжить в течение 15 минут; цель команды зомби — за то же время заразить всех выживающих.
Башня (англ. Tower) — режим очень похожий на RP но не совсем, SandBox здесь ограниченный (только в комнатах, и только купленные вещи), вы можете смотреть телевизор (видео с YouTube), слушать радио, и т.д. Так же в магазинах можно покупать шапки, модели персонажей, играть в Flash игры, смотреть видео с YouTube в театре. Но самое главное это Игровые режимы, на данный момент их 6 — PvP Battle, Ball Race, Virus, Ultimate Chimera Hunt и Zombie Massacre. Суть этих модов заключается в заработке игровой валюты и конечно же развлечения. Режимы игры раскиданы по разным серверам (чтобы не нагружать хостинг)
Дополненный зомби-режим (англ. ReDead) — отличия от обычного режима зомби: возможность закупки вооружением как в Counter-Strike:Source, зомби управляются искусственным интеллектом, они способны бегать.
Бункер (англ. OnsLaught Evolved) - по истечении времени постройки небольшого бункера из предоставленных предметов, на точках возрождения появляются враги — как правило, комбайны из Half-Life 2 или охотники; убийство любого враждебного персонажа вознаграждается внутриигровыми деньгами на приобретение предметов для повторной постройки бункера.
Арбузные бега — нечто вроде гонок на арбузе, управляемом игроком, со множеством препятствий на гоночной трассе, об которые нужно стараться не разбить свой арбуз).
Лодочный бой — каждый игрок строит лодку, и спускает ее на воду, а после прилива токсичных вод игроки пытаются уничтожить лодки других игроков; игрок не может быть убит напрямую, вместо этого нужно столкнуть его в воду; матч выигрывает последний выживший).
Ролевая игра — имитация процесса реальной жизни с присутствием работ повара, торговца оружием, мэра, полицейского и т. д.; на серверах могут быть и другие работы: спецназовец SWAT, террорист, певец, ниндзя — администратор сервера может легко добавлять дополнительные профессии на сервер прямо во время игры.
Серьёзная ролевая игра — более реалистичная версия Dark RP, в которой необходимо обыгрывать каждое действие игрока, имеет очень серьёзные правила отсюда и название.
Ролевая игра в стиле Half-Life — схож с Serious RP, но все происходит во вселенной Half-Life 2 (скорее даже ближе к старому сюжету по атмосфере), имеет ещё более серьёзные правила.
Бандитские войны — глобально переделанный режим симулятора, больше похожий на ролевую игру.
Охота на вещи (англ. Prop Hunt). Цель команды охотников — убить все вещи; цель команды вещей — становиться какой-либо вещью на выбор, и прятаться, пока кто-нибудь не убьёт; чем предмет игрока больше, тем больше у него запас здоровья, а при выстреле в предмет, не соответствующий игроку, охотник теряет 5 очков здоровья).
Проблемы в городе террористов -  в течение первых 30 секунд игроки разбегаются по карте, а затем случайным образом им распределяются роли-классы: невиновный, предатель, детектив; задача детективов — вычислить всех предателей, не убив невиновных, при этом класс другого игрока может определить только детектив, об убийстве другого игрока незамедлительно узнает лишь предатель, остальным необходимо найти тело и опознать его; тело убитого содержит массу информации, необходимой для поиска предателя, часть информации доступна лишь детективу; при убийстве своих уменьшается карма, а с ней и наносимый урон).
Паркур — модифицированный стандартный режим постройки с измененной физикой, моделями рук и анимацией переката при прыжковых приземлениях; основная задача состоит в преодолевании препятствий при прыжках по крышам).
Киносеанс — не боевой режим, в котором игроки появляются в импровизированном "кинотеатре", где могут смотреть видеоролики на специальных экранах с различных видео-хостингов (например, YouTube) и сами предлагать их.
Миниигры — режим, в котором игрокам предоставляется возможность участвовать в самых различных минииграх: классический DeathMatch, командная гонка с препятствиями, уклонение от едущих с огромной скоростью машин на выживание, свободное падение и уклонение от опасных балок и шипов, аналог "Твистера", выживание на неустойчивых платформах и многое другое.
Возможности
С помощью Garry’s Mod можно проводить любые действия с объектами и персонажами из игр на движке Source (CS:S, TF2, HL2 и других игр от Valve), например, менять текстуры, изменять размеры, копировать, соединять, взрывать, прикручивать колеса, изменять выражения лиц персонажей и т. д. Модификация предоставляет игроку огромные просторы для творчества. Но встречаются и модификации с новыми персонажами разных игр, которые даже не имеют отношения к корпорации Valve.

Garry’s Mod 9 предоставлял несколько сетевых режимов игры: игра в футбол с помощью гравипушки, стрельба из лазера, охота на птиц (одни игроки играют за охотников, другие — за птиц), гонки на арбузах и т. д. В Garry’s Mod 10 доступны режимы: «песочница», Ascension (двумерная игра, задача в которой — добраться до определенной точки), Dog Fight Arcade (воздушные сражения), Fretta, PropHunt, Trouble in Terrorist Town. Ранее был доступен режим гонок на арбузах, но был убран в связи с его непопулярностью. Другие игровые режимы доступны в виде бесплатных отдельных скачиваемых дополнений.

Дополнения
Для Garry’s Mod разработано множество дополнительных модификаций и элементов игрового содержимого:

Wire Mod — модификация, позволяющая создавать реалистичные электронные, хотя и не доведенные до реальности полностью, например турели с автонаведением, самонаводящиеся ракеты, прессы, артиллерийские орудия, бомбы с таймером, спутники-шпионы, голограммы, ионные пушки(не реальные), и прочее. Оригинальная версия имеет не так уж и много возможностей, но после введения Lua-подобного языка программирования называемого Expressions(последняя версия под индексом 2), и появления ассемблерно-подобного языка CPU, и его под-языка GPU(графический процессор), можно было создавать действительно реалистичные устройства. Крайне часто обновляется(почти ежедневно), имеет свой сайт, и дополняется сторонними модификациями(вроде Radio System Tools, HiSpeed entities и пр.).
PhoeniX-Storms (сокр. PHX) — дополнительный набор моделей, т. н. пропов. Последняя третья версия содержит наибольшее количество простых моделей вроде кубов разных размеров, плоскостей(не геометрических), затем появились необычного вида детали для роботов, шестеренки и т. д. Распространяется через репозиторий SVN для предыдущих версий Garry’s Mod, с 15 декабря 2010 г. входит в поставку игры. Обновлений за 2 месяца по состоянию на 29.10.2011 не было.
PC Mod — дополнительная модификация, позволяющая построить игроку персональный компьютер, оснащаемый программами (в первых версиях были доступны только Блокнот и «Мой компьютер»). Не обновляется.
PC Mod 2 — дополнительная модификация, улучшенный вариант PC Mod: добавлены возможность создать персональную сеть, Проигрыватель Windows Media и др. Используется в ролевой игре как возможность создания интернет-кафе. Обновления крайне редки.
GCombat , GCX и Pew Pew — дополнительные моды, создающий непереносимые игроком оружия и системы. Работают исключительно на Wire mod.
Интересные факты
На серверах Garry's Mod периодически появляется один из разработчиков этой игры. Если вы сыграете с ним на одном сервере, то вам дадут достижение "Yes, I am the real garry!". 
Трейлер (неофициальный)
Garry's_Mod_2011_Trailer
Garry's Mod 2011 Trailer

Оценки
Плюсы
ПлюсНеограниченная свобода действий.

ПлюсКуча неофициальных аддонов.

ПлюсПоддержка Steam Workshop.

ПлюсОчень хороший геймплей.

ПлюсНе даст заскучать.

ПлюсМножество модов

ПлюсЕсть персонажи из серии игр Half-Life

Минусы
МинусТребуется игра на движке Source, из которой игрок хочет использовать контент в игре.

МинусТоксичное комьюнити.


МинусЧастые вылеты из игры.

Итог
Прекрасная игра! Удачи!

Русскоязычная и самая достоверная wiki по игре Voices of the Void от EternityDev 2022 года. Локализованное название - Голоса Пустоты. Также известна как VotV.

В настоящее время над вики активно ведутся работы, и для полного заполнения информацией понадобится время. Данная вики не претендует на звание официальной и не имеет никакого отношения к Mr.Dr.Nose. На нашей вики мы стараемся максимально завуалировать информацию, которая может содержать потенциальные спойлеры. Подавляющее большинство информации было проверено и подтверждено нашими тестами и экспериментами, следственно наша вики имеет минимальное количество дезинформации. Большая благодарность тем, кто вносит также частичку информации и от себя. Некоторая информация и часть изображений были позаимствованы у EternityDev Wiki, Voices of the Void Secrets Archive и r/Voicesofthevoid.

Дата создания вики - 25.03.2024. Вся информация актуальна на момент версии Pre-Alpha 0.7.0b3.


Содержание
1	Быстрое перемещение по вики
2	Описание игры на itch.io
2.1	Предисловие
2.2	Описание
2.3	Быстрое ЧаВо по игре
Быстрое перемещение по вики
FandomFandomFandomFandomFandomFandom

Описание игры на itch.io
Предисловие
Эта игра находится в стадии «Pre-Alpha», что означает, что она далека от совершенства, но в ней довольно много всего, во что можно поиграть и на что посмотреть. В ней есть базовый игровой цикл, множество различных механик, элементов игрового процесса, вещей, с которыми можно поиграть, и т. д.

Вы можете поддержать игру на Patreon и дать ей больше шансов выйти в релиз.

Описание
Вы работаете учёным в изолированной исследовательской лаборатории в горах Швейцарии. Ваша задача — собирать сигналы из космоса, анализировать их, обрабатывать и продавать, чтобы получать очки. Вы можете получить обычные сигналы и объекты вроде карликовых планет и звёзд, а можете получить что-то «необычное» или «странное». В игре более 40 дней и событий, более 150 возможных сигналов, несколько пасхалок и секретов.

Вы можете сообщать о проблемах и высказывать идеи\предложения на официальном Discord сервере.

Совет: для большего погружения отключите музыку в настройках звука.

Быстрое ЧаВо по игре
В: Будет ли в будущем мультиплеер?
О: Скорее всего, нет, из-за отсутствия опыта разработчика в области онлайн игр и отсутствия основы для сети в игре.
В: Почему игра использует так много ресурсов?
О: Это может быть вызвано настройкой «Объёмный свет», отключите её, и потребление ресурсов уменьшится. Также вы можете уменьшить качество теней, эффектов и расстояние прорисовки, но устанавливать качество теней на 0 не рекомендуется, если вы хотите наблюдать приличную картинку.
В: Как использовать собственный контент (изображения, радио, телевизор и т. д.)?
О: Касаемо этого существуют записи во вкладке «Помощь» в меню «главное\пауза», а папка ресурсов находится по пути «appdata\local\votv\assets». Если вы не видите папку — запустите игру от имени администратора, и она создаст папку.
В: Все мои настройки уменьшены до 0; Качество супер пиксельное; Полностью чёрный\серый экран
О: Зайдите в «Настройки» > «Игра» и нажмите кнопку «Восстановить data.sav».
В: Я не понимаю кое-чего.
О: Перейдите в главное меню/меню паузы и нажмите кнопку «Помощь», чтобы открыть окно помощи, где вы сможете найти то, с чем у вас возникла проблема.
В: Будет ли игра когда-нибудь в Steam?
О: В конечном итоге игра появится в Steam, но она ещё не закончена, поэтому потребуется некоторое время, чтобы довести её до выпуска в Steam.

Voices of the Void
13
VIEW SOURCE
Uc2	
Under Construction
This article is currently under construction. Please wait for the editors to finish it.
Voices of the Void
Votvbanner
Released
August 5, 2022
Created by
EternityDev
Genre
Horror, Signal Simulator, Simulator, RPG, FPS
Engine
Unreal Engine 4.27
Link(s)
itch.io
Voices of the Void, or VotV for short, is MrDrNose's most recent game.

Contents
1	Overview
2	Itch.io Description
3	Plot
4	Basic Premise
5	Gameplay
6	Story Content
6.1	Characters
6.2	Events
6.3	Entities
7	Gameplay Content
7.1	Items
7.2	Signals
7.3	Crafts
7.4	Locations
7.5	Objects/Props
7.6	Soundtracks
7.7	Easter Eggs/Secrets
8	Help and Guides
8.1	Upgrades/Modules
8.2	Reports
9	Trivia
Overview
Voices of the void was inspired by Signal Simulator, which was in turn inspired by SETI, and most likely born out of a dream for more content from the game's concept, as well as the fact that the original game has now been completed.

Itch.io Description
You work as a scientist in the isolated research lab in the mountains of Switzerland. Your task is to gather signals from space, analyze them, process them and sell them to get points.

You can get regular signals and objects like dwarf planets and stars, or you can get something "unusual" or "strange"

The game has 40+ days and events, 150+ possible signals, and some easter eggs and secrets.

Tip: for more immersion disable music in audio settings.

Plot
Not much is known about the story currently, but what is known is that it takes place in the same universe as Advanced Education with Viktor Strobovski, and that the Ariral species is to play a big part.

Basic Premise
You play as Dr. Kel, a recent hire for an unknown research company, processing signals from space from the comfort of your concrete base in the middle of a forest. Your main job is maintaining the satellites around the area, and finding interesting things with the panels in the middle of your base. There are also many secrets hidden around the map, such as Argemia plushies.

Gameplay
Your job in the game is simple. Locate and process signals, filter them, and send them to your supervisors. You may be requested to provide certain types of drives; these requests will be found in the emails tab on your computer each day. On the same email will be a request for certain satellites' hash codes, which you must send with your drives. If any satellites break, it's your job to travel to them and repair the servers located in them.

Qualcomm® Snapdragon™ 600E Processor
APQ8064E
DSI Programming Guide
LM80-P0598-2 Rev. C
September 2016
LM80-P0598-2 Rev. C MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 2
Revision history
Revision Date Description
C September 2016 Update to ‘E’ part
B February 24, 2016  Section 4.1 Setting up DSI panel-related GPIO reset pins: Changed
mach-apq to mach-msm:
Information about setting up DSI panel-related GPIO reset pins can be
found at \Linux\android\kernel\arch\arm\mach-msm\board-8064-
display.c.
 Section 5.3: Use dsi_timing_program to calculate DSI PHY register
Explained how to open the DB_APQ8064_DSI_Timing_Program.xlsm
file
A June 1, 2015 Initial release
LM80-P0598-2 Rev. C MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 3
Contents
1 Introduction........................................................................................................................... 5
1.1 Purpose .....................................................................................................................................................5
1.2 Conventions...............................................................................................................................................5
1.3 Terms and acronyms .................................................................................................................................5
2 DSI Overview......................................................................................................................... 7
2.1 Command and Video modes .....................................................................................................................7
2.1.1 Command mode .......................................................................................................................8
2.1.2 Video mode ..............................................................................................................................8
2.2 Clock..........................................................................................................................................................8
2.2.1 Type of DSI clock .....................................................................................................................8
2.2.2 Clock relation requirements ......................................................................................................9
3 Design Consideration ..........................................................................................................10
3.1 Performance consideration ......................................................................................................................10
4 MIPI DSI Driver Migration Guide .........................................................................................11
4.1 Setting up DSI panel-related GPIO reset pins .........................................................................................11
4.1.1 Vsync GPIO............................................................................................................................11
4.1.2 Initialization GPIO high/low/high location................................................................................11
4.1.3 Example..................................................................................................................................12
4.2 DSI host initialization-related code...........................................................................................................14
4.2.1 Initialization sequence call flow...............................................................................................14
4.2.2 DSI clock enable.....................................................................................................................15
4.2.3 mipi_dsi_clk_div_config() – DSI core clock and DSI PCLK ....................................................15
4.2.4 DSI PHY configuration............................................................................................................17
4.3 DSI client-side-related code change ........................................................................................................18
4.3.1 Panel driver ............................................................................................................................18
4.3.2 Panel-specific initialization sequence .....................................................................................20
5 Panel Bring-up .....................................................................................................................21
5.1 LCD parameter fill....................................................................................................................................21
5.2 PHY table modify inside panel driver .......................................................................................................21
5.3 Use dsi_timing_program to calculate DSI PHY register...........................................................................22
6 Panel Bring-up Checkpoints ...............................................................................................26
6.1 No DSI clock output .................................................................................................................................26
6.1.1 Check function mipi_dsi_clk_ctrl () .........................................................................................26
6.1.2 Check DSI_related clocks by ADB command.........................................................................26
6.1.3 Check DSI_BITCLK output signal by scope ...........................................................................27
6.1.4 Possible file changes..............................................................................................................28
6.2 Tearing on DSI Command mode LCD .....................................................................................................29
7 Unstable/Locked Bitclk Issue..............................................................................................30
7.1 VCO and bitclk setting formula on APQ8064E.........................................................................................30
7.2 Verification by scope capture...................................................................................................................31
DSI Programming Guide Contents
LM80-P0598-2 Rev. C MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 4
7.2.1 Normal waveform ...................................................................................................................31
EXHIBIT 1.................................................................................................................................32
Figures
Figure 2-1 Examples for Video and Command modes..................................................................................................7
Figure 5-1 The DSI and MDP registers worksheet......................................................................................................24
Figure 5-2 DSIPHY_TIMING_CTRL............................................................................................................................25
Figure 6-1 DSI_BITCLK = 366 MHz............................................................................................................................27
Figure 6-2 DSI_bit clock = 500 MHz ...........................................................................................................................27
Figure 6-3 DSI_bit clock = 600 MHz ...........................................................................................................................28
Figure 6-4 Frame package transfer vs. TE signal .......................................................................................................29
Figure 7-1 MIPI DSI bitclk = 578 MHz normal waveform.............................................................................................31
Tables
Table 1-1 Terms and acronyms ....................................................................................................................................5
Table 2-1 Clock relation requirements ..........................................................................................................................9
Table 3-1 Lane configuration recommendation for various resolutions .......................................................................10
Table 4-1 Parameter descriptions ...............................................................................................................................20
Table 5-1 Example of bridge IC PHY settings.............................................................................................................22
LM80-P0598-2 Rev. C MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 5
1 Introduction
1.1 Purpose
This document presents an application usage of the Display Serial Interface (DSI) panel bring-up
for the Android OS for Qualcomm® Snapdragon™ 600E processor (APQ8064E). This document
also provides sample code and PLL calculations regarding the DSI Mobile Industry Processor
Interface (MIPI) panel bring-up.
NOTE: This document provides a description of chipset capabilities. Not all features are available, nor
are all features supported in the software.
NOTE: Enabling some features may require additional licensing fees.
1.2 Conventions
Function declarations, function names, type declarations, and code samples appear in a different
font, e.g., #include.
If you are viewing this document using a color monitor, or if you print this document to a color
printer, red typeface indicates data types, blue typeface indicates attributes, and green typeface
indicates system attributes.
Shading indicates content that has been added or changed in this revision of the document.
1.3 Terms and acronyms
Table 1-1 defines terms and acronyms that may be used throughout this document.
Table 1-1 Terms and acronyms
Term Definition
720P HD 720p, 720 progressive scan or non-interlaced horizontal lines high definition
APQ Qualcomm® Application-only Processor
BLLP Banking or Low-Power Interval
DCS Display Command Set
DSI Display Serial Interface
EMI Electromagnetic Interference
ESC Electronic Speed Controller
DSI Programming Guide Introduction
LM80-P0598-2 Rev. C MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 6
Term Definition
fps Frames per second
FWVGA Full-width VGA
GPIO General Purpose Input/Output
HFP Horizontal-sync front porch
HSA Horizontal Sync Active
HVGA Half-size Video Graphics Array
IRQ Interupt Request
LCD Liquid Crystal Display
LCDC Liquid Crystal Display Controller
LCM Liquid Cystral Module
LP Low Power
MDP Mobile Display Processor
MIPI Mobile Industry Processor Interface
MMSS Multimedia Subsystem
PLL Phase Lock Loop
PCLK Pixel Clock
PHY Physical Layer
QHD 960x540 resolution
QVGA Quarter Video Graphics Array, 320 x 240 image resolution
RAM Random Access Memory
RGB Red-Green-Blue
SVGA Super Video Graphics Array (1024 x 768)
TCXO Temperature-Compensated Crystal Oscillator
TE Tearing Effect
VCO Voltage-Controlled Oscillator
VE Vertical Sync End
VGA Video Graphics Array (640 x 480 image resolution)
VS Vertical Sync Start
WQVGA Wide Quarter Video Graphics Array, 320 x 240 image resolution
WSVGA Wide Super VGA, 1024 x 576/600
WVGA 800 x 480 resolution
WXGA, WXGA+ Wide Extended Graphics Array, 1280 x 768, 1440 x 900
XGA Extended Graphics Array, 1024 x 768
LM80-P0598-2 Rev. C MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 7
2 DSI Overview
The DSI is a specification by the MIPI and is targeted at reducing the cost of the display
subsystem in mobile and embedded-computing devices. It defines a serial bus and
communication protocol between the host and the device (client). The bus includes one
high-speed clock lane and one or more data lanes. Each lane is carried on tow wires and uses low
voltage, differential signaling.
See the following:
 MIPI D-PHY Specification v01-00-00
 DSI Specification v01-02-00
 MIPI DCS Specification v01-02-00
at http://www.mipi.org/specifications for further details on the MIPI DSI.
2.1 Command and Video modes
There are two modes of operation for DSI-compliant peripherals, Command and Video.
Figure 2-1 shows examples of these two modes.
Frame Buffer Display Driver
Bus interface
Bus interface Bus interface
Display Controller Frame Buffer
Host Processor
Host Processor
Update Frame Buffer
Update Frame Buffer
Video Mode Display Panel
Command Mode Display Panel
Display Refresh 60 fps from Frame Buffer
Commands and data
Timing Control Bus interface
Figure 2-1 Examples for Video and Command modes
DSI Programming Guide DSI Overview
LM80-P0598-2 Rev. C MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 8
2.1.1 Command mode
Command mode refers to transactions taking the form of sending commands and data to a
peripheral, that is, the LCD driver IC. This mode is typically used for the smart panel with
external RAM out of the APQ and external LCDC, which can self-refresh in the case of a static
image update. The APQ can go to TCXO shutdown and save more power, but there is an extra
cost on the external RAM and LCDC.
The signal flow of information is bidirectional in Command mode so the host can write or read
data to or from a peripheral. The host can also synchronize the flow of data using the Tearing
Effect (TE) signal (Vsync) from the panel to avoid TEs.
2.1.2 Video mode
Video mode refers to transactions taking the form of a real-time pixel stream. The DSI host inside
the processor must refresh the image data continuously and, typically, this is used for the dumb
panel without external RAM. The host provides video data, that is, pixel values, and
synchronization information, that is, Vsync, Hsync, data enable, and the pixel clock.
Video mode behavior is similar to the RGB interface but costs only a couple of pins (so there is
also less EMI and radio desensing).
2.2 Clock
The DSI core receives several clocks to drive the different logic blocks. However, users can focus
on the bitclk based on the panel specification. The actual clock can be calculated from the
configuration, such as targeting the fps, LCD resolution, number of lanes, etc.
2.2.1 Type of DSI clock
2.2.1.1 DSI bit clock
The DSI bit clock is the DSI clock that goes out from the host processor to the LCD driver. The
DSI bit clock is used as the source-synchronous bit clock for capturing the serial data bit in the
receiver PHY. This clock shall be active while data is transferred.
The maximum frequency is 1 GHz.
2.2.1.2 DSI byte clock
During HS transmission, each byte of data is accompanied by a byte clock. The DSI byte clock is
used in the lane management layer for HS data transmission. Like the DSI bit clock, the byte
clock shall be active while data is transferred.
The maximum frequency is 125 MHz.
2.2.1.3 DSI clock
This clock is the core clock of the DSI controller.
The maximum frequency is 500 MHz.
DSI Programming Guide DSI Overview
LM80-P0598-2 Rev. C MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 9
2.2.1.4 DSI ESC clock
The DSI ESC clock source can be PXO or DSI byte clock. If it is PXO, then the source is
27 MHz. But the value of the ESC clock changes depending on the value of the divider used. It is
controlled by the DSI1_ESC_NS register (0x011C).
In the latest source code, the DSI byte clock is used as the source of the ESC clock. The value of
the DSI ESC clock can be changed using the pinfo→mipi.esc_byte_ratio parameter in the panel
file. The value of this ratio should be DSI byte clock/Expected DSI ESC clk.
2.2.1.5 DSI pixel clock
The pixel clock is required to always run when transmitting data over the DSI link. However, this
requirement applies only when DSI functionality is enabled. Therefore, the clkon signal is the
output of the DSI control register to enable the functionality.
The maximum frequency is 166.67 MHz.
2.2.2 Clock relation requirements
 H-total = HorizontalActive + HorizontalFrontPorch + HorizontalBackPorch +
HorizontalSyncPulse + HorizontalSyncSkew
 V-total = VerticalActive + VerticalFrontPorch + VerticalBackPorch + VerticalSyncPulse +
VerticalSyncSkew
 Total pixel = H-total x V-total x 60 (Hz)
 Bitclk = Total pixel x bpp (byte) x 8/lane number
 Byteclk = bitclk/8
 Dsiclk = Byteclk x lane number
 Dsipclk = dsiclk/bpp (byte)
Table 2-1 shows the clock relation requirements.
Table 2-1 Clock relation requirements
Clock relation Frequency ratio
Bit clock to byte clock 8 – 1
Byte clock to DSI clock 1 – #lanes
DSI clock to pclk (Video mode operation) Video mode pixel depth – 1
DSI clock to pclk (no Video mode operation) DSI clk </= pclk x Command mode pixel depth
LM80-P0598-2 Rev. C MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 10
3 Design Consideration
3.1 Performance consideration
Table 3-1 shows the recommended lane configuration to guarantee 60 fps performance with
respect to LCD resolution. Consider this condition to meet the specification. Also ensure that the
client can support the required clock to meet the targeted performance.
Table 3-1 Lane configuration recommendation for various resolutions
Resolution Width Height Lane
Pclk
(MHz)
Dsiclk
(MHz)
Byteclk
(MHz)
Bitclk
(MHz)
Link data rate
(Mbps)
QVGA 320 240 1 6 18 18 146 146
WQVGA 432 240 1 8 25 25 197 197
HVGA 480 320 1 12 37 37 293 293
QHD 640 360 2 18 55 27 219 439
VGA 640 480 2 24 73 37 293 585
WVGA 800 480 2 30 91 46 366 731
SVGA 800 600 3 38 114 38 305 914
FWVGA 864 480 2 33 99 49 395 790
¾ HD 960 540 3 41 123 41 329 987
WSVGA 1024 540 3 44 132 44 351 1053
WSVGA 1024 600 3 49 146 49 390 1170
XGA 1024 768 4 62 187 47 374 1498
XGA 1280 720 4 73 219 55 439 1755
720P HD 1280 768 4 78 234 59 468 1872
WXGA 1280 800 4 81 244 61 488 1950
WXGA+ 1440 900 4 103 309 77 617 2468 
LM80-P0598-2 Rev. C MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 11
4 MIPI DSI Driver Migration Guide
The display driver includes a reference MIPI DSI driver that is tested in-house. The display driver
supports both Command and Video mode. However, since a different driver IC/panel can be
used, you are responsible for modifying the driver to light up the panel.
Since the MIPI DSI host (including PHY) is inside the APQ, almost all of the registers are set to
facilitate a display update through the MIPI DSI interface. However, some of the registers should
be changed to fit the driver IC/panel specification. Proper implementation should be performed to
initialize the driver IC/panel.
Panel initialization is dependent upon the driver IC/panel type. This chapter explains how to set
the MDP/MIPI DSI register and how to change the MIPI DSI driver to apply those register
changes.
This chapter explains how to get the value to set the MDP/DSI registers related to the MIPI DSI
interface directly from the user specification. It also explains what you need to change for the
Android MIPI DSI driver.
4.1 Setting up DSI panel-related GPIO reset pins
Information about setting up DSI panel-related GPIO reset pins can be found at
\Linux\android\kernel\arch\arm\mach-msm\board-8064-display.c.
4.1.1 Vsync GPIO
MDP_Vsync input must use GPIO0 and set the alternative function as mdp_vsync input.
#define MDP_VSYNC_GPIO 0
4.1.2 Initialization GPIO high/low/high location
In the mipi_dsi_platform_data mipi_dsi_pdata structure, .dsi_power_save =
mipi_dsi_panel_power.
Add a specific function call for the OEM panel init on the bottom of the function
mipi_dsi_panel_power().
static struct mipi_dsi_platform_data mipi_dsi_pdata = {
.vsync_gpio = MDP_VSYNC_GPIO,
.dsi_power_save = mipi_dsi_panel_power,
};
DSI Programming Guide MIPI DSI Driver Migration Guide
LM80-P0598-2 Rev. C MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 12
4.1.3 Example
NOTE: Red boldface indicates code to be added.
The following example shows how to set up DSI panel-related GPIO reset pins.
1. Define the specific GPIO pin.
#define MIPI_LCD_RST (75)
#define AVDD3V (77)
#define IOVDD (83)
2. Create a new structure for the OEM panel.
#ifdef CONFIG_FB_MSM_MIPI_DSI
static struct platform_device mipi_dsi_toshiba_panel_device = {
.name = "mipi_toshiba",
.id = 0,
.dev = {
.platform_data = &toshiba_pdata,
}
};
static struct platform_device mipi_dsi_video_sharp_qHD_panel_device = {
.name = "dsi_video_sharp_qHD",
.id = 0,
.dev = {
.platform_data = &toshiba_pdata,
}
};
if (machine_is_msm8960_liquid())
ptr = &mipi_dsi2lvds_bridge_device;
elseif
ptr = &mipi_dsi_toshiba_panel_device;
ptr = & mipi_dsi_video_sharp_qHD_panel_device; / /add your data
structure here
3. Add the specific power function.
static int dsi_panel_power(int on)
{
mipi_sharp_panel_power(on);
if (machine_is_msm8960_liquid())
ret = mipi_dsi_liquid_panel_power(on);
else
ret = mipi_dsi_cdp_panel_power(on);
return 0;
}
DSI Programming Guide MIPI DSI Driver Migration Guide
LM80-P0598-2 Rev. C MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 13
4.1.3.1 Panel power-on function example
static void mipi_sharp_panel_power(int on)
{
ret = gpio_request(AVDD3V, “AVDD3V”);
if (ret)
printk(KERN_ERR “%s: RESET gpio %d request””failed\n”, __func__, AVDD3V);
gpio_direction_output(AVDD3V, 0);
ret = gpio_request(IOVDD, “IOVDD”);
if (ret)
printk(KERN_ERR “%s: RESET gpio %d request””failed\n”, __func__, IOVDD);
gpio_direction_output(IOVDD, 0);
ret = gpio_request(MIPI_LCD_RST, “lcd_reset”);
if (ret)
printk(KERN_ERR “%s: RESET gpio %d request””failed\n”,
__func__MIPI_LCD_RST);
gpio_direction_output(MIPI_LCD_RST, 0);
,
gpio_set_value(AVDD3V, 1);
mdelay(4);
//AVDD OFF
gpio_set_value(AVDD3V, 0);
mdelay(50);
//AVDD ON
gpio_set_value(AVDD3V, 1);
//IOVDD ON
gpio_set_value(IOVDD, 1);
mdelay(1);
gpio_set_value(MIPI_LCD_RST, 1);
mdelay(1);
gpio_set_value(MIPI_LCD_RST, 0);
mdelay(1);
gpio_set_value(MIPI_LCD_RST, 1);
mdelay(60);
DSI Programming Guide MIPI DSI Driver Migration Guide
LM80-P0598-2 Rev. C MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 14
4.1.3.2 Panel power-off function example
mdelay(120);
gpio_set_value(MIPI_LCD_RST, 1);
mdelay(10);
//AVDD OFF
gpio_set_value(AVDD3V, 0);
mdelay(10);
//IOVDD OFF
gpio_set_value(IOVDD, 0);
4.2 DSI host initialization-related code
4.2.1 Initialization sequence call flow
 mipi_dsi.c
 mipi_dsi_probe()
– Binding IRQ – Request_irq(DSI_IRQ, mipi_dsi_isr, IRQF_DISABLED,”MIPI_DSI”,
0);
– Assign vsync – vsync_gpio = mipi_dsi_pdata->vsync_gpio;
– Binding data chain
 pdata = mdp_dev→dev.platform_data;
 pdata→on = mipi_dsi_on;
 pdata→off = mipi_dsi_off;
 pdata→next = pdev;
– Pull panel info
– Auto-calculate DSI core clock/PCLK/bitclk : mipi_dsi_clk_div_config()
– Auto-calculate D-PHY by mipi_dsi_phy_pll_config()
 mipi_dsi_on()
 mipi_dsi_pdata->dsi_power_save(1); call dsi_panel_power() in board-8064-display.c
 Enable DSI core clock – mipi_dsi_clk(&dsicore_clk, 1);
 Enable DSI PCLK – mipi_dsi_pclk(&dsi_pclk, 1);
 DSI PHY setting – mipi_dsi_phy_init()
 Set up DSI host – mipi_dsi_host_init()
 Clean up error status report from DSI client – mipi_dsi_cmd_bta_sw_trigger()
 Start next panel on function for FB1 if it appears in the link list – panel_next_on()
 Change GPIO AF as mdp_vsync if hardware Vsync is enabled
 Send out TE enable command if hardware Vsync – mipi_dsi_set_tear_on()
DSI Programming Guide MIPI DSI Driver Migration Guide
LM80-P0598-2 Rev. C MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 15
 msm_dss_io_8960.c
 Include all DSI/PHY clock setup/calculate functions
4.2.2 DSI clock enable
 mipi_dsi_ahb_ctrl()
 clk_enable(amp_pclk) – Clock for AHB-master to AXI
 clk_enable(dsi_m_pclk) – 0x0008 AHB_EN bit 9:DSI_M_AHB_CLK_EN
 clk_enable(dsi_s_pclk) – 0x0008 AHB_EN bit 18 DSI_S_AHB_CLK_EN
 mipi_dsi_clk_enable()
 mipi_dsi_pclk_ctrl() – Enable DSI pixel clock
 mipi_dsi_clk_ctrl() – Enable DSI core clock
 clk_enable(dsi_byte_div_clk) – Enable DSI byte clock
 clk_enable(dsi_esc_clk) – Enable DSI esc clock
 mipi_dsi_clk() – Turn on DSI core clock and change M:N/D value based on
mipi_dsi_clk_div_config() result in DSI_probe
 mipi_dsi_pclk() – Turn on DSI pixel clock and change M:N/D value based on
mipi_dsi_clk_div_config() result in DSI_probe
4.2.3 mipi_dsi_clk_div_config() – DSI core clock and DSI PCLK
This major function can auto-adjust the DSI core clock/pixel clock/PHY PLL control clock. The
following instructions show how the driver auto-calculates these clocks.
Reference table in source code in mipi_dsi.h.
struct dsi_clk_mnd_table {
uint8 lanes;
uint8 bpp;
uint8 dsiclk_div;
uint8 dsiclk_m;
uint8 dsiclk_n;
uint8 dsiclk_d;
uint8 pclk_m;
uint8 pclk_n;
uint8 pclk_d;
};
#define PREF_DIV_RATIO 27
static struct dsiphy_pll_divider_config pll_divider_config;
static const struct dsi_clk_mnd_table mnd_table[] = {
{ 1, 2, 8, 1, 1, 0, 1, 2, 1},
{ 1, 3, 8, 1, 1, 0, 1, 3, 2},
{ 2, 2, 4, 1, 1, 0, 1, 2, 1},
{ 2, 3, 4, 1, 1, 0, 1, 3, 2},
DSI Programming Guide MIPI DSI Driver Migration Guide
LM80-P0598-2 Rev. C MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 16
{ 3, 2, 1, 3, 8, 4, 3, 16, 8},
{ 3, 3, 1, 3, 8, 4, 1, 8, 4},
{ 4, 2, 2, 1, 1, 0, 1, 2, 1},
{ 4, 3, 2, 1, 1, 0, 1, 3, 2},
Two clocks must be modified inside msm_dss_io_8960.c:
 DSI_PCLK – 0x0130 DSI_PIXEL_CC, 0x0134 DSI_PIXEL_MD, and 0x0138
DSI_PIXEL_NS in the MMSS section
 DSI_clock – 0x004C DSI_CC, 0x0050 DSI_MD, and 0x0054 DSI_NS in the MMSS section
0x0138 DSI_PIXEL_NS
If((pclk_d == 0) || (pclk_m == 1)) - mnd_mode = 0 (Bypass mode)
2:0 SRC_SEL: always = 0x3 – select source as “dsi_phy_pll0_src”
15:12 PRE_DIV_FUNC = pclk_n – 1 : reference to matrix mnd_table[]
Else
2:0 SRC_SEL: always = 0x3 – select source as “dsi_phy_pll0_src”
23:12:
val = pclk_n - pclk_m;
data = (~val) & 0x0ff;
data <<= 24;
0x0130 DSI_PIXEL_CC
If((pclk_d == 0) || (pclk_m == 1)) - mnd_mode = 0 (Bypass mode)
Bit 2 ROOT_EN =1 , bit 0 CLK_EN =1
Else
Bit 7:6 MND_MODE= 2 (10 : Dual-edge mode)
Bit 5 MND_EN = 1
Bit 2 ROOT_EN =1
Bit 0 CLK_EN =1
0x0134 DSI_PIXEL_MD
If((pclk_d == 0) || (pclk_m == 1)) - mnd_mode = 0 (Bypass mode)
Don’t need fill any data since it’s disabled
Else
val = pclk_d * 2;
data = (~val) & 0x0ff;
data |= pclk_m << 8;
0x0054 DSI_NS
If((dsiclk_d== 0) || (dsiclk_m== 1)) - mnd_mode = 0 (Bypass mode)
15:14 PRE_DIV_FUNC = dsiclk_n – 1
2:0 SRC_SEL: always = 0x3 – select source as “dsi_phy_pll0_src”
Else
2:0 SRC_SEL: always = 0x3 – select source as “dsi_phy_pll0_src”
23:12: 
DSI Programming Guide MIPI DSI Driver Migration Guide
LM80-P0598-2 Rev. C MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 17
val = dsiclk _n - dsiclk _m;
data = (~val) & 0x0ff;
data <<= 24;
0x004C DSI_CC
If((dsiclk_d== 0) || (dsiclk_m== 1)) - mnd_mode = 0 (Bypass mode)
Bit 2 ROOT_EN =1 , bit 0 CLK_EN =1 , bit 8 PMXO_SEL = 0 , bit 7:6 MND_MODE
= 0
Else
Bit 8 PMXO_SEL = 0 , 7:6 MND_MODE = 2 (10 : Dual-edge mode) , bit 5 MND_EN
= 1 , Bit 2 ROOT_EN =1 , bit 0 CLK_EN =1
0x0050 DSI_MD
If((dsiclk_d== 0) || (dsiclk_m== 1)) - mnd_mode = 0 (Bypass mode)
There is no need to fill any data, since it is disabled.
Else
val = pclk_d * 2;
data = (~val) & 0x0ff;
data |= pclk_m << 8;
4.2.4 DSI PHY configuration
There are five DSI PHY-related registers.
1. DSIPHY_REGULATOR_CTRL_0-4 – Start from 0x500
2. DSIPHY_TIMING_CTRL_0-11 – Start from 0x0440
 Mapping to DSI PHY-related timing parameter, such as T2™/T3/T4, T6/T7/T8…
(MIPI_D-PHY_Specification_v1.0).
For descriptions of T2, T3, etc., see example table Table 5-1.
3. DSIPHY_CTRL_0-3 – Start from 0x0470
4. DSIPHY_STRENGTH_CTRL_0-3 – Start from 0x0480
5. DSIPHY_PLL_CTRL_0-20 – Start from 0x0200
 Decide how to generate DSI_bit clock/byte clock/pixel clock
mipi_dsi_phy_init()
 Reset DSI PHY first
 Reference to dsi_cmd_mode_phy_db[] in panel driver
 Regulator – Do not change
 DSI PHY timing control – Reference to dsi_cmd_mode_phy_db[] in panel driver
 Default value is middle of DSI PHY specification between min/max
 DSI PHY control – Do not change
 Change DSIPHY_PLL_CTRL_1/2/3/8/9/10 again in mipi_dsi_phy_pll_config()
 Get related value from function mipi_dsi_clk_div_config()
DSI Programming Guide MIPI DSI Driver Migration Guide
LM80-P0598-2 Rev. C MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 18
4.3 DSI client-side-related code change
4.3.1 Panel driver
See the API of mipi_cmd_novatek_blue_qhd_pt_init() in \LINUX\android\kernel\drivers\video\
msm\mipi_novatek_video_qhd_pt.c.
The following parameters must be modified based on the user specification. Most of the values
were also used in mipi_dsi_phy_pll_config() for auto-calculation purposes.
 pinfo.xres – Panel resolution width
 pinfo.yres – Panel resolution height
 pinfo.lcdc.xres_pad – Dummy lines that are larger than LCD resolution. The main purpose is
to keep horizontal line clock status in HS mode. Note that this parameter is not always needed
and the parameter is used depending on the panel requirement.
 pinfo.lcdc.yres_pad – Dummy lines that larger than LCD resolution. The major purpose is to
keep vertical line clock status in HS mode. Note that this parameter is not always needed and
the parameter is used depending on the panel requirement.
 pinfo.wait_cycle – Set as 0, since there should not be any delay between frame and frame
 pinfo.bpp – Color depth
 pinfo.lcdc.h/v_back_porch/front_porch/pulse_width – LCD porch value from LCM spec
 pinfo.lcdc.border_clr – Defines border (inactive) area color for LCD display; 0 x 0 = black
 pinfo.lcdc.underflow_clr – Sets underrun interrupt color; 0xff – blue, 0xff00 – green,
0xff0000 – red
 pinfo.lcdc.hsync_skew – Skew value for LCD
 pinfo.bl_max – Backlight level 0 to bl_max with rounding
 pinfo.bl_min – Backlight level minimum level (Android define 0~255)
 pinfo.fb_num – How many frame buffers for flip
 pinfo.clk_rate – Bit clock rate for panel
 hw vsync – pinfo.lcd.vsync_enable/pinfo.lcd.hw_vsync_mode – Enable or do not enable
hardware TE signal
 pinfo.lcd.refx100 – Hardware Vsync parameter adjust 0x0100 DP_SYNC_CONFIG_P
bit 18:0 VSYNC_COUNT value
 pinfo.mipi.mode – Command mode or Video mode
 pinfo.mipi.pulse_mode_hsa_he – No HSA and HE following VS/VE packet or send HSA and
HE following VS/VE packet
 pinfo.mipi.hfp_power_stop – Power mode during Horizontal Front Porch (HFP) period –
Send blanking packets in HS mode or LP Stop mode
 pinfo.mipi.hbp_power_stop – Power mode during Horizontal Back Porch (HBP) period –
Send blanking packets in HS mode or LP Stop mode
DSI Programming Guide MIPI DSI Driver Migration Guide
LM80-P0598-2 Rev. C MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 19
 pinfo.mipi.hsa_power_stop – Power mode during HSA period – Send blanking packets in HS
mode or LP Stop mode
 pinfo.mipi.eof_bllp_power_stop – Power mode for Blanking or LP (BLLP) interval of last
line of a frame. Send blanking packets during BLLP in HS mode and block Command mode
packets or LP Stop mode (LP-11), or let Command mode engine send packets in HS or LP
mode.
 pinfo.mipi.bllp_power_stop – DSI Power mode for packets sent during BLLP period. Send
blanking packets during BLLP in HS mode and block Command mode packets or LP Stop
mode (LP-11), or let Command mode engine send packets in HS or LP mode.
 pinfo.mipi.traffic_mode – DSI Video mode traffic sequence
 pinfo.mipi.tx_eot_append – TX_EOT_APPEND – Specify whether the EOT packet must be
appended at the end of each forward HS data burst
 pinfo.mipi.dst_format – Panel color format
 pinfo.mipi.vc – MIPI virtual channel number
 pinfo.mipi.rgb_swap – Set as DSI_RGB_SWAP_BGR, swap RGB to BRG
 pinfo.mipi.data_lane0-3 – Lane numbers; set TRUE to enable
 pinfo.mipi.t_clk_post – T14 value (MIPI_D-PHY_Specification_v065 – Figure 21)
 pinfo.mipi.t_clk_pre – T15 time; need fill based on LCM vendor specification; if vendor does
not provide; check with vendor and get value
 pinfo.mipi.stream – Register 0x0080 DSI_TRIG_CTRL bit 8
COMMAND_MODE_DMA_STREAM_SEL, set as 0 for DMAP
 pinfo.mipi.mdp_trigger/pinfo.mipi.dma_trigger – Set both as software trigger
 pinfo.mipi.te_sel – Set as 1 for GPIO AF function as mdp_vsync
 pinfo.mipi.insert_dcs_cmd – Insert DCS command as the first byte of payload of the pixel
data packet or not
 pinfo.mipi.interleave_max
 Maximum number of Command mode RGB packets to send within one horizontal
blanking period of Video mode frame (software must ensure that the package number can
fit in one BLLP period)
 pinfo.mipi.wr_mem_continue/pinfo.mipi.wr_mem_start – In register 0x0040
DSI_COMMAND_MODE_MDP_DCS_CMD_CTRL bit 0~15
 DSI spec wr_mem_continue and wr_mem_start command
DSI Programming Guide MIPI DSI Driver Migration Guide
LM80-P0598-2 Rev. C MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 20
4.3.2 Panel-specific initialization sequence
Panel driver on.
 Mipi_novatek.c function mipi_novatek_lcd_on()
 Panel init command sequence on structure
static struct dsi_cmd_desc novatek_cmd_on_cmds[] = {
{DTYPE_DCS_WRITE, 1, 0, 0, 50,
sizeof(sw_reset), sw_reset},
{DTYPE_DCS_WRITE, 1, 0, 0, 10,
sizeof(exit_sleep), exit_sleep},
{DTYPE_DCS_WRITE, 1, 0, 0, 10,
…
 mipi_dsi_cmd_bta_sw_trigger – Clean up ack_err_status that DSI client reports to host
 mipi_novatek_manufacture_id() reads manufacture ID
4.3.2.1 dsi_cmd_desc
This section describes the dsi_cmd_desc structure.
struct dsi_cmd_desc {
 int dtype;
 int last;
 int vc;
 int ack;
 int wait;
 int dlen;
 char payload
};
Table 4-1 Parameter descriptions
Parameter Description
dtype Data type of the command
last Configures whether the command will be sent one at a time or clubbing
commands together
vc The virtual channel ID
ack Asks for ack from peripheral
Wait The amount of time needed to wait after the command is sent
dlen The total length of the command in bytes
payload Pointer to the start of payload in the command packet
LM80-P0598-2 Rev. C MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 21
5 Panel Bring-up
You must prepare the following items for the DSI panel bring-up on the APQ8064E for Android.
Without these items, support cannot help you in bringing-up the panel:
 Panel specification, which includes the panel parameter information in Section 4.3.1
 Panel power-on sequence and signal duration for GPIO pins, for example, RESET/IOVDD
 Panel DSI initial command sequence and duration information in Section 4.3.2
 bitclk, which the panel needs in order to reach the fps target number
5.1 LCD parameter fill
Fill panel parameters, as discussed in Section 4.3.1, into the panel driver, mipi_(vendor
name)_(cmd/video)_(resolution)_(pt).c, e.g., mipi_himax_video_720p_pt.c.
5.2 PHY table modify inside panel driver
The mipi_dsi_phy_ctrl structure, including the PHY setting is shown. Note that the
DB_APQ8064E_DSI_Timing_Program.xlsm file (attached to this document) is necessary to
generate the bolded values. Section 5.3 describes how to use the .xlsm file.
static struct mipi_dsi_phy_ctrl dsi_video_mode_phy_db = {
/* DSIPHY_REGULATOR_CTRL */
.regulator = {0x03, 0x0a, 0x04, 0x00, 0x20}, /* common 8064 */
/* DSIPHY_CTRL */
.ctrl = {0x5f, 0x00, 0x00, 0x10}, /* common 8064 */
/* DSIPHY_STRENGTH_CTRL */
.strength = {0xff, 0x00, 0x06, 0x00}, /* common 8064 */
/* DSIPHY_TIMING_CTRL */
.timing = { 0xB6, 0x8D, 0x1E, /* panel specific */
0, /* DSIPHY_TIMING_CTRL_3 = 0 */
0x21, 0x95, 0x21, 0x8F, 0x21, 0x03, 0x04}, /* panel specific */
/* DSIPHY_PLL_CTRL */
.pll = { 0x00, /* common 8064 */
/* VCO */
0xC6, 0x01, 0x19, /* panel specific */
0x00, 0x50, 0x48, 0x63,
DSI Programming Guide Panel Bring-up
LM80-P0598-2 Rev. C MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 22
0x77, 0x88, 0x99, /* Auto update by dsi-mipi driver */
0x00, 0x14, 0x03, 0x00, 0x02, /* common 8064 */
0x00, 0x20, 0x00, 0x01 }, /* common 8064 */
};
5.3 Use dsi_timing_program to calculate DSI PHY register
To register:
1. Check with the bridge IC vendor to obtain a bridge IC PHY timing spec, as listed in
Table 5-1.
Table 5-1 Example of bridge IC PHY settings
Item Symbol Unit Test condition Min Typical Max
Time to drive LP-00
to prepare for HS
trans.
T7 ns IOVCC = 1.65 V ~ 3.30v
DPHYVCC = 1.65 V ~3.30 V
40 ns +
4*T1
– 85 ns +
6*T1
T7 + Time to drive
HS-0 before the Sync
sequence
T7 + T8 ns IOVCC = 1.65 V ~ 3.30v
DPHYVCC = 1.65 V ~3.30 V
145 ns +
10*T1
– –
Time to drive flipped
differential state after
last payload data bit
of a HS trans. burst
T9 ns IOVCC = 1.65 V ~ 3.30v
DPHYVCC = 1.65 V ~3.30 V
Max
(n*8* T1,
60 ns +
n*4*T1
– –
Time to drive LP-11
after HS burst
Init ns IOVCC = 1.65 V ~ 3.30v
DPHYVCC = 1.65 V ~3.30 V
100 – –
Time to drive LP-00
after Turnaround
Req.
T12 IOVCC = 1.65 V ~ 3.30v
DPHYVCC = 1.65 V ~3.30 V
4*tlptx
Timeout before new
Tx side starts drive
T13 IOVCC = 1.65 V ~ 3.30v
DPHYVCC = 1.65 V ~3.30 V
1*tlptx – 2*tlptx
Time to drive LP-00
by new Tx
T14 IOVCC = 1.65 V ~ 3.30v
DPHYVCC = 1.65 V ~3.30 V
5*tlptx
Length of any lowpower state period
T2 ns IOVCC = 1.65 V ~ 3.30v
DPHYVCC = 1.65 V ~3.30 V
50 – –
Ratio of
T1(MASTER)
/T1(SLAVE) between
Master and Slave
Side
Ratio T2 IOVCC = 1.65 V ~ 3.30v
DPHYVCC = 1.65 V ~3.30 V
2/3 – 3/2
Time that the
transmitter continues
to send HS clock
after the last
associated Data
Lane has transitioned
to LP Mode
T17 T1 IOVCC = 1.65 V ~ 3.30v
DPHYVCC = 1.65 V ~3.30 V
60 ns +
52 T1
– –
T4 + time for lead
HS-0 drive period
before stating Clock
T4+ T5 ns IOVCC = 1.65 V ~ 3.30v
DPHYVCC = 1.65 V ~3.30 V
300 – –
DSI Programming Guide Panel Bring-up
LM80-P0598-2 Rev. C MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 23
Item Symbol Unit Test condition Min Typical Max
Time that the HS
clock shall be driven
by the transmitter
prior to any
associated Data
Lane beginning the
transition from LP to
HS mode
T18 T1 IOVCC = 1.65 V ~ 3.30v
DPHYVCC = 1.65 V ~3.30 V
8 – –
Time to drive LP-00
to prepare for HS
clock trans.
T4 ns IOVCC = 1.65 V ~ 3.30v
DPHYVCC = 1.65 V ~3.30 V
38 – 95
Time to drive HS
differential state after
last payload clock bit
of a HS clock trans.
T6 ns IOVCC = 1.65 V ~ 3.30v
DPHYVCC = 1.65 V ~3.30 V
60 – –
Time from start of T7
period to start of LP11 state
T15,
T16
IOVCC = 1.65 V ~ 3.30v
DPHYVCC = 1.65 V ~3.30 V
– – 105 ns
+
n*12*UI
Length of low-power
Tx period in case of
using DSI clock
Tx1 T1 IOVCC = 1.65 V ~ 3.30v
DPHYVCC = 1.65 V ~3.30 V
– 32 –
Length of low-power
Tx period in case of
using internal OSC
clock
Tx2 ns IOVCC = 1.65 V ~ 3.30v
DPHYVCC = 1.65 V ~3.30 V
– 1/fosc –
T0 (ESC clock) – 13.5 MHz
T3 – 30-85% rise and fall time
T10 – Request of protocol for high-speed transmission
T11 – Time that drives LP-11 following HS burst
2. Based on the required bitclk panel, calculate the value listed in Table 5-1:
 T1 = 10^3/bitclk (MHz)
 T2 = 10^3/T0 (13.5 MHz)
This calculation gives T2 in ns. T0 should be in MHz
3. Map the following DSI spec name to the APQ8064E software interface register:
 T4
 T5
 T6
 T7
 T8
 T9
 T10
 T11
 T12 
DSI Programming Guide Panel Bring-up
LM80-P0598-2 Rev. C MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 24
 T13
 14
 T15, T16
 T17
 T18
This maps the APQ8064E software interface register description from
0x0440 DSI1_DSIPHY_TIMING_CTRL_0 to 0x0468 DSI1_DSIPHY_TIMING_CTRL_10.
NOTE: Only the yellow highlighted parameters must be changed. Do not change any other value
in this matrix.
NOTE: Different APQs have different matrix values so do not apply the APQ8064E table to any
other APQ.
4. Calculate DSI PHY registers using dsi_timing_program:
a. Open DB_APQ8064E_DSI_Timing_Program.xlsm and look at the DSI and MDP
registers worksheet. Click the paperclip icon (attachment button) on the left side of
the PDF to open the xlsm file.
b. Enter the values in blue cells on this worksheet as shown in Figure 5-1.
Figure 5-1 The DSI and MDP registers worksheet
The correct DSIPHY_TIMING_CTRL values appear, as shown in Figure 5-2.
DSI Programming Guide Panel Bring-up
LM80-P0598-2 Rev. C MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 25
Figure 5-2 DSIPHY_TIMING_CTRL
5. Place those values into the matrix mipi_dsi_phy_ctrl timing part.
/* timing */
{0xae, 0x3c, 0x1b, 0x00, 0x54, 0x48, 0x1D,
0x40, 0x2f, 0x03, 0x04},
NOTE: DSIPHY_TIMING_CTRL_3 is 0x00. DSIPHY_TIMING_CTRL_11 is used for the DSI
secondary display, which does not exist on the device. Therefore, it is not necessary to modify it
if there is no DSI secondary panel.
NOTE: DSI PHY timing parameters can be calculated using the standard D-PHY specification listed in
Table 5-1. Based on the input values given by the customer and % within allowable PHY timing
range, the Excel sheet (attached to this document) calculates the DSI PHY timings. But if you
must modify any specific timing, you can do it and the Excel sheet will update accordingly.
LM80-P0598-2 Rev. C MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 26
6 Panel Bring-up Checkpoints
6.1 No DSI clock output
6.1.1 Check function mipi_dsi_clk_ctrl ()
Read 0x4c/0x50/0x54 of the DSI register value and determine if 0 appears.
printk(KERN_ERR “mmss_cc_base + 0x004c =%x \n”, (uint)MIPI_INP_SECURE(cc));
printk(KERN_ERR “mmss_cc_base + 0x0050 =%x \n”, (uint)MIPI_INP_SECURE(md));
printk(KERN_ERR “mmss_cc_base + 0x0054 =%x \n”, (uint)MIPI_INP_SECURE(ns));
If 0 appears, the DSI host-related clock did not turn on successfully.
6.1.2 Check DSI_related clocks by ADB command
6. Adb root
7. Adb remount
8. Adb shell
9. # mount -t debugfs none /sys/kernel/debug
10. # cd /sys/kernel/debug/clk/dsi1_byte_clk
11. #cat measure
Then get the DSI byte clock as shown:
root@android:/sys/kernel/debug/clk/dsi1_byte_clk # cat measure
cat measure
56750912
NOTE: The DSI bitclk = DSI byte clock x8.
DSI Programming Guide Panel Bring-up Checkpoints
LM80-P0598-2 Rev. C MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 27
6.1.3 Check DSI_BITCLK output signal by scope
Since the DSI_BITCLK is a differential signal, the actual frequency is twice the time of the
measured data.
Figure 6-1, Figure 6-2, and Figure 6-3 show examples.
Figure 6-1 DSI_BITCLK = 366 MHz
Figure 6-2 DSI_bit clock = 500 MHz
DSI Programming Guide Panel Bring-up Checkpoints
LM80-P0598-2 Rev. C MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 28
Figure 6-3 DSI_bit clock = 600 MHz
6.1.4 Possible file changes
If your display needs more pins than the default APQ8064E-based SYS6640 development
platform display, then you may need changes to the following files:
 board-8064-regulator.c
 board-8064-pmic.c
 board-8064
 –gpiomux
 .c
DSI Programming Guide Panel Bring-up Checkpoints
LM80-P0598-2 Rev. C MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 29
6.2 Tearing on DSI Command mode LCD
Figure 6-4 shows the frame package transfer vs. TE signal.
1. Ensure DSI bitclk is high enough to update one frame package during 16.6 ms (60 Hz).
2. Ensure the frame updates bitclk on the scope as expected. Since bitclk is a differential signal,
the frequency number on the scope x2 will match the bitclk rate exactly.
Figure 6-4 Frame package transfer vs. TE signal
LM80-P0598-2 Rev. C MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 30
7 Unstable/Locked Bitclk Issue
In APQ8064E, the bitclk may be unstable or locked if the VCO frequency is less than 600 MHz.
The unstable bitclk may make the LCD unable to light up.
An abnormal low-power status and unstable bitclk can be measured by scope in this case. The
bitclk locked can be checked with the MIPI_DSI_1_DSI1_CLK_STATUS bit16 register,
DSIPLL_UNLOCKED = 1.
The APQ8064E VCO clock range is 600 MHz ~ 1.2 GHz, which is guaranteed over process,
voltage, temperature (PVT) variations testing.
7.1 VCO and bitclk setting formula on APQ8064E
The DSI regulator, strength, and DSI1_DSIPHY_TIMING_CTRL do not need to change and
only the PHY PLL change is necessary.
To change DSI1_DSIPHY_PLL_CTRL, do the following:
1. If the bitclk rate > 600 MHz, program the VCO clock to 1*bitclk.
2. If the bitclk rate < 600 MHz, program the VCO clock to 2* data rate and the programmed
VCO clock is still < 1.2 GHz.
In the DSI PHY PLL, DSI1_DSIPHY_PLL_CTRL_1/2/3/8/9/10 needs to be changed, and the
software code change as compared with the earlier version of the processor is shown below:
diff—git a/drivers/video/msm/msm_dss_io_8960.c
b/drivers/video/msm/msm_dss_io_8960.c
old mode 100644
new mode 100755
index 3b000ec..5e5d3fb
--- a/drivers/video/msm/msm_dss_io_8960.c
+++ b/drivers/video/msm/msm_dss_io_8960.c
@@ -328,7 +328,7 @@ int mipi_dsi_clk_div_config(uint8 bpp, uint8 lanes,
} else if (rate < 250) {
vco = rate * 4;
div_ratio = 4;
- } else if (rate < 500) {
+ } else if (rate < 600) {
vco = rate * 2;
div_ratio = 2;
} else {
DSI Programming Guide Unstable/Locked Bitclk Issue
LM80-P0598-2 Rev. C MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 31
7.2 Verification by scope capture
Normal waveforms are verified by scope capture.
7.2.1 Normal waveform
A normal waveform is shown in Figure 7-1.
Figure 7-1 MIPI DSI bitclk = 578 MHz normal waveform
Normal command mode
CP
D0N
D0P
CN
LM80-P0598-2 Rev. C MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 32
EXHIBIT 1
PLEASE READ THIS LICENSE AGREEMENT (“AGREEMENT”) CAREFULLY. THIS AGREEMENT IS A BINDING LEGAL
AGREEMENT ENTERED INTO BY AND BETWEEN YOU (OR IF YOU ARE ENTERING INTO THIS AGREEMENT ON BEHALF
OF AN ENTITY, THEN THE ENTITY THAT YOU REPRESENT) AND QUALCOMM TECHNOLOGIES, INC. (“QTI” “WE”
“OUR” OR “US”). THIS IS THE AGREEMENT THAT APPLIES TO YOUR USE OF THE DESIGNATED AND/OR ATTACHED
DOCUMENTATION AND ANY UPDATES OR IMPROVEMENTS THEREOF (COLLECTIVELY, “MATERIALS”). BY USING OR
COMPLETING THE INSTALLATION OF THE MATERIALS, YOU ARE ACCEPTING THIS AGREEMENT AND YOU AGREE
TO BE BOUND BY ITS TERMS AND CONDITIONS. IF YOU DO NOT AGREE TO THESE TERMS, QTI IS UNWILLING TO
AND DOES NOT LICENSE THE MATERIALS TO YOU. IF YOU DO NOT AGREE TO THESE TERMS YOU MUST
DISCONTINUE AND YOU MAY NOT USE THE MATERIALS OR RETAIN ANY COPIES OF THE MATERIALS. ANY USE OR
POSSESSION OF THE MATERIALS BY YOU IS SUBJECT TO THE TERMS AND CONDITIONS SET FORTH IN THIS
AGREEMENT.
1.1 License. Subject to the terms and conditions of this Agreement, including, without limitation, the restrictions, conditions,
limitations and exclusions set forth in this Agreement, Qualcomm Technologies, Inc. (“QTI”) hereby grants to you a nonexclusive, limited
license under QTI’s copyrights to use the attached Materials; and to reproduce and redistribute a reasonable number of copies of the Materials.
You may not use Qualcomm Technologies or its affiliates or subsidiaries name, logo or trademarks; and copyright, trademark, patent and any
other notices that appear on the Materials may not be removed or obscured. QTI shall be free to use suggestions, feedback or other information
received from You, without obligation of any kind to You. QTI may immediately terminate this Agreement upon your breach. Upon termination
of this Agreement, Sections 1.2-4 shall survive.
1.2 Indemnification. You agree to indemnify and hold harmless QTI and its officers, directors, employees and successors and
assigns against any and all third party claims, demands, causes of action, losses, liabilities, damages, costs and expenses, incurred by QTI
(including but not limited to costs of defense, investigation and reasonable attorney’s fees) arising out of, resulting from or related to: (i) any
breach of this Agreement by You; and (ii) your acts, omissions, products and services. If requested by QTI, You agree to defend QTI in
connection with any third party claims, demands, or causes of action resulting from, arising out of or in connection with any of the foregoing.
1.3 Ownership. QTI (or its licensors) shall retain title and all ownership rights in and to the Materials and all copies thereof, and
nothing herein shall be deemed to grant any right to You under any of QTI's or its affiliates’ patents. You shall not subject the Materials to any
third party license terms (e.g., open source license terms). You shall not use the Materials for the purpose of identifying or providing evidence to
support any potential patent infringement claim against QTI, its affiliates, or any of QTI’s or QTI’s affiliates’ suppliers and/or direct or indirect
customers. QTI hereby reserves all rights not expressly granted herein.
1.4 WARRANTY DISCLAIMER. YOU EXPRESSLY ACKNOWLEDGE AND AGREE THAT THE USE OF THE
MATERIALS IS AT YOUR SOLE RISK. THE MATERIALS AND TECHNICAL SUPPORT, IF ANY, ARE PROVIDED "AS IS" AND
WITHOUT WARRANTY OF ANY KIND, WHETHER EXPRESS OR IMPLIED. QTI ITS LICENSORS AND AFFILIATES MAKE NO
WARRANTIES, EXPRESS OR IMPLIED, WITH RESPECT TO THE MATERIALS OR ANY OTHER INFORMATION OR
DOCUMENTATION PROVIDED UNDER THIS AGREEMENT, INCLUDING BUT NOT LIMITED TO ANY WARRANTY OF
MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE OR AGAINST INFRINGEMENT, OR ANY EXPRESS OR
IMPLIED WARRANTY ARISING OUT OF TRADE USAGE OR OUT OF A COURSE OF DEALING OR COURSE OF PERFORMANCE.
NOTHING CONTAINED IN THIS AGREEMENT SHALL BE CONSTRUED AS (I) A WARRANTY OR REPRESENTATION BY QTI, ITS
LICENSORS OR AFFILIATES AS TO THE VALIDITY OR SCOPE OF ANY PATENT, COPYRIGHT OR OTHER INTELLECTUAL
PROPERTY RIGHT OR (II) A WARRANTY OR REPRESENTATION BY QTI THAT ANY MANUFACTURE OR USE WILL BE FREE
FROM INFRINGEMENT OF PATENTS, COPYRIGHTS OR OTHER INTELLECTUAL PROPERTY RIGHTS OF OTHERS, AND IT
SHALL BE THE SOLE RESPONSIBILITY OF YOU TO MAKE SUCH DETERMINATION AS IS NECESSARY WITH RESPECT TO THE
ACQUISITION OF LICENSES UNDER PATENTS AND OTHER INTELLECTUAL PROPERTY OF THIRD PARTIES.
1.5 LIMITATION OF LIABILITY. IN NO EVENT SHALL QTI, QTI’S AFFILIATES OR ITS LICENSORS BE LIABLE TO
YOU FOR ANY INCIDENTAL, CONSEQUENTIAL OR SPECIAL DAMAGES, INCLUDING BUT NOT LIMITED TO ANY LOST
PROFITS, LOST SAVINGS, OR OTHER INCIDENTAL DAMAGES, ARISING OUT OF THE USE OR INABILITY TO USE, OR THE
DELIVERY OR FAILURE TO DELIVER, ANY OF THE MATERIALS, OR ANY BREACH OF ANY OBLIGATION UNDER THIS
AGREEMENT, EVEN IF QTI HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. THE FOREGOING LIMITATION OF
LIABILITY SHALL REMAIN IN FULL FORCE AND EFFECT REGARDLESS OF WHETHER YOUR REMEDIES HEREUNDER ARE
DETERMINED TO HAVE FAILED OF THEIR ESSENTIAL PURPOSE. THE ENTIRE LIABILITY OF QTI, QTI’s AFFILIATES AND ITS
LICENSORS, AND THE SOLE AND EXCLUSIVE REMEDY OF YOU, FOR ANY CLAIM OR CAUSE OF ACTION ARISING
HEREUNDER (WHETHER IN CONTRACT, TORT, OR OTHERWISE) SHALL NOT EXCEED US$10.
2. COMPLIANCE WITH LAWS; APPLICABLE LAW. You agree to comply with all applicable local, international and national laws
and regulations and with U.S. Export Administration Regulations, as they apply to the subject matter of this Agreement. This Agreement is
governed by the laws of the State of California, excluding California’s choice of law rules.
3. CONTRACTING PARTIES. If the Materials are downloaded on any computer owned by a corporation or other legal entity, then this
Agreement is formed by and between QTI and such entity. The individual accepting the terms of this Agreement represents and warrants to QTI
that they have the authority to bind such entity to the terms and conditions of this Agreement.
4. MISCELLANEOUS PROVISIONS. This Agreement, together with all exhibits attached hereto, which are incorporated herein by this
reference, constitutes the entire agreement between QTI and You and supersedes all prior negotiations, representations and agreements between
the parties with respect to the subject matter hereof. No addition or modification of this Agreement shall be effective unless made in writing and
signed by the respective representatives of QTI and You. The restrictions, limitations, exclusions and conditions set forth in this Agreement shall
apply even if QTI or any of its affiliates becomes aware of or fails to act in a manner to address any violation or failure to comply therewith. You
hereby acknowledge and agree that the restrictions, limitations, conditions and exclusions imposed in this Agreement on the rights granted in this
Agreement are not a derogation of the benefits of such rights. You further acknowledges that, in the absence of such restrictions, limitations,
conditions and exclusions, QTI would not have entered into this Agreement with You. Each party shall be responsible for and shall bear its own
expenses in connection with this Agreement. If any of the provisions of this Agreement are determined to be invalid, illegal, or otherwise
unenforceable, the remaining provisions shall remain in full force and effect. This Agreement is entered into solely in the English language, and
if for any reason any other language version is prepared by any party, it shall be solely for convenience and the English version shall govern and
control all aspects. If You are located in the province of Quebec, Canada, the following applies: The Parties hereby confirm they have requested
this Agreement and all related documents be prepared in English.

Technical Note
NAND Flash 101:
An Introduction to NAND Flash and
How to Design It In to Your Next Product
Introduction
This technical note discusses the basics of NAND Flash and demonstrates its power,
density, and cost advantages for embedded systems. It covers data reliability and
methods for overcoming common interface design challenges, focusing on the actual
hardware and software components necessary to enable designers to build complete
and functional subsystems.
Embedded systems have traditionally utilized NOR Flash for nonvolatile memory. Many
current designs are moving to NAND Flash to take advantage of its higher density and
lower cost for high-performance applications.
Figure 1 shows how demand for NAND Flash has been driven primarily several major
markets—solid state drives, mobile phones, Flash memory cards, USB Flash drives and
MP3/PMP players.
As the quest has continued for lower-power, lighter, more robust products, NAND Flash
has become the leading storage choice for a broad range of applications. It meets the
storage requirements of many consumer storage, audio, and video products far better
than a hard drive—particularly in lower-capacity applications (8GB or less).
Figure 1: Major Markets Driving NAND Flash
Other
Solid State Drives
Digital Video Camcorders
Personal Navigation Devices
Digital Still Cameras
Mobile Phones
MP3/PMP Players
USB Flash Drives
Flash Memory Cards
2007 2008 2009 2010 2011 2012 2013 2014
70,000
60,000
50,000
40,000
30,000
20,000
10,000
0
Million GB
Source: Forward Insights, NAND Quarterly Insights Q3/09, www.forward-insights.com/
Report No. FI-NFL-NQI-Q309 September 2009, accessed 4/14/2010; used with permission. 
PDF: 09005aef8245f460 / Source: 09005aef8245f3bf Micron Technology, Inc., reserves the right to change products or specifications without notice.
tn2919_nand_101.fm - Rev. B 4/10 EN 2 ©2006 Micron Technology, Inc. All rights reserved.
 TN-29-19: NAND Flash 101
Flash Basics
Flash Basics
The NAND Flash device discussed in this technical note is based on a 2Gb asynchronous
SLC device and its parameters (unless otherwise noted). Higher density devices and
other more advanced NAND devices may have additional features and different parameters.
The NAND Flash array is grouped into a series of blocks, which are the smallest erasable
entities in a NAND Flash device.
A NAND Flash block is 128KB. Erasing a block sets all bits to 1 (and all bytes to FFh).
Programming is necessary to change erased bits from 1 to 0. The smallest entity that can
be programmed is a byte. Some NOR Flash memory can perform READ-While-WRITE
operations. Although NAND FLASH cannot perform READs and WRITEs simultaneously, it is possible to accomplish READ/WRITE operations at the system level using a
method called shadowing. Shadowing has been used on personal computers for many
years to load the BIOS from the slower ROM into the higher-speed RAM.
There is a limit to the number of times NAND Flash blocks can reliably be programmed
and erased. Nominally, each NAND block will survive 100,000 PROGRAM/ERASE cycles.
A technique known as wear leveling ensures that all physical blocks are exercised
uniformly. To maximize the life span of a design, it is critical to implement both wear
leveling and bad-block management.
Figure 2 shows a comparison of NAND Flash and NOR Flash cells. NAND efficiencies are
due in part to the small number of metal contacts in the NAND Flash string. NAND Flash
cell size is much smaller than NOR Flash cell size—4F2 compared to 10F2—because NOR
Flash cells require a separate metal contact for each cell.
PDF: 09005aef8245f460 / Source: 09005aef8245f3bf Micron Technology, Inc., reserves the right to change products or specifications without notice.
tn2919_nand_101.fm - Rev. B 4/10 EN 3 ©2006 Micron Technology, Inc. All rights reserved.
 TN-29-19: NAND Flash 101
Flash Basics
Figure 2: Comparison of NAND and NOR Flash Cells
NAND Flash is very similar to a hard-disk drive. It is sector-based (page-based) and well
suited for storage of sequential data such as pictures, video, audio, or PC data. Although
random access can be accomplished at the system level by shadowing the data to RAM,
doing so requires additional RAM storage. Also, like a hard-disk drive, a NAND Flash
device may have bad blocks and requires error-correction code (ECC) to maintain data
integrity.
NAND Flash cells are 60% smaller than NOR Flash cells, providing the higher densities
required for today’s low-cost consumer devices in a significantly reduced die area.
NAND Flash is used in virtually all removable cards, including USB drives, secure digital
(SD) cards, memory stick cards, CompactFlash® cards, and multimedia cards (MMCs).
The NAND Flash multiplexed interface provides a consistent pinout for all recent
devices and densities. This pinout allows designers to use lower densities and migrate to
higher densities without any hardware changes to the printed circuit board.
Word line
Source line
Contact
Unit Cell
Bit line
2F
2F
Cell Array
NAND
Layout
Cross
Section
Cell Size 4F2
Word line
Source line
Bit line
Contact
Unit Cell
Bit line
2F
5F
NOR
10F2 
PDF: 09005aef8245f460 / Source: 09005aef8245f3bf Micron Technology, Inc., reserves the right to change products or specifications without notice.
tn2919_nand_101.fm - Rev. B 4/10 EN 4 ©2006 Micron Technology, Inc. All rights reserved.
 TN-29-19: NAND Flash 101
NAND vs. NOR Comparison
NAND vs. NOR Comparison
Advantages of Each Device
There are specific advantages and disadvantages to using NAND Flash or NOR Flash in
embedded systems (see Table 1). NAND Flash is best suited for file or sequential-data
applications; NOR Flash is best suited for random access. Advantages of NAND Flash
over NOR Flash include fast PROGRAM and ERASE operations. NOR Flash advantages
are its random-access and byte-write capabilities.
Random access gives NOR Flash its execute-in-place (XiP) functionality, which is often
required in embedded applications. An increasing number of processors include a direct
NAND Flash interface and can boot directly from the NAND Flash device (without NOR
Flash). These processors provide a very attractive solution when cost, space, and storage
capacity are important. Using these processors, XiP capability will cease to be a consideration when designing NAND Flash into embedded applications.
Disadvantages of Each Device
The main NAND Flash disadvantage is slow random access; NOR Flash is hampered by
slow WRITE and ERASE performance.
Random Access Timing
Random access time on NOR Flash is specified at 0.075µs; on NAND Flash, random
access time for the first byte only is significantly slower—25µs (see Table 2 on page 5).
However, after initial access has been made, the remaining 2111 bytes are shifted out of
NAND at a mere 0.025µs per byte. This results in a bandwidth of more than 26 MB/s for
8-bit I/Os and 41 MB/s for 16-bit I/Os.
Table 1: NAND Flash vs. NOR Flash
NAND NOR
Advantages Fast PROGRAMs Random access
Fast ERASEs Byte PROGRAMs possible
Disadvantages Slow random access Slow PROGRAMs
Byte PROGRAMs difficult Slow ERASEs
Applications File (disk) applications Replacement of EPROM
Voice, data, video recorder Execute directly from nonvolatile
memory
Any large sequential data
PDF: 09005aef8245f460 / Source: 09005aef8245f3bf Micron Technology, Inc., reserves the right to change products or specifications without notice.
tn2919_nand_101.fm - Rev. B 4/10 EN 5 ©2006 Micron Technology, Inc. All rights reserved.
 TN-29-19: NAND Flash 101
NAND vs. NOR Comparison
NAND Flash Design Benefits
The real benefits of NAND Flash are faster PROGRAM and ERASE times, as NAND Flash
delivers sustained WRITE performance exceeding 7 MB/s. Block erase times are an
impressive 500µs for NAND Flash compared with 1 second for NOR Flash. Clearly,
NAND Flash offers several compelling advantages. The one challenge is that it is not
well-suited for direct random access. As noted previously, this can be handled with code
shadowing.
Structural Differences
NAND Flash offers several structural advantages over NOR Flash, starting with the pin
count. The hardware pin requirements for NAND Flash and NOR Flash interfaces differ
markedly. NOR Flash requires approximately 44 I/O pins for a 16-bit device, while NAND
Flash requires only 24 pins for a comparable interface (see Table 3). The multiplexed
command, address, and data bus reduces the number of required pins by nearly 45%. An
added benefit of the multiplexed interface is that higher-density NAND Flash devices
can be supported using the same hardware design and printed circuit board (PCB) used
for lower densities. The common TSOP-1 package has been in use for many years, and
this feature enables customers to migrate to higher-density NAND Flash devices using
the same PCB design.
Another advantage of NAND Flash is evident in the packaging options. For example, this
NAND Flash device offers a monolithic 2Gb die or it can support up to four stacked die,
accommodating an 8Gb device in the same package. This makes it possible for a single
package and interface to support higher densities in the future.
Table 2: NAND/NOR Characteristics
Characteristic NAND Flash: MT29F2G08A NOR Flash: TE28F128J3
Random access READ 25µs (first byte)
0.025µs each for remaining 2111 bytes
0.075µs
Sustained READ speed
(sector basis)
26 MB/s (x8) or 41 MB/s (x16) 31 MB/s (x8) or
62 MB/s (x16)
Random WRITE speed ≈ 220µs/2112 bytes 128µs/32 bytes
Sustained WRITE speed
(sector basis)
7.5 MB/s 0.250 MB/s
Erase block size 128KB 128KB
ERASE time per block (TYP) 500µs 1 sec
Table 3: Required Hardware Pins
NAND Flash: 23 Pins (x16) NOR Flash: 44 Pins
I/O device-type interface, composed of: Random-access interface, typically composed of:
CE# Chip enable CE# Chip enable
WE# Write enable WE# Write enable
RE# Read enable OE# Output enable
CLE Command latch enable D[15:0] Data bus
ALE Address latch enable A[23:0] Address bus
I/O[7:0] Data bus (I/O[15:0} for x16 parts) WP# Write protect
WP# Write protect
R/B# Ready/busy
PDF: 09005aef8245f460 / Source: 09005aef8245f3bf Micron Technology, Inc., reserves the right to change products or specifications without notice.
tn2919_nand_101.fm - Rev. B 4/10 EN 6 ©2006 Micron Technology, Inc. All rights reserved.
 TN-29-19: NAND Flash 101
NAND Flash Architecture and Basic SLC Operation
NAND Flash Architecture and Basic SLC Operation
The 2Gb NAND Flash device is organized as 2048 blocks, with 64 pages per block (see
Figure 3). Each page is 2112 bytes, consisting of a 2048-byte data area and a 64-byte
spare area. The spare area is typically used for ECC, wear-leveling, and other software
overhead functions, although it is physically the same as the rest of the page. Many
NAND Flash devices are offered with either an 8- or a 16-bit interface. Host data is
connected to the NAND Flash memory via an 8-bit- or 16-bit-wide bidirectional data
bus. For 16-bit devices, commands and addresses use the lower 8 bits (7:0). The upper 8
bits of the 16-bit data bus are used only during data-transfer cycles.
Figure 3: 2Gb NAND Flash Device Organized as 2048 Blocks
Erasing a block requires approximately 500µs. After the data is loaded in the register,
programming a page requires approximately 220µs. A PAGE READ operation requires
approximately 25µs, during which the page is accessed from the array and loaded into
the 16,896-bit (2112-byte) register. The register is then available for the user to clock out
the data.
In addition to the I/O bus, the NAND Flash interface consists of six major control signals
(see Table 4 on page 7). (Note: The # symbol after a signal indicates that the signal is
asserted LOW.)
2112 bytes 64
Serial input (x8 or x16):
25ns (MAX CLK)
Serial output (x8 or x16): Register 25ns (MAX CLK)
NAND Flash Memory Array
Data area: 2048 bytes Spare area
(ECC, etc.)
64 bytes
8-bit byte
or 16-bit word
64 pages 2048 blocks (2Gb SLC device)
per block
PROGRAM:
≈ 220µs/page
READ (page load): ≈ 25µs
BLOCK ERASE: ≈ 500µs
NAND Flash Block
NAND Flash Page 2112 bytes 64
PDF: 09005aef8245f460 / Source: 09005aef8245f3bf Micron Technology, Inc., reserves the right to change products or specifications without notice.
tn2919_nand_101.fm - Rev. B 4/10 EN 7 ©2006 Micron Technology, Inc. All rights reserved.
 TN-29-19: NAND Flash 101
NAND Flash Architecture and Basic SLC Operation
Data is shifted into or out of the NAND Flash register 8 or 16 bits at a time. In a
PROGRAM operation, the data to be programmed is clocked into the data register on the
rising edge of WE#. Special commands are used to randomly access data or move data
around within the register to make random access possible; see “RANDOM DATA INPUT
Operation” on page 15 and “READ FOR INTERNAL DATA MOVE Operation” on page 20.
Data is output from the data register in a similar fashion by means of the read enable
(RE#) signal, which is responsible for outputting the current data and incrementing to
the next location. The WE# and RE# clocks can run as fast as 25ns per transfer. When RE#
or chip enable (CE#) are not asserted LOW, the output buffers are tri-stated. This combination of CE# and RE# activates the output buffers, enabling NAND Flash to share the
data bus with other types of memory, such as NOR Flash, SRAM, or DRAM. This feature
is sometimes referred to as “chip enable don’t care.” The primary purpose of this reference is to differentiate very old NAND Flash devices, which require CE# to be asserted
for the entire cycle.
All NAND Flash operations are initiated by issuing a command cycle. This is accomplished by placing the command on I/O[7:0], driving CE# LOW and CLE HIGH, then
issuing a WE# clock. Commands, addresses, and data are clocked into the NAND Flash
device on the rising edge of WE# (see Figure 4 and Table 5 on page 8).
Most commands require a number of address cycles followed by a second command
cycle. With the exception of the RESET and READ STATUS commands, new commands
should not be issued when the device is busy (see Figure 4 and Table 5 on page 8).
Table 4: Signal Descriptions
Symbol Signal Description
ALE Address latch enable When ALE is HIGH, addresses are latched into the NAND
Flash address register on the rising edge of the WE#
signal.
CE# Chip enable If CE is not asserted, the NAND Flash device remains in
standby mode and does not respond to any control
signals.
CLE Command latch enable When CLE is HIGH, commands are latched into the
NAND Flash command register on the rising edge of the
WE# signal.
R/B# Ready/busy# If the NAND Flash device is busy with an ERASE,
PROGRAM, or READ operation, the R/B# signal is
asserted LOW. The R/B# signal is open drain and
requires a pull-up resistor.
RE# Read enable RE# enables the output data buffers.
WE# Write enable WE# is responsible for clocking data, address, or
commands into the NAND Flash device.
PDF: 09005aef8245f460 / Source: 09005aef8245f3bf Micron Technology, Inc., reserves the right to change products or specifications without notice.
tn2919_nand_101.fm - Rev. B 4/10 EN 8 ©2006 Micron Technology, Inc. All rights reserved.
 TN-29-19: NAND Flash 101
NAND Flash Architecture and Basic SLC Operation
Figure 4: Command Cycles for NAND Flash Operations
Table 5: Command Cycles and Address Cycles
Command
Command
Cycle 1
Number of
Address
Cycles
Data Cycles
Required1
Command
Cycle 2
Valid
During
Busy
READ PAGE 00h 5 No 30h No
READ PAGE CACHE SEQUENTIAL 31h – No – No
READ PAGE CACHE SEQUENTIAL LAST 3Fh – No – No
READ for INTERNAL DATA MOVE 00h 5 No 35h No
RANDOM DATA READ 05h 2 No E0h No
READ ID 90h 1 No – No
READ STATUS 70h – No – Yes
PROGRAM PAGE 80h 5 Yes 10h No
PROGRAM PAGE CACHE 80h 5 Yes 15h No
PROGRAM for INTERNAL DATA MOVE 85h 5 Optional 10h No
RANDOM DATA INPUT 85h 2 Yes – No
ERASE BLOCK 60h 3 No D0h No
RESET FFh – No – Yes
RE#
CE#
tREA
tCEA
RE#
CE#
ALE
CLE
I/Ox
I/Ox DOUT
R/B#
WE#
tR
00h Address (5 cycles) 30h
Command
cycle 1
Address cycles Command
cycle 2
Don't Care
PDF: 09005aef8245f460 / Source: 09005aef8245f3bf Micron Technology, Inc., reserves the right to change products or specifications without notice.
tn2919_nand_101.fm - Rev. B 4/10 EN 9 ©2006 Micron Technology, Inc. All rights reserved.
 TN-29-19: NAND Flash 101
NAND Flash Commands
The addressing scheme for a 2Gb NAND Flash device is shown in Table 6. The first and
second address cycles (or bytes) specify the column address, which specifies the starting
byte within the page. The last column location is 2112, so the address of this last location
is 08h in the second byte, and 3Fh in the first byte. PA[5:0] specify the page address
within the block, and BA[16:6] specify the block address. While the full 5-byte address is
required for most PROGRAM and READ operations, only the first and second bytes (or
cycles) are required for operations that access data randomly within the page. The
BLOCK ERASE operation requires only the three most significant bytes (third, fourth,
and fifth) to select the block.
Notes: 1. Block address concatenated with page address = actual page address. CAx = column
address; PAx = page address; BAx = block address. The page address and the block address,
collectively, constitute the row address.
2. If CA11 = 1, then CA[10:6] must be 0.
3. The most significant address byte is the fifth cycle; the least significant address byte is the
first cycle
NAND Flash Commands
When any NAND Flash command is issued, CE# and ALE must be LOW, CLE must be
asserted, and write clocks (WE#) must be provided. When any NAND Flash address is
issued, CE# and CLE must be LOW, ALE must be asserted, and write clocks (WE#) must
be provided. While the device is busy, only two commands can be issued: RESET and
READ STATUS.
RESET Operation
The simplest NAND Flash command is the RESET (FFh) command (see Figure 5). The
RESET command does not require an address or subsequent cycle(s) (see Table 5 on
page 8). Simply assert CLE and issue a write clock with FFh on the data bus, and a RESET
operation is performed. This RESET command must be issued immediately following
power-up, and prior to issuing any other command.
RESET is one of two commands that can be issued while the NAND Flash device is busy
(see Table 5 on page 8). If the device is busy processing a previous command, issuing a
RESET command aborts the previous operation. If the previous operation was an ERASE
or PROGRAM command, issuing a RESET command aborts the command prematurely,
and the desired operation does not complete. ERASE and PROGRAM can be timeconsuming operations; issuing the RESET command makes it possible to abort either
and reissue the command at a later time.
Table 6: 2Gb SLC NAND Flash Addressing Scheme
Cycle I/O7 I/O6 I/O5 I/O4 I/O3 I/O2 I/O1 I/O0
First CA7 CA6 CA5 CA4 CA3 CA2 CA1 CA0
Second LOW LOW LOW LOW CA11 CA10 CA9 CA8
Third BA7 BA6 PA5 PA4 PA3 PA2 PA1 PA0
Fourth BA15 BA14 BA13 BA12 BA11 BA10 BA9 BA8
Fifth LOW LOW LOW LOW LOW LOW LOW BA16
PDF: 09005aef8245f460 / Source: 09005aef8245f3bf Micron Technology, Inc., reserves the right to change products or specifications without notice.
tn2919_nand_101.fm - Rev. B 4/10 EN 10 ©2006 Micron Technology, Inc. All rights reserved.
 TN-29-19: NAND Flash 101
NAND Flash Commands
Figure 5: RESET Command
READ ID Operation
The READ ID (90h) command requires one dummy address cycle (00h), but it does not
require a second command cycle (see Table 5 on page 8). After the command and
dummy addresses are issued, the ID data can be read out by keeping CLE and ALE LOW
and toggling the RE# signal for each byte of ID. Figure 6 shows the timing of the READ ID
operation, and Table 7 shows the format of the 5-byte response.
Figure 6: READ ID Command
CLE
CE#
WE#
R/B#
I/Ox
RESET command
FFh
tWB
tRST
WE#
CE#
ALE
CLE
RE#
I/Ox
Address, 1 cycle
90h 00h Byte 0 Byte 1 Byte 2 Byte 3 Byte 4
tAR
tWHR tREA
PDF: 09005aef8245f460 / Source: 09005aef8245f3bf Micron Technology, Inc., reserves the right to change products or specifications without notice.
tn2919_nand_101.fm - Rev. B 4/10 EN 11 ©2006 Micron Technology, Inc. All rights reserved.
 TN-29-19: NAND Flash 101
NAND Flash Commands
Notes: 1. b = binary; h = hexadecimal
Table 7: READ ID Response
Option I/O7 I/O6 I/O5 I/O4 I/O3 I/O2 I/O1 I/O0 Value1
Byte 0 – Manufacturer ID
Manufacturer Micron 0 0 1 0 1 1 0 02Ch
Byte 1 – Device ID
MT29F2G08AAD 2Gb, x8, 3V 1 1 0 1 1 0 1 0 DAh
MT29F2G16AAD 2Gb, x8, 3V 11001010 CAh
MT29F2G08ABD 2Gb, x8, 1.8V 1 0 1 0 1 0 1 0 AAh
MT29F2G16ABD 2Gb, x16, 1.8V 1 0 1 1 1 0 1 0 BAh
Byte 2
Number of die per CE# 1 0 0 00b
Cell type SLC 0 0 00b
Number of simultaneously
programmed pages
1 0 0 01b
Interleaved operations
between multiple die
Not supported 0 0b
Cache programming Supported 1 1b
Byte value MT29F2Gxxxxx 1 0 0 0 0 0 0 0 80h
Byte 3
Page size 2KB 0 1 01b
Spare area size (bytes) 64B 1 1b
Block size (w/o spare) 128KB 0 1 01b
Organization x8 0 0b
x16 1 1b
Serial access (MIN) 25ns 1 0 1xxxb
Serial access (MIN) 35ns 0 0 0xxx0b
Byte value MT29F2G08AAD 1 0 0 1 0 1 0 1 95h
MT29F2G16AAD 1 1 0 1 0 1 0 1 D5h
Byte value MT29F2G08ABD 0 0 0 1 0 1 0 1 15h
MT29F2G16ABD 0 1 0 1 0 1 0 1 55h
Byte 4
Reserved 0 0 00b
Planes per CE# 1 0 0 00b
Plane size 2Gb 1 0 1 101b
Reserved 0 0b
Byte value MT29F2Gxx 0 1 0 1 0 0 0 0 50h
PDF: 09005aef8245f460 / Source: 09005aef8245f3bf Micron Technology, Inc., reserves the right to change products or specifications without notice.
tn2919_nand_101.fm - Rev. B 4/10 EN 12 ©2006 Micron Technology, Inc. All rights reserved.
 TN-29-19: NAND Flash 101
NAND Flash Commands
Notes: 1. h = hexadecimal
READ STATUS Operation
READ STATUS (70h) is the second command that can be issued while the NAND Flash
device is busy. This command does not require an address or second command cycle.
The status of the NAND Flash device can be monitored by issuing the RE# clock signal
following the READ STATUS command. If the READ STATUS command is used to
monitor the ready state of the device, the command should be issued only one time, and
the status can be re-read by re-issuing the RE# clock. Alternatively, the RE# signal can be
kept LOW, waiting to receive the appropriate status bit before proceeding. READ STATUS
also reports the status of the write-protect signal, and the pass/fail status of previous
PROGRAM or ERASE operations. It is mandatory that the pass status be attained on
PROGRAM or ERASE operations to ensure proper data integrity.
Notes: 1. Status register bit 5 is 0 during the actual programming operation. If cache mode is used,
this bit will be 1 when all internal operations are complete.
2. Status register bit 6 is 1 when the cache is ready to accept new data. R/B# follows bit 6.
Table 8: READ ID Parameters for Address 20h
Byte Options I/O7 I/O6 I/O5 I/O4 I/O3 I/O2 I/O1 I/O0 Value1
0 “O” 0 1 0 0 1 1 1 1 4Fh
1 “N” 0 1 0 0 1 1 1 0 4Eh
2 “F” 0 1 0 0 0 1 0 0 46h
3 “I” 0 1 0 0 1 0 0 1 49h
4 Undefined X X X X X X X X XXh
Table 9: READ STATUS Response
SR Bit
PROGRAM
PAGE
 PROGRAM
PAGE CACHE
MODE PAGE READ
PAGE READ
CACHE MODE
BLOCK
ERASE Definition
0 Pass/fail Pass/fail (N) – – Pass/fail 0 = Successful PROGRAM/ERASE
1 = Error in PROGRAM/ERASE
1 – Pass/fail (N - 1) – – – 0 = Successful PROGRAM/ERASE
1 = Error in PROGRAM/ERASE
2– – – – – 0
3– – – – – 0
4– – – – – 0
5 Ready/busy Ready/busy1 Ready/busy Ready/busy1 Ready/busy 0 = Busy
1 = Ready
6 Ready/busy Ready/busy
cache2
Ready/busy Ready/busy
cache2
Ready/busy 0 = Busy
1 = Ready
7 Write protect Write protect Write
protect
Write protect Write
protect
0 = Protected
1 = Not protected
[15:8] – – – – – 0
PDF: 09005aef8245f460 / Source: 09005aef8245f3bf Micron Technology, Inc., reserves the right to change products or specifications without notice.
tn2919_nand_101.fm - Rev. B 4/10 EN 13 ©2006 Micron Technology, Inc. All rights reserved.
 TN-29-19: NAND Flash 101
NAND Flash Commands
ERASE Operation
The BLOCK ERASE (60h) operation erases an entire block of 64 pages, or 128KB total. To
issue a BLOCK ERASE operation, use the WE# signal to clock in the ERASE (60h)
command with CLE asserted. Next, clock in three address cycles, keeping ALE asserted
for each byte of address. (These three address cycles are the most significant address
cycles and include the block address and the page address, as shown in Table 6 on
page 9.) The page address portion (the six low-order bits of the third address cycle) is
ignored, and only the block address portion of the three most significant bytes is used.
After the address is input completely, issue the second command (command cycle 2) of
D0h, which is clocked in with WE# while CLE is being asserted. This confirms the ERASE
operation, and the device goes busy for approximately 500µs. When the device
completes this operation, it is ready for another command. The READ STATUS
command can be issued at any time, even when the device is busy during the ERASE
operation. The microprocessor or controller can monitor the device via the READ
STATUS command.
Figure 7: ERASE Command
RE#
CE#
ALE
CLE
I/Ox 60h Address input (3 cycles) D0h 70h
R/B#
WE#
tBERS
Don‘t Care
I/O5 = 0 Busy
I/O5 = 1 Ready
PDF: 09005aef8245f460 / Source: 09005aef8245f3bf Micron Technology, Inc., reserves the right to change products or specifications without notice.
tn2919_nand_101.fm - Rev. B 4/10 EN 14 ©2006 Micron Technology, Inc. All rights reserved.
 TN-29-19: NAND Flash 101
NAND Flash Commands
PROGRAM Operations
PROGRAM operations can only program bits to 0 and assume that the user started with a
previously erased block.
If the user does not want to program a bit (or group of bits), the bits can be kept in the
erased state by setting that particular bit/group to 1.
When the PROGRAM PAGE (80h) command is received, the input register is reset (internally) to all 1s. This supports inputting only bytes of data that are to be programmed
with 0 bits. The PROGRAM operation starts with the 80h command (with CLE asserted—
see Figure 8). Next, de-assert CLE and assert ALE to input the full five address cycles.
After the command and address are input, data is input to the register. When all the data
has been input, the 10h command is issued to confirm the previous command and start
the programming operation.
A PROGRAM operation typically requires 220µs, although it may require as much as
600µs. It is mandatory that the user read the status and check for successful operation. If
the operation is not successful, the block should be logged as a bad block and not used
in the future. All data should be moved to a good block.
Figure 8: PROGRAM Command
WE#
CE#
ALE
CLE
RE#
R/B#
I/Ox
tWC tADL
SERIAL DATA
INPUT command
x8 device: m = 2112 bytes
x16 device: m = 1056 words
PROGRAM
command
READ STATUS
command
1 up to m bytes
serial input
80h Col
add 1
Col
add 2
Row
add 1
Row
add 2
Row
add 3 DIN
N
DIN
M 10h 70h Status
tWB tPROG
Don‘t Care
PDF: 09005aef8245f460 / Source: 09005aef8245f3bf Micron Technology, Inc., reserves the right to change products or specifications without notice.
tn2919_nand_101.fm - Rev. B 4/10 EN 15 ©2006 Micron Technology, Inc. All rights reserved.
 TN-29-19: NAND Flash 101
NAND Flash Commands
RANDOM DATA INPUT Operation
As the boxed area in Figure 9 shows, the RANDOM DATA INPUT (85h) command
requires only 2 bytes of address followed by the data. This command is used for
accessing data randomly within a page—for example, to access ECC data. RANDOM
DATA INPUT can be used to jump to the end of the page and write the ECC data. The
user can input as many address and data combinations as desired. It is only after the 10h
command is issued that the data is actually programmed to the selected page.
Figure 9: PROGRAM Command with Random Data Input
Partial-Page Programming
Due to the large size of NAND Flash pages, partial-page programming is useful for
storing smaller amounts of data. Each NAND Flash page can accommodate four PCsized, 512-byte sectors. The spare area of each page provides additional storage for ECC
and other software information.
While it is advantageous to write all four sectors at once, often this is not possible. For
example, when data is appended to a file, the file might start out as 512 bytes, then grow
to 1024 bytes. In this situation, a second PROGRAM PAGE operation is required to write
the second 512 bytes to the NAND Flash device. The maximum number of times a partial
page can be programmed before an ERASE is required is four. Note that for MLC devices,
only one partial-page PROGRAM per page is supported between ERASE operations.
WE#
CE#
ALE
CLE
RE#
R/B#
I/Ox
tWC
SERIAL
DATA INPUT
command
Serial input
80h Col
add 1 Col
add 2 Row
add 1 Row
add 2 Row
add 3
DIN
N
DIN
N+1
tADL
Column address
85h
t tWB PROG
Random data input sequence Don‘t Care
Col
add 1 Col
add 2
DIN
N
DIN
N+1 10h 70h Status
RANDOM
DATA INPUT
command
Serial input
tADL
PROGRAM
command
READ STATUS
command
PDF: 09005aef8245f460 / Source: 09005aef8245f3bf Micron Technology, Inc., reserves the right to change products or specifications without notice.
tn2919_nand_101.fm - Rev. B 4/10 EN 16 ©2006 Micron Technology, Inc. All rights reserved.
 TN-29-19: NAND Flash 101
NAND Flash Commands
Storage Methods
The two common methods for storing data and spare information in the same page are
shown in Figure 10. The first method shows a data area of 512 bytes plus the 16-byte
spare area directly adjacent to it; 528 bytes for the combined areas. A 2112-byte page can
contain four of these 528-byte elements. The second implementation involves storing
the data and spare information separately. The four 512-byte data areas are stored first,
and their corresponding 16-byte spare areas follow, in order, at the end of the page.
Figure 10: Typical Storage Methods
READ Operation
A READ operation starts with the 00h command, followed by five address cycles, then
the 30h command to confirm the command sequence (see Figure 11). After the READ
transfer time (t
R) of approximately 25µs has elapsed, the data is loaded into the register
and ready for output. Asserting RE# enables the NAND Flash device to output the first
byte of data corresponding to the column address specified in the address. Subsequent
RE# transitions output data from successive column locations. When the RE# signal is
HIGH (not asserted), the I/O lines are tri-stated. Reading past the end of the device (byte
2112 or word 1056) results in invalid data.
2048 bytes
2112 bytes
64 bytes
Data area 1
(512 bytes)
Data area 1
(512 bytes)
Data area 2
(512 bytes)
Data area 3
(512 bytes)
Data area 4
(512 bytes)
Spare area 1
(16 bytes)
Data area 2
(512 bytes)
Spare area 2
(16 bytes)
Data area 3
(512 bytes)
Spare area 3
(16 bytes)
Data area 4
(512 bytes)
Spare area 4
(16 bytes)
Spare areas
1, 2, 3, 4
Adjacent Data and Spare Areas
Separate Data and Spare Areas
PDF: 09005aef8245f460 / Source: 09005aef8245f3bf Micron Technology, Inc., reserves the right to change products or specifications without notice.
tn2919_nand_101.fm - Rev. B 4/10 EN 17 ©2006 Micron Technology, Inc. All rights reserved.
 TN-29-19: NAND Flash 101
NAND Flash Commands
Figure 11: READ and RANDOM DATA READ Operations
RANDOM DATA READ Operation
The user can directly access random data by issuing the 05h command, two address
cycles, and an E0h confirmation cycle (see Figure 11). When the page has been read from
the array, this command provides rapid access to the data.
READ PAGE CACHE SEQUENTIAL Operation
Only one register in the NAND Flash device has been discussed to this point. The NAND
Flash device actually has two registers, a data register and a cache register, as shown in
Figure 12. The attributes of these two registers play an important role in the various
NAND Flash caching modes.
The PAGE READ CACHE MODE command enables the user to pipeline the next sequential access from the array while outputting the previously accessed data. This doublebuffered technique makes it possible to hide the READ transfer time (t
R). Data is initially
transferred from the NAND Flash array to the data register. If the cache register is available (not busy), the data is quickly moved from the data register to the cache register.
After the data has been transferred to the cache register, the data register is available and
can start to load the next sequential page from the NAND Flash array.
Using the PAGE READ CACHE MODE command delivers a 33% performance improvement over a traditional PAGE READ command on an 8-bit I/O device, with throughput
up to 31 MB/s. On 16-bit I/O devices, throughput can be increased to 37 MB/s—delivering as much as a 40% performance improvement over normal PAGE READ operations.
See Figure 13 on page 18 for comparison.
WE#
CE#
ALE
CLE
RE#
R/B#
I/Ox
Busy
Col
add 1
Col
add 2
Row
add1
Row
add 2
Row
add 3 00h
tWB tAR
tRR
Don’t Care
tRC
DOUT
M
DOUT
M + 1
Col
add 1
Col
add 2 05h E0h
tREA
tCLR
DOUT
N
DOUT
N + 1 30h
Column address N Column address M
READ RANDOM DATA READ
tWHR
tR
PDF: 09005aef8245f460 / Source: 09005aef8245f3bf Micron Technology, Inc., reserves the right to change products or specifications without notice.
tn2919_nand_101.fm - Rev. B 4/10 EN 18 ©2006 Micron Technology, Inc. All rights reserved.
 TN-29-19: NAND Flash 101
NAND Flash Commands
Technical notes at www.micron.com/products/nand/technotes provide additional
details on cache modes and how they can be used to improve performance. PAGE READ
CACHE MODE can be especially useful during system boot-up, when large amounts of
data are typically read from the NAND Flash device and start-up time is critical.
Figure 12: READ PAGE CACHE SEQUENTIAL Architecture
Figure 13: READ PAGE/READ PAGE CACHE SEQUENTIAL Comparison
Data register: 2112 bytes 64
Data area: 2048 bytes Spare area
(ECC, etc.)
64 bytes
8-bit byte
or 16-bit word
NAND Flash memory array
2048 blocks (2Gb SLC device) 64 pages
per block NAND Flash block
NAND Flash page: 2112 bytes 64
Cache register: 2112 bytes 64
00h 30h 25µs 3
µs
3
µs
31h 31h
Address
cycles
1–5
00h 30h 25µs
Address
cycles
1–5
00h 30h 25µs
Address
cycles
1–5
2112 bytes
of page 0
2112 bytes
of page 1
2112 bytes
of page 0
2112 bytes
of page 1
PAGE READ CACHE SEQUENTIAL Example
PAGE READ Example
Read busy time Cache busy time Commands Address Data
PDF: 09005aef8245f460 / Source: 09005aef8245f3bf Micron Technology, Inc., reserves the right to change products or specifications without notice.
tn2919_nand_101.fm - Rev. B 4/10 EN 19 ©2006 Micron Technology, Inc. All rights reserved.
 TN-29-19: NAND Flash 101
NAND Flash Commands
PROGRAM PAGE CACHE Operation
PROGRAM PAGE CACHE MODE provides a performance improvement over normal
PROGRAM PAGE operations (see Figures 14 and 15). PROGRAM PAGE CACHE MODE is
a double-buffered technique that enables the controller to input data directly to the
cache register and uses the data register as a holding area to supply data for programming the array. This frees the cache register so that the next sequential page operation
can be loaded in parallel. In many applications, the programming time (t
PROG) can be
completely hidden. As with the PAGE READ CACHE MODE command, the data register
is used to maintain the data throughput during the entire programming cycle. This frees
the cache register to receive the next page of data from the controller.
Figure 14: PROGRAM PAGE CACHE Architecture
Data area: 2048 bytes Spare area
(ECC, etc.)
64 bytes
8-bit byte
or 16-bit word
NAND Flash memory array
2048 blocks (2Gb SLC device) 64 pages
per block NAND Flash block
NAND Flash page: 2112 bytes 64
Data register: 2112 bytes 64
Cache register: 2112 bytes 64
PDF: 09005aef8245f460 / Source: 09005aef8245f3bf Micron Technology, Inc., reserves the right to change products or specifications without notice.
tn2919_nand_101.fm - Rev. B 4/10 EN 20 ©2006 Micron Technology, Inc. All rights reserved.
 TN-29-19: NAND Flash 101
NAND Flash Commands
Figure 15: PROGRAM PAGE/PROGRAM PAGE CACHE Comparison
READ FOR INTERNAL DATA MOVE Operation
The READ FOR INTERNAL DATA MOVE (00h–35h) command is also known as “copy
back.” It provides the ability to move data internally from one page to another—the data
never leaves the NAND Flash device. The READ FOR INTERNAL DATA MOVE operation
transfers the data read from the NAND Flash array to the cache register. The data can
then be programmed into another page of the device. This is extremely beneficial in
cases where the controller needs to move data out of a block before erasing the block. It
is also possible to modify the data read before the PROGRAM operation is started. This is
useful if the user wants to change the data prior to programming. This feature enables
data movement within the NAND Flash device without tying up the processor or the I/O
bus.
80h 15h
0µs 100µs
80h
R/B#
80h 10h
200µs 300µs 400µs
R/B#
500µs 600µs 700µs
Time
Commands Address Data
Data In, up to
2112 bytes
for Page 0
Data In, up to
2112 bytes
for Page 1
Data in, up to
2112 bytes
for Page 0
tCBSY t tCBSY CBSY
15h
PROGRAM PAGE CACHE
PROGRAM PAGE
tPROG (220µs) tPROG (220µs)
80h
Data In, up to
2112 bytes
for Page 3
15h
80h 10h
Data in, up to
2112 bytes
for Page 1
80h 10h
Data in, up to
2112 bytes
for Page 2
80h
Data In, up to
2112 bytes
for Page 2
15h
PDF: 09005aef8245f460 / Source: 09005aef8245f3bf Micron Technology, Inc., reserves the right to change products or specifications without notice.
tn2919_nand_101.fm - Rev. B 4/10 EN 21 ©2006 Micron Technology, Inc. All rights reserved.
 TN-29-19: NAND Flash 101
Connecting NAND Flash to a RISC or DSP Processor
Connecting NAND Flash to a RISC or DSP Processor
There are significant advantages to selecting a processor or a controller with a built-in
NAND Flash interface. When this is not an option, it is possible to design a glueless interface between the NAND Flash device and almost any processor.
To review, the primary difference between NAND Flash and NOR Flash is the multiplexed bus used for transferring commands, addresses, and data in the NAND Flash
device. Using the CLE and ALE control signals, it is possible to select a command,
address, or data cycle for various NAND Flash operations. CLE is used to specify
command cycles; ALE is used to specify address cycles.
Connecting ALE to address bit 5 of the processor and CLE to address bit 4 of the
processor enables the selection of commands, addresses, or data simply by changing the
address that the processor outputs (see Table 10); CLE and ALE are automatically
asserted at the appropriate time.
To issue a command, the processor outputs the intended command on the data bus and
at output address 0010h.
To issue any number of address cycles, the processor simply outputs the intended
NAND Flash address sequence to processor address 0020h. With this technique, the user
can access commands, addresses, and data directly from the processor without any glue
logic. In this scenario, ECC must be handled in the software. Figures 16–18, starting on
page 22, show the block diagram, low-level pseudo-code, and timing for PROGRAM
operations. Many processors have the ability to specify several timing parameters
around the processor’s write signal, which is critical for proper setup and hold timing.
Table 10: Enabling Command, Address, or Data Selection
A7 A6 A5 A4 A3 A2 A1 A0
A5 A4
ALE CLE Memory address offset NAND Flash register selected
0 0 0xh Data register
0 1 1xh Command register
1 0 2xh Address register
1 1 3xh Undefined (do not use)
PDF: 09005aef8245f460 / Source: 09005aef8245f3bf Micron Technology, Inc., reserves the right to change products or specifications without notice.
tn2919_nand_101.fm - Rev. B 4/10 EN 22 ©2006 Micron Technology, Inc. All rights reserved.
 TN-29-19: NAND Flash 101
Connecting NAND Flash to a RISC or DSP Processor
Figure 16: Glueless NAND Interconnect
Figure 17: Low-Level Pseudo-Code Example for PROGRAM Operations
(All numbers in hex)
80 -> FFF010; CMD = 80
ColL -> FFF020; low column
ColH -> FFF020; high column
RowL -> FFF020; low ROW
RowM -> FFF020; Mid ROW
RowH -> FFF020; High ROW
D0 -> FFF000; Data 0
D1 -> FFF000; Data 1
(Complete remaining data)
D2111 -> FFF000 ; Data 2111
10 -> FFF010 ; CMD = 10
LOOP1:
PA -> Acc ; Read status
BIT #6 set ;
JMP NZ LOOP1 ; Jmp if Busy to Loop
; DONE !
NOR/SRAM NAND Flash
CPU
INTR
CS1#
CS0#
WE#
OE#
A[xx:0]
D[15:0]
CE#
WE#
RE#
ALE (A5)
CLE (A4)
I/O[7:0]
R/B#
VCC
CE#
WE#
OE#
Address
I/O[15:0]
PDF: 09005aef8245f460 / Source: 09005aef8245f3bf Micron Technology, Inc., reserves the right to change products or specifications without notice.
tn2919_nand_101.fm - Rev. B 4/10 EN 23 ©2006 Micron Technology, Inc. All rights reserved.
 TN-29-19: NAND Flash 101
Connecting NAND Flash to a RISC or DSP Processor
Figure 18: PROGRAM Operation Timing
Processors with a native on-chip NAND Flash controller include the Freescale™ i.MX21
and i.MX31 processors and several OMAP™ processors from Texas Instruments.
Figure 19 shows the built-in NAND Flash interface on the Freescale i.MX21 processor.
The NAND Flash interface is on the right side of the diagram and is connected directly to
the NAND Flash. This implementation supports automatic booting from the NAND
Flash device, as well as the ECC logic and SRAM buffer. The SRAM port enables code
execution directly from the buffer.
Figure 19: Built-in NAND Flash Interface on Freescale i.MX21 Processor
Note: Image courtesy of Freescale Semiconductor, Inc.
CE#
ALE
CLE
WE#
RE#
I/O[8:0]
R/B#
80h Col Col Row Row Row D0 D1 D2 D3 D4 D5 D2111 10h Next
command
Address input (5 cycles)
Wait tPROG ≈ 220µs
READ
and
 WRITE
Control
Data
Output
Control
Register
(Command/
Address/
Status)
Host Control
NAND Flash Control Bootloader
AHB Bus Interface
AHB Bus
Logic
ECC
Control
Address
Control
CLE
ALE
CE
RE
WE
WP
R/B
IDIN
IDOUT
NF8BOOT_B
NF16BOOT_B
NF_16BIT_SEL
RAM
Buffer
(SRAM)
PDF: 09005aef8245f460 / Source: 09005aef8245f3bf Micron Technology, Inc., reserves the right to change products or specifications without notice.
tn2919_nand_101.fm - Rev. B 4/10 EN 24 ©2006 Micron Technology, Inc. All rights reserved.
 TN-29-19: NAND Flash 101
Connecting NAND Flash to a RISC or DSP Processor
Multi-Level Cell (MLC)
MLC devices use a special type of cell that stores 2 bits per cell, compared with
traditional single-level cell (SLC) devices, which can store only 1 bit per cell. MLC
technology offers obvious density advantages. However, MLC lacks the speed and
reliability of its SLC counterpart (see Table 11). For this reason, SLC devices are used in
the majority of high-performance and high-endurance applications; MLC devices are
typically used in consumer and other low-cost products.
Error Correction Code (ECC)
As noted previously, NAND Flash requires ECC to ensure data integrity. ECC has been
used for many years in RAM modules as well as in many other types of storage. ECC can
be used in any device that may be susceptible to data errors. The example NAND Flash
memory includes a 64-byte spare area for extra storage on each page (16 bytes per 512-
byte sector). This spare area can be used to store the ECC code as well as other software
information, such as wear-leveling or logical-to-physical block-mapping information.
ECC can be performed in hardware or software; however, hardware implementation
provides a performance advantage.
During a programming operation, the ECC unit calculates the ECC code based on the
data stored in the sector. The ECC code for the data area is then written to the corresponding spare area. When the data is read out, the ECC code is also read out, and the
reverse operation is applied to check that the data is correct. It is possible for the ECC
algorithm to correct data errors. The number of data errors that can be corrected
depends on the correction strength of the algorithm used. The inclusion of ECC in hardware or software provides a robust solution at the system level.
Simple Hamming codes provide the easiest hardware implementation for error correction; however, they can correct only single-bit errors. Reed-Solomon codes provide more
robust error correction capability and are used in many controllers on the market today.
BCH codes are also becoming popular due to their improved efficiency over ReedSolomon codes.
Table 12 on page 25 shows the number of bits required for various ECC correction levels.
Table 11: MLC vs. SLC
Symbol
MLC NAND
3.3V (x8)
SLC NAND
3.3V (x16/x8)
Min Typ Max Min Typ Max Units
t
PROG Time to transfer contents of data register to
the NAND Flash array
– 900 2200 – 220 600 µs
NOP Number of partial-page programs supported
per page before an ERASE is required
––1––4 Cycles
t
R Time to transfer contents of one page in the
NAND Flash array to the data register
– – 50 – – 25 µs
Endurance with ECC and invalid block marking 5K – – 100K – – PROGRAM/
ERASE cycles
MIN ECC required 12 – – 1 – – Correctable bits
per 512 bytes
NVB 16Gb MLC, 4Gb SLC 1998 – 2048 2008 – 2048 Blocks
PDF: 09005aef8245f460 / Source: 09005aef8245f3bf Micron Technology, Inc., reserves the right to change products or specifications without notice.
tn2919_nand_101.fm - Rev. B 4/10 EN 25 ©2006 Micron Technology, Inc. All rights reserved.
 TN-29-19: NAND Flash 101
Connecting NAND Flash to a RISC or DSP Processor
Note: Codes in shaded table cells can fit in the spare area of the example NAND Flash device.
Software
Software is necessary to perform block management in a NAND Flash device. This software manages wear-leveling and logical-to-physical mapping. The software may also
provide ECC if the processor does not include ECC.
It is important to read the status register after a PROGRAM or ERASE operation to
confirm successful completion of the operation. If an operation is not successful, the
block should be marked bad and should no longer be used. Previously programmed data
should be moved out of the bad block into a new, good block.
The specification for a 2Gb SLC NAND Flash device states that it might have up to 40 bad
blocks. This maximum number applies to the life of the device (nominally 100,000
PROGRAM/ERASE cycles). Due mostly to their large die size, NAND Flash devices may
ship from the factory with a number of bad blocks. The software managing the NAND
Flash device maps the bad blocks and replaces them with good blocks. The factory
marks these blocks in a specific way so the software can scan all the blocks to determine
which are good and which are bad.
The bad-block mark is placed at the first location in the spare area (column location
2048). If location 2048 in page 0 is 00h, then the block must be considered bad and
mapped out of the system. The initialization software can simply scan through all blocks
to determine which blocks are bad and then build a table of these bad blocks for future
reference.
The user must take special care not to erase the bad-block marks. The factory tests each
NAND Flash device over a wide range of temperatures and voltages. Some blocks that
are marked bad by the factory may be functional at certain temperatures or voltages but
could fail in the future. If the bad-block information is erased, it cannot be recovered.
Table 12: Number of Bits Required for Various ECC Correction Strengths
Error Correction
Level
Bits Required in the NAND Flash Spare Area
Hamming Reed-Solomon BCH
1 13 18 13
2 N/A 36 26
3 N/A 54 39
4 N/A 72 52
5 N/A 90 65
6 N/A 108 78
7 N/A 126 91
8 N/A 144 104
9 N/A 162 117
10 N/A 180 130
8000 S. Federal Way, P.O. Box 6, Boise, ID 83707-0006, Tel: 208-368-3900
www.micron.com/productsupport Customer Comment Line: 800-932-4992
Micron, the M logo, and the Micron logo are trademarks of Micron Technology, Inc.
All other trademarks are the property of their respective owners.
 TN-29-19: NAND Flash 101
Summary
PDF: 09005aef8245f460 / Source: 09005aef8245f3bf Micron Technology, Inc., reserves the right to change products or specifications without notice.
tn2919_nand_101.fm - Rev. B 4/10 EN 26 ©2006 Micron Technology, Inc. All rights reserved.
Third-Party Software
There are several third-party software offerings on the market today. Many of these
packages provide multiple features, including automatic power failure-recovery, PC-file
compatibility, ECC, bad-block management, directory support, and wear-leveling. A
partial list of third-party NAND Flash software vendors includes:
• Datalight, Inc. – www.datalight.com
• CMX Systems, Inc. – www.cmx.com
• HCC-Embedded – www.hcc-embedded.com
• Blunk Microsystems – www.blunkmicro.com
For Linux implementations, another alternative is Journaling Flash File System, version
2 (JFFS2).
Summary
Micron NAND Flash provides the power, density, and cost advantages essential for
embedded systems in high-performance applications such as digital cameras and navigational devices, solid state drives, mobile phones, Flash memory cards, and USB Flash
drives.
As the major markets relying on NAND Flash continue to expand, NAND Flash technology will continue to evolve and claim additional market share, providing the higher
densities, lower costs, and added functionality necessary to support these advanced
designs.
PDF: 09005aef8245f460 / Source: 09005aef8245f3bf Micron Technology, Inc., reserves the right to change products or specifications without notice.
tn2919_nand_101.fm - Rev. B 4/10 EN 27 ©2006 Micron Technology, Inc. All rights reserved.
 TN-29-19: NAND Flash 101
Revision History
Revision History
Rev. B . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .04/10
• Updated document formats and content to reflect technology changes since initial
release.
Rev. A . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .11/06
• Initial release.
MSM8216/MSM8616/MSM8916
Device Specification
80-NK807-1 Rev. J
October 29, 2014
Submit technical questions at:
https://support.cdmatech.com
© 2013-2014 Qualcomm Technologies, Inc.
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 2
Confidential and Proprietary – Qualcomm Technologies, Inc.
Revision history
Bars appearing in the margin (as shown at left) indicate where technical changes have occurred for
this revision. The following table lists the technical content changes for all revisions.
Revision Date Description
A November 2013 Initial release
B December 2013  Global change: Updated package dimension
 Updated the feature support information in Section 1.3.2 and Table 1-9
 Updated pin map information in Chapter 2
 Updated mechanical, part marking and identification details in Chapter 4
C March 2014  Global change:
 Format changes throughout the doc
 Added WTR4905 and WCN3660B support
 Changed the clock frequencies of A53 CPU
 Changed display resolution FPS rate to TBD
 Updated Figure 1-1 with new block diagram, replaces QFE1101 with QFE2101
 Format changes for Table 1-9
 Updated Figure 2-2 with new pin map with correct color coding and sizing of
cells
 Table 2-2 - Table 2-14: format changes and correct alignment of pad numbers
with pin names
 Added PDN information in Chapter 3, Electrical Specification
 Figure 4-1: Updated part making information; cleaned up figure and remove
some dimensions
D June 2014  Global change: Replaced MSM8916 with MSM8x16 across the document
 Updated Table 1-1 with updated document titles
 Updated Table 1-3 with QFE1520/1550/2550/2322
 Updated Figure 1-1 with WCN3660B and QFE1520/1550/2550/2322
 Updated Section 1.1, Table 1-2, Table 4-1 and Table 4-2 to include device
variant infomation
 Updated Figure 2-2 with NC and DNC pins
 Updated Table 2-3 with MIPI CSI pad numbers
 Updated Table 2-4; Removed USB_HS_ID pin as it is an NC pin
 Updated Table 2-6 on BLSP with appropriate UART and GPIO functionalities
 Updated Table 2-7 with pad characteristics of JTAG signals
 Updated Table 2-10 with WDOG_DISABLE for GPIO_80 and USB_HS_ID for
GPIO_110
 Updated Table 2-12 with NC and DNC pins
 Added Section 3.2 on operating conditions
 Added Section 3.5 on power sequencing information
 Added Section 3.6 on digital logic sequencing informtion
 Added Section 4.4 on device moisture-sensitivity level
 Added information in Chapter 5 and Chapter 6
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 3
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Revision history
E July 2014  Global: Updated TBDs in various tables across the document
 Updated Section 1.3.3 on air interfaces
 Updated Table 1-9 with RF operating band information
 Updated the device variants in Table 4-2
 Added Section 3.1, Section 3.2, Section 3.4, Section 3.7 to Section 3.12
 Added information into Chapter 7
F August 13, 2014  Updated all MIPI CSI and DSI signal names in Figure 2-2 to match Table 2-3;
For example: MIPI_CSI0_LANE0_N has been renamed to MIPI_CSI0_LN0_N
 Updated the display resolution for variant 3 and 4; and removed variant 2 in
Table 1-2 and Table 4-2
 Updated clock frequency for A53 CPU in Table 3-2
 Updated operating voltage values for the following in Table 3-3:
 VDD_P1
 VDD_MIPI
 VDD_A1
 VDD_WLAN
 VDD_PLL1
 VDD_HS_USB_CORE
 VDD_PLL2
 VDD_A2
 VDD_USBPHY_1P8
 Combined a few parameters that have same power supply sources and hence
left a few rows empty in Table 3-3.
G August 14, 2014  Updated the following signal names in Figure 2-2:
 Changed pin T1 from MIPI_CSI0_LN2_P to MIPI_CSI0_LN1_P
 Changed pin U2 from MIPI_CSI0_LN2_N to MIPI_CSI0_LN1_N
 Changed pin V1 from MIPI_CSI0_LN3_P to MIPI_CSI0_LN2_P
 Changed pin V5 from MIPI_CSI0_LN1_P to MIPI_CSI0_CLK_P
 Changed pin W2 from MIPI_CSI0_LN3_N to MIPI_CSI0_LN2_N
 Changed pin W6 from MIPI_CSI0_LN1_N to MIPI_CSI0_CLK_N
 Changed pin Y5 from MIPI_CSI0_LN4_P to MIPI_CSI0_LN3_P
 Changed pin AA6 from MIPI_CSI0_LN4_N to MIPI_CSI0_LN3_N
 Changed pin AB1 from MIPI_CSI1_LN2_P to MIPI_CSI1_LN1_P
 Changed pin AB3 from MIPI_CSI1_LN1_P to MIPI_CSI1_CLK_P
 Changed pin AB5 from MIPI_CSI1_LN1_N to MIPI_CSI1_CLK_N
 Changed pin AB7 from MIPI_DSI_DCDC to MIPI_DSI_LDO
 Changed pin AC2 from MIPI_CSI1_LN2_N to MIPI_CSI1_LN1_N
 Changed pin BD11 from GNSS_BB_IP2 to GNSS_BB_IM
 Updated VDD_HS_USB_CORE to VDD_USB_HS in Table 3-3
Revision Date Description
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 4
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Revision history
H September 2014  Table 3-1, Absolute maximum ratings:
 Updated absolute voltage values for the following:
– VDD_A1
– VDD_A2
– VDD_APC
– VDD_CORE
– VDD_MEM
– VDD_PLL1
 Added VDD_USB_HS
 Updated sample sizes for the following in Table 7-1, Silicon reliability results
and Table 7-3, Silicon reliability results:
 DPPM rate (ELFR) and average failure rate (AFR) in FIT (l) failure in billion
device-hours
 Mean time to failure (MTTF) t = 1/l in million hours
 Updated sample sizes for the biased highly accelerated stress test in
Table 7-2, Package reliability results and Table 7-4, Package reliability results
 Updated Section 7.1.3, MSM8916 reliability evaluation report for device from
Samsung with Table 7-5, Section A: Silicon reliability results and Table 7-6,
Section B: Package reliability results
 Removed countries from fab sites in Section 7.2, Qualification sample
description
These letters are not used to designate document revisions as per Qualcomm documentation standards: I, O, Q,
S, X, and Z.
J October 2014  Table 2-4 Pin descriptions – connectivity functions:
 Moved audio MI2S interface #1 under a new sub-heading audio clock
 Updated the functional descriptions of audio MI2S interface #2
 Table 2-8 MSM8x16 wakeup pins for modem power management (MPM) and
Table 2-10 Pin descriptions – general-purpose input/output ports: Updated
C40 pad type to B-PU:nppukp
 Table 3-1 Absolute maximum ratings and Table 3-3 Operating conditions:
Changed VDD_MIPI_DSI_1P8 to VDD_MIPI_DSI_PLL and updated the
description
 Section 3.5 Power sequencing: Removed VDD_PLL2
 Section 3.10.2 UIM interface: Added a new section
 Section 4.1 Device physical dimensions: Corrected the DnD links for the 760
NSP outline diagram (NT90-NK468-1)
 Section 6.2.1 Land pad and stencil design: Corrected the DnD link for 760
NSP land/stencil drawing (LS90-NG134-1)
 Section 6.5 High-temperature warpage: Corrected the DnD link for 760 NSP
high-temperature warpage data (WR80-NK468-1)
Revision Date Description
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 5
Confidential and Proprietary – Qualcomm Technologies, Inc.
Contents
1 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 11
1.1 Documentation overview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 11
1.2 MSM8x16 introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 13
1.2.1 Device variants . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16
1.3 MSM8x16 features . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16
1.3.1 MSM8x16 CS schedules . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 17
1.3.2 New features integrated into MSM8x16 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 17
1.3.3 Air interface features . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 17
1.3.4 Summary of MSM8x16 features . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 22
1.4 Terms and acronyms . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 26
1.5 Special marks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 29
2 Pin Definitions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 30
2.1 I/O parameter definitions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32
2.1.1 Pin descriptions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 33
3 Electrical Specifications . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 62
3.1 Absolute maximum ratings . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 62
3.2 Operating conditions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 63
3.2.1 Core voltage minimization (retention mode) . . . . . . . . . . . . . . . . . . . . . . . . . . 65
3.3 Power delivery network specification . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 65
3.3.1 PDN system specification (PCB + baseband IC) . . . . . . . . . . . . . . . . . . . . . . . 65
3.3.2 PDN specification (PCB-only) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 66
3.4 DC power characteristics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 66
3.4.1 Average operating current . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 66
3.4.2 Dhrystone and rock bottom maximum power . . . . . . . . . . . . . . . . . . . . . . . . . . 66
3.5 Power sequencing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 67
3.6 Digital logic characteristics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 68
3.7 Timing characteristics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 72
3.7.1 Timing-diagram conventions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 72
3.7.2 Rise and fall time specifications . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 73
3.7.3 Pad design methodology . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 73
3.8 Memory support . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 74
3.8.1 EBI0 memory support . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 74
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 6
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Contents
3.8.2 eMMC on SDC1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 80
3.9 Multimedia . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 80
3.9.1 Camera interfaces . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 80
3.9.2 Audio support . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 81
3.9.3 Display support . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 81
3.10 Connectivity . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 81
3.10.1 Secure digital interfaces . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 82
3.10.2 UIM interface . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 84
3.10.3 USB interfaces . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 85
3.10.4 I2S interface . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 85
3.10.5 I2C interface . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 87
3.10.6 Serial peripheral interface . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 87
3.11 Internal functions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 88
3.11.1 Clocks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 88
3.11.2 Modes and resets . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 89
3.11.3 JTAG . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 90
3.12 RF and power management interfaces . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 90
3.12.1 RF front-end (RFFE) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 90
3.12.2 System power management interface (SPMI) . . . . . . . . . . . . . . . . . . . . . . . . . 91
4 Mechanical Information . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 92
4.1 Device physical dimensions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 92
4.2 Part marking . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 94
4.2.1 Specification-compliant devices . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 94
4.2.2 Daisy-chain devices . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 95
4.3 Device ordering information . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 95
4.3.1 Specification-compliant devices . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 95
4.3.2 Daisy-chain devices . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 97
4.4 Device moisture-sensitivity level . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 97
4.5 Thermal characteristics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 98
5 Carrier, Storage, & Handling Information . . . . . . . . . . . . . . . . . . . . . . . . . . 99
5.1 Carrier . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 99
5.1.1 Tape and reel information . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 99
5.2 Storage . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 100
5.2.1 Bagged storage conditions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 100
5.2.2 Out-of-bag duration . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 100
5.3 Handling . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 100
5.3.1 Baking . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 100
5.3.2 Electrostatic discharge . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 101
5.4 Barcode label and packing for shipment . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 101
6 PCB Mounting Guidelines . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 102
6.1 RoHS compliance . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 102
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 7
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Contents
6.2 SMT parameters . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 102
6.2.1 Land pad and stencil design . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 102
6.2.2 Reflow profile . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 103
6.2.3 SMT peak package-body temperature . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 104
6.2.4 SMT process verification . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 105
6.3 Daisy-chain components . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 105
6.4 Board-level reliability . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 105
6.5 High-temperature warpage . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 106
7 Part Reliability . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 107
7.1 Reliability evaluation summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 107
7.1.1 MSM8x16 reliability evaluation report for device from GF-F8 . . . . . . . . . . . 107
7.1.2 MSM8x16 reliability evaluation report for device from TSMC-F15 . . . . . . . 109
7.1.3 MSM8916 reliability evaluation report for device from Samsung . . . . . . . . . 112
7.2 Qualification sample description . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 115
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 8
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Contents
Tables
Table 1-1 Primary MSM8x16 documentation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 11
Table 1-2 Device information details . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16
Table 1-3 MSM8x16 chipset and CS timelines . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 17
Table 1-4 3GPP GSM support . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18
Table 1-5 3GPP2 CDMA support . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18
Table 1-6 3GPP WCDMA support . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 19
Table 1-7 3GPP TD-SCDMA support . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 21
Table 1-8 3GPP GSM support . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 22
Table 1-9 Summary of MSM8x16 features . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 23
Table 1-10 Terms and acronyms . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 26
Table 1-11 Special marks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 29
Table 2-1 I/O description (pad type) parameters . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32
Table 2-2 Pin descriptions – memory support functions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 33
Table 2-3 Pin descriptions – multimedia functions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 36
Table 2-4 Pin descriptions – connectivity functions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 37
Table 2-5 BLSP alternate function configurations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 42
Table 2-6 BLSP internal pin mapping . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 43
Table 2-7 Pin descriptions – internal functions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 43
Table 2-8 MSM8x16 wakeup pins for modem power management (MPM) . . . . . . . . . . . . . . . 45
Table 2-9 Pin descriptions – chipset interface functions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 47
Table 2-10 Pin descriptions – general-purpose input/output ports . . . . . . . . . . . . . . . . . . . . . . . 51
Table 2-11 Pin descriptions – RF front-end functions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 58
Table 2-12 Pin descriptions – No connection, do not connect, and reserved pins . . . . . . . . . . . 60
Table 2-13 Pin descriptions – power supply pins . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 60
Table 2-14 Pin descriptions – ground pins . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 61
Table 3-1 Absolute maximum ratings . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 62
Table 3-2 Operating conditions for APC and CORE rails . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 63
Table 3-3 Operating conditions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 64
Table 3-4 Core voltage in retention mode . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 65
Table 3-5 PCB + baseband IC PDN impedance vs. frequency . . . . . . . . . . . . . . . . . . . . . . . . . . 65
Table 3-6 PCB-only PDN impedance vs. frequency . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 66
Table 3-7 Dhrystone and rock bottom power specifications . . . . . . . . . . . . . . . . . . . . . . . . . . . . 67
Table 3-8 Digital I/Os specified in this section . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 68
Table 3-9 1.2 V digital I/O characteristics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 68
Table 3-10 1.8 V digital I/O characteristics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 69
Table 3-11 Dual-voltage 1.8 V/2.95 V digital I/O characteristics . . . . . . . . . . . . . . . . . . . . . . . . 70
Table 3-12 Dual-voltage 1.2 V/1.8 V digital I/O characteristics . . . . . . . . . . . . . . . . . . . . . . . . . 70
Table 3-13 DDR SDRAM clock-timing parameters . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 75
Table 3-14 DDR SDRAM strobe timing parameters . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 76
Table 3-15 DDR SDRAM read and write timing specifications . . . . . . . . . . . . . . . . . . . . . . . . . 77
Table 3-16 DDR SDRAM read and write timing specifications . . . . . . . . . . . . . . . . . . . . . . . . . 79
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 9
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Contents
Table 3-17 Supported MIPI_CSI standards and exceptions . . . . . . . . . . . . . . . . . . . . . . . . . . . . 80
Table 3-18 Supported MIPI_DSI standards and exceptions . . . . . . . . . . . . . . . . . . . . . . . . . . . . 81
Table 3-19 Supported SD standards and exceptions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 82
Table 3-20 Secure digital interface timing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 83
Table 3-21 Supported UIM standards and exceptions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 84
Table 3-22 Supported USB standards and exceptions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 85
Table 3-23 Device-specific USBPHY specifications . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 85
Table 3-24 Supported I2S standards and exceptions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 86
Table 3-25 I2S interface timing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 86
Table 3-26 Supported I2C standards and exceptions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 87
Table 3-27 SPI master timing characteristics at 48 MHz . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 88
Table 3-28 SPI master timing characteristics at 26 MHz . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 88
Table 3-29 XO timing parameters . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 89
Table 3-30 Sleep-clock timing parameters . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 89
Table 3-31 JTAG-interface timing characteristics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 90
Table 3-32 Supported RFFE standards and exceptions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 90
Table 3-33 RFFE data . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 91
Table 3-34 Rx/Tx data . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 91
Table 3-35 Supported SPMI standards and exceptions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 91
Table 3-36 Supported SPMI standards and exceptions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 91
Table 4-1 MSM8x16 device marking line definitions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 94
Table 4-2 Device identification code/ordering information details . . . . . . . . . . . . . . . . . . . . . . . 96
Table 4-3 Source configuration code . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 97
Table 4-4 MSL ratings summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 97
Table 6-1 QTI typical SMT reflow profile conditions (for reference only) . . . . . . . . . . . . . . . 103
Table 7-1 Silicon reliability results . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 107
Table 7-2 Package reliability results . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 108
Table 7-3 Silicon reliability results . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 109
Table 7-4 Package reliability results . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 110
Table 7-5 Section A: Silicon reliability results . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 112
Table 7-6 Section B: Package reliability results . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 113
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 10
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Contents
Figures
Figure 1-1 MSM8x16 functional block diagram and example application . . . . . . . . . . . . . . . . . 14
Figure 2-1 MSM8x16 pin assignments – legend . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 30
Figure 2-2 High-level view of MSM8x16 pin assignments (top view) . . . . . . . . . . . . . . . . . . . . 31
Figure 2-3 GPIO ‘A/B’ multiplexing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 45
Figure 3-1 IV curve for VOL and VOH (valid for all VDD_Px) . . . . . . . . . . . . . . . . . . . . . . . . 71
Figure 3-2 Timing-diagram conventions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 72
Figure 3-3 Rise and fall times under different load conditions . . . . . . . . . . . . . . . . . . . . . . . . . . 73
Figure 3-4 Digital input signal switch points . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 73
Figure 3-5 Output-pad equivalent circuit . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 74
Figure 3-6 DDR SDRAM DCLK and DCLKB . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 75
Figure 3-7 DDR SDRAM DQS_x and DQSB_x . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 76
Figure 3-8 DDR SDRAM read timing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 76
Figure 3-9 DDR SDRAM write timing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 77
Figure 3-10 DDR SDRAM read timing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 78
Figure 3-11 DDR SDRAM write timing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 79
Figure 3-12 Secure digital interface timing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 83
Figure 3-13 I2S timing diagram . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 86
Figure 3-14 SPI master timing diagram . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 87
Figure 3-15 XO timing parameters . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 88
Figure 3-16 Sleep-clock timing parameters . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 89
Figure 3-17 JTAG-interface timing diagram . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 90
Figure 4-1 760 NSP (14.0 × 12.0 × 0.96 mm) outline drawing . . . . . . . . . . . . . . . . . . . . . . . . . 93
Figure 4-2 MSM8x16 device marking (top view, not to scale) . . . . . . . . . . . . . . . . . . . . . . . . . . 94
Figure 4-3 MSM8x16 device identification code . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 95
Figure 5-1 Carrier tape drawing with part orientation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 99
Figure 5-2 Tape handling . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 100
Figure 6-1 Area ratio (AR) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 103
Figure 6-2 QTI typical SMT reflow profile . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 104
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 11
Confidential and Proprietary – Qualcomm Technologies, Inc.
1 Introduction
1.1 Documentation overview
This device specification defines three MSM™ devices: MSM8216, MSM8616, and MSM8916.
Throughout this document, the devices are referred to as the MSM8x16 when material being
presented applies to all of them. The main difference between the MSM variants is the air interface
standards that are supported; variant details are listed in Table 4-2.
Technical information for the MSM8x16 device is primarily covered by the documents listed in
Table 1-1. All documents should be studied for a thorough understanding of the device and its
applications. Released MSM8x16 documents will be available for download at the CDMATech
Support website (https://support.cdmatech.com).
NOTE This current revision is an early release to support initial product developers. The
content is subject to change without advance notice.
Table 1-1 Primary MSM8x16 documentation
Document
number Title/description
80-NK807-1
(this document)
MSM8216/MSM8616/MSM8916 Device Specification
Provides all MSM8x16 electrical specifications and mechanical information. Additional
material includes pin assignments; shipping, storage, and handling instructions; PCB
mounting guidelines; and part reliability. This document can be used by company
purchasing departments to facilitate procurement.
80-NK807-1A MSM8x16 Pin Assignment Spreadsheet
A Microsoft Excel spreadsheet listing all MSM8x16 pad numbers (in alphanumeric order),
pad names, pad voltages, pad types, and functional descriptions. This can be used to
help build the IC’s CAD library symbol, or for quick reference for a particular pad’s
functional assignment.
80-NK807-1B MSM8x16 GPIO Configuration Spreadsheet
A Microsoft Excel spreadsheet listing all MSM8x16 GPIOs (in numeric order), pad
numbers, pad voltages, pull states, and available configurations. This can be used to help
designers define their products’ GPIO assignments.
80-NK807-2 MSM8x16 Software Interface Manual for OEMs
Provides detailed information about the MSM8x16 software interface and its clocks,
security, user interface, and registers.
80-NK807-4 MSM8216/MSM8616/MSM8916 Device Revision Guide
Provides a history of MSM8x16 revisions, explains how to identify the various device
revisions, and discusses known issues (or bugs) for each revision and how to work
around them.
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 12
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Introduction
This document is organized as follows:
80-NK807-21 MSM8216/MSM8616/MSM8916 Chipset Introduction Training Slides
 Introductions to the MSM8x16 chipsets and all ICs within the chipsets:
 Required RFICs are WTR4905, WTR1605L, and WTR2605
 Required power management IC is the PM8916
 WCN3620, WCN3660B wireless connectivity IC
 NFC1990 NFC connectivity IC
 Introduction to chipset evaluation platforms
80-NK807-22 MSM8216/MSM8616/MSM8916 – Digital Baseband
 Detailed descriptions of MSM8x16 functions
 Detailed interface descriptions for the MSM in various applications
 Key design guidelines for the chipset are illustrated and explained, including:
 Technology overviews
 DC power distribution
 Interface schematic details
 PCB layout guidelines
 External-component recommendations
 Ground and shielding recommendations
Chapter 1 Provides an overview of the MSM8x16 documentation, gives a high-level
functional description of the device, lists the device features, and defines marking
conventions, terms, and acronyms used throughout this document.
Chapter 2 Defines the device pin assignments.
Chapter 3 Defines the device electrical performance specifications, including absolute
maximum ratings and operating conditions.
Chapter 4 Provides IC mechanical information, including dimensions, markings, ordering
information, moisture sensitivity, and thermal characteristics.
Chapter 5 Discusses shipping, storage, and handling of the MSM8x16.
Chapter 6 Presents procedures and specifications for mounting the MSM8x16 onto printed
circuit boards (PCBs).
Chapter 7 Presents MSM8x16 reliability data, including a definition of the qualification
samples and a summary of qualification test results.
Table 1-1 Primary MSM8x16 documentation (cont.)
Document
number Title/description
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 13
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Introduction
1.2 MSM8x16 introduction
Mobile devices continue to integrate more and increasingly complex functions, and support more
operating bands while maintaining performance, board space, and cost.
These demands are met by the MSM8x16 (Figure 1-1) — with its ARM Cortex-A53 application
processors – which further expand mass-market chipset capabilities by making 3G and 4G highspeed data and rich multimedia features accessible to more consumers worldwide. This multimode
solution supports the latest air interface standards including 1xEV-DOrA, 1x Advanced, HSPA+
and TD-SCDMA, LTE as well as single SIM, dual SIM dual standby (DSDS) and dual SIM dual
active (DSDA) enable simultaneous voice and data operation for user multitasking. The new
MSM8x16 leverages Qualcomm Technologies, Inc. (QTI) airlink and multimedia technology
leadership to significantly lower the cost of high-performance mobile devices.
The MSM8x16 has a high level of integration that reduces the bill-of-material (BOM), which
delivers board-area savings. The cost and time-to-market advantages of this IC will help drive
wireless broadband adoption in mass markets around the world.
Wireless products based on the MSM8x16 may include:
 Voice and data phones, smartphones
 Support for the latest, most-popular operating systems
 Music player-enabled devices and applications
 Camera phones
 Multimedia phones with gaming, streaming video, and video conferencing features
 GPS, GLONASS, and BeiDou for global location-based service. Supports three band only.
 Wireless connectivity – NFC (QCA1990), Bluetooth, WLAN, and FM receiver (with the
WCN3620/WCN3660B)
The MSM8x16 benefits are applied to each of these product types and include:
 Higher integration to reduce PCB surface area, time-to-market, and BOM costs while adding
capabilities and processing power
 Integrated application processors and hardware cores eliminate multimedia coprocessors,
providing superior image quality and resolution for mobile devices while extending
application times
 Higher computing power for high-end applications, and DC power savings for longer run
times
 Position location and navigation systems are supported via the WTR’s global navigation
satellite system (GNSS) receiver
 The MSM8x16 supports Gen 8C operation
 Single platform that provides dedicated support for all market-leading codecs and other
multimedia formats to support carrier deployments around the world
 DC power reduction using innovative techniques
MSM8216/MSM8616/MSM8916 Device Specification Introduction
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 14
Confidential and Proprietary – Qualcomm Technologies, Inc.
Figure 1-1 MSM8x16 functional block diagram and example application
Memory support
Internal memory
Processors
Multimedia
MSM8x16
Modem QDSP6
Air Interfaces
Internal functions
Security & QFPROM Clock generation
JTAG / QDSS / ENET
Mode / config / resets
many codecs, Qtv,
Qcamcorder,
Qvideophone
Adreno 3D graphics
Qcamera
Low Power Audio
(LPA)
WCDMA processing
R99 to HSPA+ 42/11
ARM Quad
Cortex – A53 P
debug Resource & pwr mgt
CDMA processing
1x to 1xEV-DOrA
Display
2-ln MIPI_CSI
4-ln MIPI_CSI
I2C
web cam
MDP
Connectivity SDC1
EBI
CAMIF timing
GNSS Gen8C Lite
GPS, Galileo,
Glonass, Beidou
GSM processing
GSM/GPRS/EDGE
WLAN DACs
WLAN ADCs
GP clock & pdm outs
WCN processing
WLAN / BT / FM
Vibration
motor
RPM Cortex M3 P
I2C
UART
UIM
SPI
BB t/r
switch
Thermal sensors
SD/
MMC
Connectivity
extra SPI chip selects
SDC2
SPI I2C
BLSP (x6) UART
HS USB w/ PHY
Serial busses
Discrete stat & ctl
Tx DACs
Rx front ends
clks
power-on
from
sensors
others
Audio
devices
Chipset & RFFE I/Fs
TD-SCDMA processing
UTRA TDD 1.28 Mbps
Dual-voltage UIM (x3)
– one via BLSP
GPIOs / PWR & GND
UIM2
Cam flash
LPDDR2/LPDDR3
eMMC
QCA1990A
RF
BB
PM
dsc
I2C
NFC
LTE processing
Rel 9 Cat4
UIM1
MCP
4-ln MIPI_DSI
Keypad Keypad
Video / VFE
Audio / codec digital
external
sources
system
power
Input
pwr mgt
supply
voltages
PM8916
Battery
charger
I2C
Output
pwr mgt
SMB1360
User
interfaces
IC-level
interfaces
General
hskeeping
Audio
codec
SPMI
dsc
Indicators
I2C
dsc
WTR4905
RF
Transmitters
Application-specific RFFE RF Receivers dsc
WAN
Support
Qualcomm front-end
(QFE) components ANT_0
ANT_n
GNSS
MIPI_
RFFE
WAN
GPS
QFE2520/1520
antenna tuner(s)
QFE2550/1550
antenna tuner(s)
QFE2320/2322/3320
LMB PA & SWs
QFE2340 HB PA
QFE2101 PA Pwr Tracker
and other components as needed
MIPI_RFFEs
dsc
SI
SI = serial interfaces = SPMI,
MIPI_RFFE (5), and SSBI (4) WTR2100
… or …
WTR2605
Add for advanced RF
techniques – SGLTE,
DSDA, SVLTE, etc
dsc
SSBI
WLAN / BT
WLAN/BT
front-end
WCN3620/3660B
Bluetooth
RF & BB
WLAN RF command
FM RF & BB
Support & I/Os Rx / Tx BB (switched) SSBI data & clk
SSBI
data
WLAN BT FM SSBI dsc SSBI WLAN command dsc Rx Rx / Tx FM
RFFE
I2C
Accelerometer
Geomagnetic
Gyros
Other peripherals / sensors
Ambient light
Haptics
Near field comm
Pressure
Proximity
Temperature
SPI
I2C
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 15
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Introduction
The MSM8x16 is fabricated using the advanced 28 nm LP CMOS process, and is available in the
760 NSP; a 14.0 × 12.0 × 0.96 mm package with many ground pins for improved electrical
grounding, mechanical strength, and thermal continuity. See Chapter 2 for pin assignment details
and Chapter 4 for mechanical information.
The MSM8x16 supports high-performance applications worldwide using a variety of wireless
networks:
 GSM/GPRS/EDGE
 CDMA2000 1x, 1x Advanced, and 1xEV-DOrA
 WCDMA R99, Rel 5 HSDPA, Rel 6 HSUPA, and Rel 7 HSPA+ (42 Mbps)
 TD-SCDMA with 4.2 Mbps DL and 2.2 Mbps UL option
 LTE Cat 4
 GPS, GNSS, and BeiDou
Complementary ICs within the MSM8x16 chipset include:
 Wafer-level RFICs: WTR4905 (80-NL713-x), WTR1605L (80-N5420-x) and WTR2605
(80-N9978-x documents)
 Power management: PM8916 (80-NK808-x documents)
 Wireless connectivity: WCN3620/WCN3660B for WLAN, Bluetooth, and FM (80-WL006-x
and 80-WL007-x documents)
 NFC Connectivity: QCA1990 (80-Y0597-x)
The MSM8x16 chipset and system software solution supports the Convergence Platform for
mobile applications by leveraging the years of systems expertise and field experience with
CDMA, WCDMA, GSM, TD-SCMDA, LTE, and GNSS technologies that QTI brings. QTI works
with its partners to develop products that meet the exact needs of the growing wireless market,
providing its customers with complete, verifiable solutions, including fully segmented product
families, systems software, testing, and support.
Since the MSM8x16 includes so many diverse functions, its operation is more easily understood
by considering major functional blocks individually. Therefore, the MSM8x16 document set is
organized according to the following block partitioning:
 Architecture and baseband processors
 Memory support
 Air interfaces
 Multimedia
 Connectivity
 Internal functions
 Interfaces to other functions (including the other ICs within the chipset)
 Configurable general-purpose input/output (GPIO) ports
Most of the information contained in this device specification is organized accordingly —
including the circuit groupings within its functional block diagram (Figure 1-1), pin descriptions 
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 16
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Introduction
(Chapter 2), and detailed electrical specifications (Chapter 3).
1.2.1 Device variants
The only difference between the MSM variants is the combination of air interfaces and display.
The camera resolution remains the same for all variants. All variants are summarized in Table 1-2.
1.3 MSM8x16 features
NOTE Some of the hardware features integrated within the MSM8x16 must be enabled by
software. Refer to the latest version of the applicable software release notes to identify
the enabled MSM8x16 features.
Table 1-2 Device information details
Device Variant LTE UMTS CDMA TDS GSM Display
resolution
Camera
resolution
MSM8916 3 X X X X X 1920 x 1080 8 MP/13 MP
4 X X X X 1920 x 1080 8 MP/13 MP
5 X X X X X 1280 x 720 8 MP/13 MP
6 X X X X 1280 x 720 8 MP/13 MP
7 X X X 1280 x 720 8 MP/13 MP
0 X X X X X qHD 8 MP/13 MP
1 X X X X qHD 8 MP/13 MP
8 X X X qHD 8 MP/13 MP
MSM8616 1 X X X X 1280 x 720 8 MP/13 MP
MSM8216 1 X X X 1280 x 720 8 MP/13 MP
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 17
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Introduction
1.3.1 MSM8x16 CS schedules
1.3.2 New features integrated into MSM8x16
Features integrated into MSM8x16 are as follows:
 Quad 1.2 GHz ARM Cortex-A53 64-bit application processors with 512 kB L2 cache
 28 nm LP process for lower active power dissipation, and faster peak CPU performance
 Single-channel, non-PoP high-speed memory – LPDDR2/LPDDR3 SDRAM up to 533 MHz
clock rate
 QDSP6 v5 processor (modem) up to 691 MHz
 LTE Cat 4
 DSDA support
 Three dual-voltage UIM ports
 Adreno™ A306 3D graphics core
1.3.3 Air interface features
1.3.3.1 Network voice and data
Air interface support depends on the MSM variant, as listed in Table 1-2. Operation of the
hardware features are dependent on software implementation. Refer to the most recent software
release notes for details.
Table 1-3 MSM8x16 chipset and CS timelines
July-14 MSM8x16 PM8916 WTR
1605L
2605
2100
QFE
2320
2322
QFE
2340
QFE
2101
QFE
1520
QFE
1550
SMB
1360
QCA
1990
WCN
3620
3660B
Oct-14 MSM8x16 PM8916 WTR
4905
2605
QFE
3320
QFE
2340
QFE
2101
QFE
2520
QFE
2550
SMB
1360
QCA
1990
WCN
3620
3660B
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 18
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Introduction
Table 1-4 3GPP GSM support
Standard Feature descriptions
GSM
GPRS  Packet-switched data:
 DTM (simple class A) operation
 Multislot class 12 and 33 data services
 CS schemes – CS1, CS2, CS3, and CS4
 GEA1, GEA2, and GEA3 ciphering
 Maximum of four Rx timeslots per frame
EDGE  E2 power class for 8 PSK
 DTM (simple class A), multislot class 12 and class 33
 Downlink coding schemes – CS 1-4, MCS 1-9
 Uplink coding schemes – CS 1-4, MCS 1-9
 BEP reporting
 SRB loopback and test mode B
 8-bit and 11-bit RACH
 One-phase/two-phase access procedures
 Link adaptation and IR
 NACC, extended UL TBF
Table 1-5 3GPP2 CDMA support
Standard Feature descriptions
1x  153.6 kbps forward link, 153.6 kbps reverse link
 Quasi-linear interference cancellation (QLIC)
 Supported 1x features include: fast 800 Hz forward power control, quasi-orthogonal
functions, supplemental channel (SCH) support, forward quick-paging channel
(F-QPCH), convolutional and turbo codes on SCH, radio-link protocol 3 (RLP3)
1xEV-DOr0  High-speed peak data rates – 2.4 Mbps forward link; 153 kbps reverse link
 Handoffs between IS-2000 and IS-856 systems
 Slotted mode operation for reduced power consumption
1xEV-DOrA  High-speed peak data rates – 3.1 Mbps forward link; 1.8 Mbps reverse link
 Platinum broadcast up to 1.5 Mbps multicast services on the forward link via OFDM
overlay
 VoIP, IMs, and IPv6
 Plus the r0 features listed above
1x Advanced  TIA-2000-E compliant
 Enhanced quasi-linear interference cancellation (eQLIC)
 New radio configurations (RC11 on FL, RC8 on RL)
 New RC’s support frame early termination (FET), lower rate power control, and smart
blanking of 1/8 rate frames
 Plus the 1x features listed above
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 19
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Introduction
Table 1-6 3GPP WCDMA support
Standard Feature descriptions
R99  All modes and data rates for WCDMA FDD, with the following restrictions:
 The downlink supports the following specifications:
– Up to four physical channels, including the broadcast channel (BCH), if present
– Up to three dedicated physical channels (DPCHs)
– Spreading factor (SF) range support from 4 to 256
– Support for the following transmit diversity modes: space-time transmit diversity
(STTD); time-switched transmit diversity (TSTD); closed-loop feedback transmit
diversity (CLTD)
 The uplink supports the following specifications:
– One physical channel, eight TrCH, and 16 TrBks starting at any frame boundary
– A maximum data rate of 384 kbps
 Full SF range support from 4 to 256
 PS data rates of 384 kbps DL and 384 kbps UL; CS data rates of 64 kbps DL and
64 kbps UL
R5 HSDPA  HS-DSCH (HS-SCCH, HS-PDSCH, and HS-DPCCH)
 Maximum of 15 HS-PDSCH channels, both QPSK and 16 QAM modulation
 Support for 3GPP-defined features:
 R99 transport channels
 Maximum of four simultaneous HS-SCCH channels
 CQI and ACK/NACK on HS-DPCCH channel
 All incremental redundancy versions for HARQ
 Configurable support for power classes 3 or 4 per TS 25.101
 TFC selection limitation on UL factoring in transmissions on the HS-DPCCH per
TS 25.133
 Switching between HS-PDSCH and DPCH channel resources as directed by the
network
 Network activation of compressed mode by SF/2 or HLS on the DPCH for conducting
inter-frequency or inter-radio access technology (RAT) measurements when the
HS-DSCH is active
 STTD on both associated DPCH and HS-DSCH simultaneously
 CLTD mode 1 on the DPCH when the HS-PDSCH is active
 STTD on HS-SCCH when STTD or CLTD mode 1 are configured on the associated
DPCH
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 20
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Introduction
R6 HSUPA  E-DCH data rates of up to 5.76 Mbps for 2 ms TTI (UE category 6) uplink
 Support for 3GPP-defined features:
 E-AGCH, E-RGCH and E-HICH channels for downlink; E-RGCH and E-HICH
supports serving and non-serving radio links, with up to four radio links in the E-DCH
active set
 All HARQ incremental redundancy versions and maximum number of HARQ
retransmissions
 Uplink E-DCH channel with support for up to four E-DPDCH channels
 HSUPA channels run simultaneously with R99 and HSDPA channels
 STTD on all HSUPA downlink channels
 CLTD mode 1 on HS-PDSCH and DPCH along with HSUPA channels
 Switch between HSUPA channels and DPCH channel resources as directed by the
network
 Handover using compressed mode with simultaneous E-DCH and HS-DSCH
interactive, background, and streaming QoS classes
R7 HSPA+  Downlink 64 QAM; up to 21 Mbps
 Uplink 16 QAM; up to 11 Mbps
 DTX (discontinuous transmission) and DRX (discontinuous reception)
 Enhanced F-DPCH
 Layer 2 optimizations
 Enhanced cell forward access channel (FACH)
R8 DC-HSPA+  Downlink dual carrier with 64 QAM; up to 42 Mbps
 Enhanced serving cell change
 Plus the R7 features listed above
Table 1-6 3GPP WCDMA support (cont.)
Standard Feature descriptions
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 21
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Introduction
Table 1-7 3GPP TD-SCDMA support
Standard Feature descriptions
R99  L1 PHY
 DPCH downlink data processing
 DPCH Uplink data processing
 Cell searcher
 Random access procedure
 Uplink synchronization
 Power Control
 Idle Mode DRX and Paging
 Measurement
 Cell reselection
 Hard handover
 Baton handover
 N-Frequency (primary frequency and working frequency)
 L2 MAC
 Transport channels support - FACH, RACH, BCH, PCH, DCH
 Logical channels support - BCCH, PCCH, DCCH, CCCH, DTCH, CTCH
 Mapping between logical channels and transport channels
 TFC selection
 Traffic volume measurement
 Access Service Class selection for RACH transmission
 Priority handling between data flows
 Multiplexing/demultiplexing of upper layer PDUs into/from transport blocks (sets)
 Control of RACH transmissions
 Multiple CCTrCH
 L2 RLC
 Transparent Mode (TM) data transmitting and receiving
 Unacknowledged Mode (UM) data transmitting and receiving
 Acknowledged Mode (AM) data transmitting and receiving
 L3 RRC
 RRC states: Idle, CELL_DCH, CELL_FACH, CELL_PCH, URA_PCH
 RRC procedures
– Connection management procedures
• Broadcast of system information
• Paging
• RRC connection
• UE capability
• Direct transfer
• Security mode control
• Signaling connection
 Inter-RAT handover information transfer
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 22
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Introduction
1.3.4 Summary of MSM8x16 features
MSM8x16 features are summarized in Table 1-9.
– Radio bearer procedures
• Radio bearer establishment/reconfiguration
• Transport channel reconfiguration
• Physical channel reconfiguration
• Uplink Physical Channel Control (TDD only)
– Mobility procedures
• Cell and URA update procedures
• Hard handover
• Inter-RAT handover/cell reselection/cell change order
– Measurement procedures
• Intra-frequency, Inter-frequency, Inter-RAT measurements
 General procedures
– Open Loop Power Control
– FACH measurement occasion
– Access Service Classes
– RRC message IE handling - UE Capability IE, Radio Bearer IE, Transport
Channel IE, Physical Channel IE, Measurement IE, etc.
– Cell Selection/Reselection
– Timers
– Measurement events
– ANS.1
Table 1-8 3GPP GSM support
Standard Feature descriptions
R8  FDD: up to 100 Mbps downlink, 50 Mbps uplink (Cat3)
 FDD: up to 150 Mbps downlink, 50 Mbps uplink (Cat4)
 TDD: up to 68 Mbps downlink, 17 Mbps uplink (Cat3)
 TDD: up to 117 Mbps downlink, 30 Mbps uplink (Cat4)
 1.4 to 20 MHz RF bandwidth
 2 × 2 downlink SU-MIMO; 4 × 2 downlink SU-MIMO
 IPv6, QoS
 Inter-RAT capabilities with 1x, 1xEV-DO Rev B, DC-HSPA+, EDGE, and
TD-SCDMA modes
Note: For TDD mode uplink/downlink peak throughputs are configuration dependent.
Table 1-7 3GPP TD-SCDMA support
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 23
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Introduction
Table 1-9 Summary of MSM8x16 features
Feature MSM8x16 capability
Processors
Applications ARM Cortex-A53 microprocessor cores up to 1.2 GHz
 64-bit processor
 Quad core, 512 kB L2 cache
 Primary boot processor
Modem system QDSP6 v5 core at up to 691 Hz
768 kB L2 caches
 MSM8x16: DSDS and DSDA
RPM system Cortex M3: Modem power manager (MPM)
MPM coordinates shutdown/wakeup, clock rates, and VDDs
Memory support
System memory via EBI Non PoP LPDDR2, LPDDR3 SDRAM; 32-bit wide; up to 533 MHz
Graphics internal memory 128 kB unified SRAM pool on-chip memory (GMEM)
External memory via SDC1 eMMC v4.5/SD flash devices
RF support
RF operating bands Defined by WTR device
Air interfaces
 GSM
 CDMA
 WCDMA
 TD-SCDMA
 LTE
 WLAN/BT/FM
 NFC
See summary in Table 1-9 and details in Section 1.3.3
 Yes
 Yes
 Yes
 Yes
 Yes
 Yes – all (with WCN3620/WCN3660B)
 Yes – With QCA1990
GNSS – Qualcomm® IZat™ engine Gen 8C;
Support for three bands concurrently:
 GPS, BeiDou, and Glonass or
 GPS, BeiDou, and Galileo
Multimedia
Display interfaces
MIPI_DSI
General display features
HD (1280 x 720) 60 fps; 16/18/24 bpp RGB
MIPI DSI 4-lane
Wi-fi display – 720p30/1080p30
FHD + 720p external wireless display
Camera interfaces
Number of CSIs
Primary (CSI0)
Secondary (CSI1)
Configurations supported
General camera features
Qcamera
Two; 1.5 Gbps per lane
4-lane; supports CMOS and CCD sensors
Up to 13 MP sensors
2-lane MIPI_CSI – webcam support up to 8 MP sensors
Pixel manipulations, camera modes, image effects, and
post-processing techniques, including defective pixel correction
I2C controls
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 24
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Introduction
Mobile display processor MDP for display processing
Video applications performance
Encode
Decode
720p 30 fps (H.264 Baseline/MPEG-4)
30 fps 1080p (MPEG-4/H.264/VP8/H.263)
WFD 720p @ 30 fps
30 fps 1080p (MPEG- 4/H.264/H.263/DivX/MPEG2/VC1/Soreson/VP8)
WFD 1080p @ 30 fps
Graphics Adreno 306; up to 400 MHz 3D graphics accelerator
Audio
Low-power audio
Voice codec support
Audio codec support
Enhanced audio
Synthesizer
Low power audio for mp3 and AAC playback; surround sound;
Versatile – many audio playback and voice modes; encoders for audio
and FM
recording; many concurrency modes
G711; Raw PCM; QCELP; EVRC, -B, -WB; AMR-NB, -WB; GSM-EFR,
-FR, -HR
MP3; AAC+, eAAC; AMR-NB, -WB, G.711, WMA 9/10 Pro
Dolby Digital Plus and DTS-HD surround sound
Fluence™ Noise Cancellation
QAudioFX/Qconcert/QEnsemble
128-voice polyphony wavetable
Web technologies V8 JavaScript Engine optimizations
Webkit browser JPEG hardware decode acceleration
Networking Stack IP and HTTP tuning
Flash 10.x and video processor decode optimization
Messaging Text messages; text encoding for SMS
Multimedia messaging services – combined video (MPEG4), still image
(JPEG), voice tag (AMR), text sent as message
Connectivity
BLSP ports
UART
I2C
SPI (master only)
six, 4 bits each; multiplexed serial interface functions
Yes – up to 4 Mbps
Yes – cameras, sensors, near field communicator (NFC), SMB etc.
Yes – cameras, sensors, etc.
UIM Three ports – dual voltage (1.8 V/2.85 V)
USB One USB 2.0 high-speed
Secure digital interfaces Up to two ports, both dual-voltage
One 8-bit and one 4-bit
SD 3.0; SD/MMC card; eMMC v4.5
Wireless connectivity
WLAN
Bluetooth
FM radio
NFC
With WCN3620 and WCN3660B
802.11 a/b/g/n
BT 4.0 LE and earlier
Rx
QCA1990
Table 1-9 Summary of MSM8x16 features (cont.)
Feature MSM8x16 capability
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 25
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Introduction
Touch screen support Capacitive panels via ext IC (I2C, SPI, and interrupts)
Audio interfaces
DMIC
MI2S
CDC PDM port
One port for digital mic application
Up to two ports (primary and secondary ports)
Interface between PM8916 and MSM8x16 for audio application
Configurable GPIOs
Number of GPIO ports 122 GPIOs – GPIO_0 to GPIO_121
Input configurations Pull-up, pull-down, keeper, or no pull
Output configurations Programmable drive current
Top-level mode multiplexer Provides a convenient way to program groups of GPIOs
Internal functions
Security
Crypto engine
QFPROM
Security controller
Secure boot, SFS, ARM TrustZone, SEE, secure debug, and Microsoft
WM DRM10
Increased throughput via increased frequencies and a new internal AXIbased data master; support for multiple execution environments per
Crypto; algorithm accelerate file system encryption (AES-XTS), IPSec and
SSL (HMAC-SHA, CCM, CMAC)
Large fuse array, replaces previous-generation Qfuse chains;
non-volatile memory with faster and simpler programming
Chip-wide configuration for security, feature enable, and debug; persistent
storage of ID numbers and sensitive key data; secure HDCP key
provisioning and secure debug facility; primary and secondary hardware
key blocking for SFS
PLLs and clocks Multiple clock regimes; watchdog and sleep timers
19.2 MHz CXO master clock input
General-purpose outputs: M/N counter, PDM
Resource and power manager Fundamental to power management
Key blocks: RPM core, Cortex M3, security controller, MPM
Improved efficiency via clock control, split-rail power collapse and voltage
scaling; several low-power sleep modes
Debug JTAG, QDSS
Others Thermal sensors; modes and resets; peripheral subsystem
Chipset and RF front-end (RFFE) interface features
WTR RFICs
WLAN baseband data
GNSS baseband data
Status and control
WTR4905, WTR1605L, and WTR2605
One Rx and one Tx analog interface
Rx analog interface
SSBIs and discrete signals as needed via GPIOs
Power management PM8916
2-line SPMI; dedicated clock and reset lines; plus other GPIOs as needed
Table 1-9 Summary of MSM8x16 features (cont.)
Feature MSM8x16 capability
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 26
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Introduction
1.4 Terms and acronyms
Table 1-10 defines terms and acronyms commonly used throughout this document.
WCN wireless connectivity
WLAN baseband data
WLAN status and control
Bluetooth
FM radio
WCN3620/WCN3660B
Multiplexed Rx/Tx analog interface
Proprietary 5-line interface
2-line data interface plus SSBI
1-line data interface plus SSBI
QCA near field communicator I2C plus other GPIOs as needed
QFE PA power management RFFE clock and data ports via GPIOs
Power amplifiers and RF switches Discrete control lines
Fabrication technology and package
Digital die 28 nm LP CMOS
Small, thermally efficient package 760 NSP: 14.0 × 12.0 × 0.96 mm; 0.4-mm pitch
Table 1-9 Summary of MSM8x16 features (cont.)
Feature MSM8x16 capability
Table 1-10 Terms and acronyms
Term Definition
ADC Analog-to-digital converter
AGC Automatic gain control
BER Bit error rate
bps Bits per second
BT Bluetooth
CDMA Code division multiple access
CRC Cyclic redundancy code
CSI Camera serial interface
DAC Digital-to-analog converter
DDR Double data rate
DRM Digital Rights Management
DSDA Dual SIM dual active
DSDS Dual SIM dual standby
DSI Display serial interface
DSP Digital signal processor
EBI External bus interface
EDGE Enhanced data rates for GSM evolution
ETB Embedded trace buffer
EV-DO Evolution data optimized
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 27
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Introduction
FDD Frequency division duplex
GLONASS Global orbiting navigation satellite system
GNSS Global navigation satellite system
GPIO General-purpose input/output
GPRS General packet radio services
GPS Global positioning system
GPU Graphics processing unit
GRFC General RF control
GSM Global system for mobile communications
HSPA+ High-speed packet access
I
2C Inter-integrated circuit
ISP Image signal processing
JPEG Joint Photographic Experts Group
JTAG Joint Test Action Group (ANSI/ICEEE Std. 1149.1-1760)
kbps kilobits per second
LCD Liquid crystal display
LPA Low-power audio
LPASS Low-power audio subsystem
LPDDR Low-power DDR
LPM LPASS memory
LSB Defines whether the LSB is the least significant bit or least significant byte. All instances
of LSB used in this manual are assumed to be LSByte, unless otherwise specified.
MDP Mobile display processor
MIPI Mobile industry processor interface
MMC Multimedia card
MPM Modem power management
MSB Defines whether the MSB is the most significant bit or most significant byte. All instances
of MSB used in this manual are assumed to be MSByte, unless otherwise specified.
NSP Nanoscale package
OMA Open Mobile Alliance
PA Power amplifier
PDM Pulse-density modulation
PM Power management
QDSS Qualcomm debug subsystem
QFPROM Qualcomm fuse programmable read-only memory
QLIC Quasi-linear interference cancellation
Table 1-10 Terms and acronyms (cont.)
Term Definition
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 28
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Introduction
QTI Qualcomm Technologies, Inc.
QUP Qualcomm Unified Peripheral
RBDS Radio broadcast data system
RDS Radio data system
RLP Radio link protocol
RPM Resource power manager
SBI Serial bus interface
SD Secure digital
SDC Secure digital controller
SEE Secure Execution Environment
SFS Secure file system
SIM Subscriber identity module
SMT Surface mount technology
SPI Serial peripheral interface
sps Symbols per second (or samples per second)
SPSS Smart peripheral subsystem
SSBI Single-wire SBI
TAP Test access port
TCXO Temperature-compensated crystal oscillator
TDD Time division duplexing
TSTS Triple SIM Triple Standby
UART Universal asynchronous receiver transmitter
UIM User identity module
UMTS Universal mobile telecommunications system
USB Universal serial bus
USIM UMTS subscriber identity module
WCDMA Wideband code division multiple access
WCN Wireless connectivity network
WLAN Wireless local area network
WTR Wafer-scale RF transceiver
XO Crystal oscillator
ZIF Zero intermediate frequency
Table 1-10 Terms and acronyms (cont.)
Term Definition
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 29
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Introduction
1.5 Special marks
Table 1-11 defines special marks used in this document.
Table 1-11 Special marks
Mark Definition
[ ] Brackets ([ ]) sometimes follow a pin, register, or bit name. These brackets enclose a range
of numbers. For example, DATA[7:4] may indicate a range that is 4 bits in length, or
DATA[7:0] may refer to all eight DATA pins.
_N A suffix of _N indicates an active low signal. For example, RESIN_N.
0x0000 Hexadecimal numbers are identified with an x in the number (for example, 0x0000). All
numbers are decimal (base 10) unless otherwise specified. Non-obvious binary numbers
have the term binary enclosed in parentheses at the end of the number; for example,
0011 (binary).
| A blue vertical bar in the outside margin of a page indicates that a change was made since
the previous revision of this document.
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 30
Confidential and Proprietary – Qualcomm Technologies, Inc.
2 Pin Definitions
The MSM8x16 is available in the 760 NSP – see Chapter 4 for package details. A high-level view
of all pin assignments is shown in Figure 2-3. The pins are colored to indicate which function type
they support, as defined in Figure 2-1.
Figure 2-1 MSM8x16 pin assignments – legend
The text within Figure 2-3 is difficult to read when viewing an 8½" by 11" hard copy. Other
viewing options are available:
 Print that one page on an 11" by 17" sheet.
 View the graphic soft copy and zoom in – the resolution is sufficient for comfortable reading.
 Download the MSM8916 Pin Assignment Spreadsheet (80-NK807-1A) – this Microsoft®
Excel spreadsheet lists all MSM8x16 pad numbers (in alphanumeric order), pad names, pad
voltages, pad types, and functional descriptions.
NOTE Click the link below to download the pin assignment spreadsheet (80-NK807-1A)
from the CDMA Tech Support website.
https://downloads.cdmatech.com/qdc/drl/objectId/09010014824cc7b4
If you have permission to view the document, a prompt will be presented for initiating
the download.
NOTE Subscribe to the pin assignment spreadsheet to be notified of any changes.
Click the Help button to download the latest revision of Using CDMATech Support
Documents and Downloads User Guide (80-V7273-1). This document includes
subscription instructions.
Multimedia No
connection Power Ground
Audio Chipset
& RFFE Connectivity GPIOs Internal
functions
Memory
support
MSM8216/MSM8616/MSM8916 Device Specification Pin Definitions
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 31
Confidential and Proprietary – Qualcomm Technologies, Inc.
Figure 2-2 High-level view of MSM8x16 pin assignments (top view)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40
A NC GPIO_35 GND EBI0_CK E_0 EBI0_CK E_1 GND EBI0_DQ _18 GND EBI0_DQ _19 EBI0_DQ _2 GND EBI0_DQ _7 EBI0_DQ _10 GND EBI0_DQ _14 GND EBI0_DQ _30 CXO_EN GPIO_98 NC A
B NC GPIO_29 GND EBI0_CS _N_0 EBI0_CS _N_1 EBI0_CA _8 EBI0_CA _5 EBI0_DQ _17 EBI0_DQ _16 EBI0_DM _2 EBI0_DQ _4 EBI0_DQ _6 EBI0_DQ SB_0 EBI0_DQ _11 EBI0_DM _3 EBI0_DQ _31 EBI0_DQ _29 GPIO_38 GPIO_11 0 B
C GPIO_27 GPIO_36 EBI0_CA _2 GND EBI0_CK EBI0_CA _6 EBI0_DQ _21 GND GND EBI0_DQ S_0 EBI0_DQ _9 EBI0_DQ _13 GND EBI0_DQ _24 EBI0_DQ _26 GPIO_97 GPIO_11 1 C
D GPIO_32 GPIO_31 GND GND EBI0_CA _3 EBI0_CK B EBI0_CA _7 EBI0_DQ _20 EBI0_DQ _22 EBI0_DQ SB_2 EBI0_DQ _3 EBI0_DQ _5 EBI0_DQ SB_1 GND EBI0_DQ _12 EBI0_DQ SB_3 NC EBI0_DQ _27 NC GPIO_11 3 D
E GPIO_11 GPIO_37 EBI0_CA _4 EBI0_CA _1 EBI0_CA _0 GND EBI0_CA _9 EBI0_DQ _23 EBI0_DQ S_2 EBI0_DQ _0 EBI0_DQ _1 EBI0_DM _1 EBI0_DQ S_1 EBI0_DQ _8 EBI0_DQ _15 EBI0_DQ S_3 EBI0_DQ _28 PS_HOL D GPIO_11 5 GPIO_11 4 E
F GPIO_28 GPIO_30 GPIO_34 GND EBI0_CA L NC NC GND NC EBI0_DM _0 GND GND GND VDD_P3 EBI0_DQ _25 RESIN_N GND GPIO_12 0 F
G GPIO_9 GPIO_33 GPIO_17 GND GND GND GND GND GND GND NC GND NC GND GND GND GPIO_62 SLEEP_ CLK GPIO_12 1 GPIO_57 G
H GPIO_10 GPIO_26 GPIO_8 NC NC NC NC VDD_P3 NC EBI_VRF E_D0_D2 NC NC NC NC NC GPIO_10 7 GND GND GPIO_55 H
J TDO GPIO_19 GPIO_18 VDD_P3 VDD_P1 EBI_VRE F_CA VDD_P1 GND GND VDD_P1 VDD_P1 VDD_P1 EBI_VRE F_D1_D3 VDD_ME M VDD_P1 GND GPIO_10 9 GND GND GPIO_58 J
K SRST_N TRST_N GND GPIO_16 GND VDD_P1 VDD_P1 GND VDD_P1 GND VDD_P1 VDD_ME M VDD_ME M VDD_AP C VDD_AP C VDD_AP C GPIO_10 8 GND GPIO_54 K
L TMS GND GND GND GND GND VDD_P5 GPIO_69 GPIO_59 GPIO_53 L
M TCK TDI GND GND VDD_CO RE VDD_CO RE VDD_ME M VDD_ME M VDD_ME M NC VDD_CO RE VDD_AP C VDD_AP C VDD_AP C VDD_AP C VDD_AP C VDD_AP C GND GND GND M
N GND GND SDC2_C MD GND VDD_ME M GND GND GND GND GND GND GND GND GND GND N
P SDC2_D ATA_0 GND SDC2_D ATA_3 GND GND GND GND GND NC GND NC NC VDD_AP C VDD_AP C VDD_AP C VDD_AP C GND GND GND P
R SDC2_C LK SDC2_D ATA_1 GND GND GND GND GND GND GND GND GND GND GND R
T MIPI_CSI 0_LN1_P GND GND SDC2_D ATA_2 VDD_CO RE VDD_CO RE VDD_ME M VDD_ME M GND GND VDD_CO RE VDD_ME M VDD_AP C VDD_AP C VDD_AP C VDD_ME M VDD_AP C GND GND GND T
U MIPI_CSI 0_LN1_N MIPI_CSI 0_LN0_N MIPI_CSI 0_LN0_P VDD_CO RE VDD_CO RE VDD_CO RE GND GND GND GND GND GND GND GND U
V MIPI_CSI 0_LN2_P GND MIPI_CSI 0_CLK_P VDD_P3 VREF_PA DS GND GND GND GND GND GND GND VDD_AP C VDD_AP C VDD_AP C VDD_AP C VDD_AP C GND GND GND V
W MIPI_CSI 0_LN2_N GND MIPI_CSI 0_CLK_N VDD_P2 GND GND VDD_PLL 2 GND GND GND GND GND GND GND GND W
Y MIPI_CSI 1_LN0_P GND MIPI_CSI 0_LN3_P VDD_CO RE VDD_CO RE VDD_CO RE VDD_CO RE VDD_CO RE VDD_ME M VDD_PLL 1 GND VDD_AP C VDD_AP C VDD_AP C VDD_AP C VREF_PA DS GPIO_51 GPIO_49 GPIO_60 Y
AA MIPI_CSI 1_LN0_N GND MIPI_CSI 0_LN3_N GND GND GND GND GND VDD_P3 GPIO_50 GPIO_56 GPIO_52 NC AA
AB MIPI_CSI 1_LN1_P MIPI_CSI 1_CLK_P MIPI_CSI 1_CLK_N MIPI_DSI _LDO VDD_MIP I NC GND GND GND NC GND NC VDD_AP C VDD_AP C VDD_AP C VDD_AP C VDD_P4 USB_HS _DP AB
AC MIPI_CSI 1_LN1_N GND NC VDD_MIP I GND VDD_US BPHY_3 P3 VDD_P6 USB_HS _TXRTU NE USB_HS _DM AC
AD NC NC NC GND VDD_ME M VDD_CO RE VDD_CO RE VDD_CO RE GND GND NC VDD_CO RE NC VDD_CO RE NC VDD_US BPHY_1 P8 USB_HS _SYSCL OCK SDC1_D ATA_0 AD
AE MIPI_DSI 0_LN0_P MIPI_DSI 0_LN1_P VDD_MIP I VDD_MIP I GND GND VDD_PLL 1 VDD_US B_HS SDC1_C LK SDC1_D ATA_1 AE
AF MIPI_DSI 0_LN0_N MIPI_DSI 0_LN1_N GND GND GND GND GND GND GND GND GND GND GND GND VDD_CD C_SDC1 VDDPX_7 SDC1_D ATA_7 SDC1_D ATA_6 AF
AG MIPI_DSI 0_CLK_P MIPI_DSI 0_LN2_P MIPI_DSI 0_CAL VDD_PLL 1 GND GND VDD_ME M VDD_P3 SDC1_D ATA_2 SDC1_D ATA_5 SDC1_D ATA_4 AG
AH MIPI_DSI 0_CLK_N MIPI_DSI 0_LN2_N VDDA_MI PI_DSI0_ PLL GND GND VDD_CO RE VDD_ME M VDD_ME M VDD_CO RE VDD_CO RE VDD_CO RE VDD_ME M VDD_ME M VDD_ME M VDD_ME M GND SDC1_C MD SDC1_D ATA_3 GPIO_64 AH
AJ GND GND NC
VDD_QF
PROM_P
RG
VDD_ME
M GND PMIC_SP MI_DATA GPIO_66 GPIO_63 AJ
AK MIPI_DSI 0_LN3_P NC NC GND VDD_P3 GND GND GND GND GND GND GND NC NC GND GND GND GPIO_67 PMIC_SP MI_CLK GPIO_65 AK
AL MIPI_DSI 0_LN3_N NC NC GND VDD_ME M GND CXO GPIO_61 GPIO_68 AL
AM GND GND NC NC VDD_ME M VDD_ME M GND GND VDD_CO RE VDD_CO RE GND GND GND NC GND GND GND GPIO_13 GPIO_12 AM
AN NC NC NC DNC VDD_PLL 2 GND VDD_ME M GPIO_15 GPIO_70 GPIO_14 AN
AP NC NC NC GND WLAN_B B_QM WLAN_B B_IP VDD_A1 VDD_A1 VDD_PLL 2 NC VDD_ME M VDD_ME M VDD_P3 GPIO_76 GPIO_74 AP
AR GND GND WCSS_X O VDD_CO RE WLAN_B B_QP WLAN_B B_IM VDD_A2 VDD_A2 VDD_A2 VDD_A2 TX_DAC0 _VREF GPIO_11 8 GPIO_71 AR
AT NC NC GPIO_24 VDD_P3 GPIO_4 VDD_P3 GND VDD_WL AN NC NC NC TX_DAC1 _IREF NC GND GND MODE_1 VDD_P3 GPIO_10 3 GPIO_72 AT
AU NC GPIO_25 GND VDD_P3 VDD_ME M GND WLAN_R SET NC NC NC TX_DAC1 _VREF NC TX_DAC0 _IREF GND VDD_P3 MODE_0 VDD_P3 GPIO_10 5 GND GPIO_73 AU
AV RESOUT _N GPIO_7 GND GPIO_22 GND GND GND GND GND GND NC NC NC NC NC NC GND GPIO_2 GPIO_11 7 GPIO_75 AV
AW GND GND GPIO_21 GPIO_48 GND GND GND NC NC NC NC NC NC NC NC NC GND GPIO_11 2 GPIO_11 6 GPIO_10 4 AW
AY GPIO_5 GPIO_6 GPIO_45 GPIO_20 GPIO_46 GND GND DNC DNC BBRX_IM _CH1 GND TX_DAC1 _QM NC TX_DAC0 _IP NC GPIO_92 DNC GPIO_3 GPIO_10 6 AY
BA GPIO_23 GPIO_47 GPIO_43 GND GND DNC DNC BBRX_Q M_CH1 BBRX_IP _CH1 GND NC TX_DAC0 _IM GND NC GPIO_90 DNC GPIO_0 GPIO_11 9 BA
BB GPIO_41 GPIO_44 GPIO_40 GND NC GNSS_B B_QM BBRX_IP _CH2 BBRX_Q P_CH1 GND BBRX_IP _CH0 TX_DAC1 _QP GND GND NC GPIO_95 GPIO_10 1 GPIO_88 GPIO_87 GPIO_1 BB
BC GPIO_39 GPIO_77 GPIO_79 GPIO_84 GND GNSS_B B_QP BBRX_IM _CH2 GND BBRX_Q P_CH0 GND TX_DAC1 _IP GND GND NC GPIO_96 GPIO_94 GND GPIO_82 GPIO_83 BC
BD NC GPIO_42 GPIO_80 GPIO_81 NC GNSS_B B_IM GND BBRX_Q P_CH2 GND GND BBRX_IM _CH0 GND TX_DAC0 _QP GND NC GPIO_93 GPIO_89 GND GPIO_86 BD
BE NC GPIO_78 GPIO_85 GND GND GNSS_B B_IP BBRX_Q M_CH2 GND GND BBRX_Q M_CH0 GND TX_DAC1 _IM TX_DAC0 _QM GND GPIO_10 2 GPIO_99 GPIO_10 0 GPIO_91 NC BE
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 32
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Pin Definitions
2.1 I/O parameter definitions
Table 2-1 I/O description (pad type) parameters
Symbol Description
Pad attribute
AI Analog input (does not include pad circuitry)
AO Analog output (does not include pad circuitry)
B Bidirectional digital with CMOS input
DI Digital input (CMOS)
DO Digital output (CMOS)
H High-voltage tolerant
S Schmitt trigger input
Z High-impedance (high-Z) output
Pad pull details for digital I/Os
nppdpukp Programmable pull resistor. The default pull direction is indicated using capital letters and
is a prefix to other programmable options:
 NP: pdpukp = default no-pull with programmable options following the colon (:)
 PD: nppukp = default pulldown with programmable options following the colon (:)
 PU: nppdkp = default pullup with programmable options following the colon (:)
 KP: nppdpu = default keeper with programmable options following the colon (:)
KP Contains an internal weak keeper device (keepers cannot drive external buses)
NP Contains no internal pull
PU Contains an internal pullup device
PD Contains an internal pulldown device
Pad voltage groupings for baseband circuits
P1 EBI Pad group 1 (EBI for LPDDR2/LPDDR3 memory); tied to VDD_P1 pins (1.2 V only)
P2 Pad group 2 (SDC2); tied to VDD_P2 pins (1.8 V or 2.85 V)
P3 Pad group 3 (most peripherals); tied to VDD_P3 pins (1.8 V only)
P4 Pad group 4 (UIM3); tied to VDD_P4 pins (1.8 V or 2.85 V)
P5 Pad group 5 (UIM1); tied to VDD_P5 pins (1.8 V or 2.85 V)
P6 Pad group 6 (UIM2); tied to VDD_P6 pins (1.8 V or 2.85 V)
P7 Pad group 7 (SDC1); tied to VDD_P7 pins (1.2 V or 1.8 V)
MIPI Supply voltage for MIPI_CSI, MIPI_DSI circuits, and I/Os; tied VDD_MIPI (1.8 V only)
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 33
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Pin Definitions
2.1.1 Pin descriptions
Descriptions of all pins are presented in the following tables, organized by functional group:
Table 2-2: Memory support functions
Table 2-3: Multimedia functions
Table 2-4: Connectivity functions
Table 2-7: Internal functions
Table 2-9: Chipset interface functions
Table 2-10: General-purpose input/output ports
Table 2-11: RF front-end interface functions
Table 2-12: No connection, do not connect, and reserved pins
Table 2-13: Power supply pins
Table 2-14: Ground pins
Output current drive strength
EBI pads Pads for EBI are tailored for 1.2 V interfaces and are source terminated; additional details
will be given in future revisions of this document.
3.0 V (H) pads Programmable drive strength, 2–8 mA in 2 mA steps
Others 1 Programmable drive strength, 2–16 mA in 2 mA steps
1. Digital pads other than EBI pads or high-voltage tolerant pads.
Table 2-1 I/O description (pad type) parameters (cont.)
Symbol Description
Table 2-2 Pin descriptions – memory support functions
Pad # Pad name
and/or function
Pad name or
alt function
Pad characteristics
Functional description
Voltage Type
E10 EBI_CA_0 P1 DO LPDDR2/LPDDR3 command/address bit 0
E8 EBI_CA_1 P1 DO LPDDR2/LPDDR3 command/address bit 1
C6 EBI_CA_2 P1 DO LPDDR2/LPDDR3 command/address bit 2
D9 EBI_CA_3 P1 DO LPDDR2/LPDDR3 command/address bit 3
E6 EBI_CA_4 P1 DO LPDDR2/LPDDR3 command/address bit 4
B13 EBI_CA_5 P1 DO LPDDR2/LPDDR3 command/address bit 5
C12 EBI_CA_6 P1 DO LPDDR2/LPDDR3 command/address bit 6
D13 EBI_CA_7 P1 DO LPDDR2/LPDDR3 command/address bit 7
B11 EBI_CA_8 P1 DO LPDDR2/LPDDR3 command/address bit 8
E14 EBI_CA_9 P1 DO LPDDR2/LPDDR3 command/address bit 9
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 34
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Pin Definitions
F11 EBI_CAL_REXT - AI LPDDR2/LPDDR3 calibration resistor
C10 EBI_CK P1 DO LPDDR2/LPDDR3 differential clock (+)
D11 EBI_CKB P1 DO LPDDR2/LPDDR3 differential clock (-)
A8 EBI_CKE_0 P1 DO LPDDR2/LPDDR3 clock enable 0
A10 EBI_CKE_1 P1 DO LPDDR2/LPDDR3 clock enable 1
B7 EBI_CS0_N P1 DO LPDDR2/LPDDR3 chip select 0
B9 EBI_CS1_N P1 DO LPDDR2/LPDDR3 chip select 1
F23 EBI_DM_0 P1 DO LPDDR2/LPDDR3 data mask for byte 0
E24 EBI_DM_1 P1 DO LPDDR2/LPDDR3 data mask for byte 1
B19 EBI_DM_2 P1 DO LPDDR2/LPDDR3 data mask for byte 2
B31 EBI_DM_3 P1 DO LPDDR2/LPDDR3 data mask for byte 3
E20 EBI_DQ_0 P1 B LPDDR2/LPDDR3 data bit 0
E22 EBI_DQ_1 P1 B LPDDR2/LPDDR3 data bit 1
A20 EBI_DQ_2 P1 B LPDDR2/LPDDR3 data bit 2
D21 EBI_DQ_3 P1 B LPDDR2/LPDDR3 data bit 3
B21 EBI_DQ_4 P1 B LPDDR2/LPDDR3 data bit 4
D23 EBI_DQ_5 P1 B LPDDR2/LPDDR3 data bit 5
B23 EBI_DQ_6 P1 B LPDDR2/LPDDR3 data bit 6
A24 EBI_DQ_7 P1 B LPDDR2/LPDDR3 data bit 7
E28 EBI_DQ_8 P1 B LPDDR2/LPDDR3 data bit 8
C26 EBI_DQ_9 P1 B LPDDR2/LPDDR3 data bit 9
A26 EBI_DQ_10 P1 B LPDDR2/LPDDR3 data bit 10
B29 EBI_DQ_11 P1 B LPDDR2/LPDDR3 data bit 11
D29 EBI_DQ_12 P1 B LPDDR2/LPDDR3 data bit 12
C28 EBI_DQ_13 P1 B LPDDR2/LPDDR3 data bit 13
A30 EBI_DQ_14 P1 B LPDDR2/LPDDR3 data bit 14
E30 EBI_DQ_15 P1 B LPDDR2/LPDDR3 data bit 15
B17 EBI_DQ_16 P1 B LPDDR2/LPDDR3 data bit 16
B15 EBI_DQ_17 P1 B LPDDR2/LPDDR3 data bit 17
A14 EBI_DQ_18 P1 B LPDDR2/LPDDR3 data bit 18
A18 EBI_DQ_19 P1 B LPDDR2/LPDDR3 data bit 19
D15 EBI_DQ_20 P1 B LPDDR2/LPDDR3 data bit 20
C14 EBI_DQ_21 P1 B LPDDR2/LPDDR3 data bit 21
D17 EBI_DQ_22 P1 B LPDDR2/LPDDR3 data bit 22
E16 EBI_DQ_23 P1 B LPDDR2/LPDDR3 data bit 23
C34 EBI_DQ_24 P1 B LPDDR2/LPDDR3 data bit 24
F33 EBI_DQ_25 P1 B LPDDR2/LPDDR3 data bit 25
Table 2-2 Pin descriptions – memory support functions (cont.)
Pad # Pad name
and/or function
Pad name or
alt function
Pad characteristics
Functional description
Voltage Type
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 35
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Pin Definitions
C36 EBI_DQ_26 P1 B LPDDR2/LPDDR3 data bit 26
D35 EBI_DQ_27 P1 B LPDDR2/LPDDR3 data bit 27
E34 EBI_DQ_28 P1 B LPDDR2/LPDDR3 data bit 28
B35 EBI_DQ_29 P1 B LPDDR2/LPDDR3 data bit 29
A34 EBI_DQ_30 P1 B LPDDR2/LPDDR3 data bit 30
B33 EBI_DQ_31 P1 B LPDDR2/LPDDR3 data bit 31
C24 EBI_DQS_0 P1 B LPDDR2/LPDDR3 differential data strobe for
byte 0 (+)
E26 EBI_DQS_1 P1 B LPDDR2/LPDDR3 differential data strobe for
byte 1 (+)
E18 EBI_DQS_2 P1 B LPDDR2/LPDDR3 differential data strobe for
byte 2 (+)
E32 EBI_DQS_3 P1 B LPDDR2/LPDDR3 differential data strobe for
byte 3 (+)
B25 EBI_DQS_0B P1 B LPDDR2/LPDDR3 differential data strobe for
byte 0 (-)
D25 EBI_DQS_1B P1 B LPDDR2/LPDDR3 differential data strobe for
byte 1 (-)
D19 EBI_DQS_2B P1 B LPDDR2/LPDDR3 differential data strobe for
byte 2 (-)
D31 EBI_DQS_3B P1 B LPDDR2/LPDDR3 differential data strobe for
byte 3 (-)
J12 EBI_VREF_CA - AI LPDDR2/LPDDR3 CA reference voltage
H21 EBI_VREF_D0_D2 - AI LPDDR2/LPDDR3 D0 and D2 reference voltage
J26 EBI_VREF_D1_D3 - AI LPDDR2/LPDDR3 D1 and D3 reference voltage
Table 2-2 Pin descriptions – memory support functions (cont.)
Pad # Pad name
and/or function
Pad name or
alt function
Pad characteristics
Functional description
Voltage Type
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 36
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Pin Definitions
Table 2-3 Pin descriptions – multimedia functions
Pad # Pad name and/or
function
Pad name or
alt function
Pad characteristics
Functional description
Voltage Type
Primary camera serial interface – 4-lane MIPI_CSI0
U4 MIPI_CSI0_LN0_N MIPI AI, AO MIPI camera serial interface 0 lane 0 – negative
U6 MIPI_CSI0_LN0_P MIPI AI, AO MIPI camera serial interface 0 lane 0 – positive
W6 MIPI_CSI0_CLK_N MIPI AI MIPI camera serial interface 0 clock – negative
V5 MIPI_CSI0_CLK_P MIPI AI MIPI camera serial interface 0 clock – positive
U2 MIPI_CSI0_LN1_N MIPI AI, AO MIPI camera serial interface 0 lane 1 – negative
T1 MIPI_CSI0_LN1_P MIPI AI, AO MIPI camera serial interface 0 lane 1 – positive
W2 MIPI_CSI0_LN2_N MIPI AI, AO MIPI camera serial interface 0 lane 2 – negative
V1 MIPI_CSI0_LN2_P MIPI AI, AO MIPI camera serial interface 0 lane 2 – positive
AA6 MIPI_CSI0_LN3_N MIPI AI, AO MIPI camera serial interface 0 lane 3 – negative
Y5 MIPI_CSI0_LN3_P MIPI AI, AO MIPI camera serial interface 0 lane 3 – positive
Secondary camera serial interface – 2-lane MIPI_CSI1
AA2 MIPI_CSI1_LN0_N MIPI AI, AO MIPI camera serial interface 1 lane 0 – negative
Y1 MIPI_CSI1_LN0_P MIPI AI, AO MIPI camera serial interface 1 lane 0 – positive
AB5 MIPI_CSI1_CLK_N MIPI AI MIPI camera serial interface 1 clock – negative
AB3 MIPI_CSI1_CLK_P MIPI AI MIPI camera serial interface 1 clock – positive
AC2 MIPI_CSI1_LN1_N MIPI AI, AO MIPI camera serial interface 1 lane 1 – negative
AB1 MIPI_CSI1_LN1_P MIPI AI, AO MIPI camera serial interface 1 lane 1 – positive
H3
CAM_MCLK0
GPIO_26 P3
DO
B-PD:nppukp
Camera master clock 0
Configurable I/O
C2
CAM_MCLK1
GPIO_27 P3
DO
B-PD:nppukp
Camera master clock 1
Configurable I/O
B3
CAM_I2C_SDA
GPIO_29 P3
B
B-PD:nppukp
Camera I2C serial data
Configurable I/O
F3
CAM_I2C_SCL
GPIO_30 P3
B
B-PD:nppukp
Camera I2C serial clock
Configurable I/O
D3
CCI_TIMER0
GPIO_31 P3
DO
B-PD:nppukp
Camera control interface timer 0
Configurable I/O
D1
CCI_TIMER1
GPIO_32 P3
DO
B-PD:nppukp
Camera control interface timer 1
Configurable I/O
B37
CCI_TIMER2
GPIO_38 P3
DO
B-PD:nppukp
Camera control interface timer 2
Configurable I/O
G4
CCI_ASYNC0
GPIO_33 P3
DI
B-PD:nppukp
Camera control interface async 0
Configurable I/O
F1
CAM1_RST_N
GPIO_28 P3
DO
B-PD:nppukp
Camera 1 (front camera) reset
Configurable I/O
F5
CAM0_STANDBY_N
GPIO_34 P3
DO
B-PD:nppukp
Camera 0 (rear camera) standby
Configurable I/O
A4
CAM0_RSTN_N
GPIO_35 P3
DO
B-PD:nppukp
Camera 0 (rear camera) reset
Configurable I/O
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 37
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Pin Definitions
Display serial interface – 4-lane MIPI_DSI0
AH1 MIPI_DSI0_CLK_N MIPI AO MIPI display serial interface 0 clock – negative
AG2 MIPI_DSI0_CLK_P MIPI AO MIPI display serial interface 0 clock – positive
AF1 MIPI_DSI0_LN0_N MIPI AI, AO MIPI display serial interface 0 lane 0 – negative
AE2 MIPI_DSI0_LN0_P MIPI AI, AO MIPI display serial interface 0 lane 0 – positive
AF3 MIPI_DSI0_LN1_N MIPI AI, AO MIPI display serial interface 0 lane 1 – negative
AE4 MIPI_DSI0_LN1_P MIPI AI, AO MIPI display serial interface 0 lane 1 – positive
AH3 MIPI_DSI0_LN2_N MIPI AI, AO MIPI display serial interface 0 lane 2 – negative
AG4 MIPI_DSI0_LN2_P MIPI AI, AO MIPI display serial interface 0 lane 2 – positive
AL2 MIPI_DSI0_LN3_N MIPI AI, AO MIPI display serial interface 0 lane 3 – negative
AK1 MIPI_DSI0_LN3_P MIPI AI, AO MIPI display serial interface 0 lane 3 – positive
AB7 MIPI_DSI_LDO MIPI AI, AO MIPI display serial interface 0 low-dropout
regulator
AT5
MDP_VSYNC_P
GPIO_24 P3
DO
B-PD:nppukp
MDP VSYNC Signal
Configurable I/O
AG6 MIPI_DSI0_CAL MIPI AI, AO MIPI display serial interface 0 calibration
Table 2-4 Pin descriptions – connectivity functions
Pad # Pad name and/or
function
Pad name or
alt function
Pad characteristics
Functional description
Voltage Type
High-speed USB 2.0
AC40 USB_HS_DM AI, AO USB HS data minus
AB39 USB_HS_DP AI, AO USB HS data plus
AD35 USB_HS_SYSCLOCK DI USB HS system clock (19.2 MHz)
AC38 USB_HS_REXT AI USB HS external resistor
Secure digital controller 1 (SDC1) interface – supports dual-voltage eMMC NAND
AE36 SDC1_CLK P7 B-NP:pdpukp Secure digital controller 1 clock
AH35 SDC1_CMD P7 B-PD:nppukp Secure digital controller 1 command
AD37 SDC1_DATA_0 P7 B-PD:nppukp Secure digital controller 1 data bit 0
AE38 SDC1_DATA_1 P7 B-PD:nppukp Secure digital controller 1 data bit 1
AG34 SDC1_DATA_2 P7 B-PD:nppukp Secure digital controller 1 data bit 2
AH37 SDC1_DATA_3 P7 B-PD:nppukp Secure digital controller 1 data bit 3
AG40 SDC1_DATA_4 P7 B-PD:nppukp Secure digital controller 1 data bit 4
AG38 SDC1_DATA_5 P7 B-PD:nppukp Secure digital controller 1 data bit 5
AF39 SDC1_DATA_6 P7 B-PD:nppukp Secure digital controller 1 data bit 6
AF35 SDC1_DATA_7 P7 B-PD:nppukp Secure digital controller 1 data bit 7
Table 2-3 Pin descriptions – multimedia functions (cont.)
Pad # Pad name and/or
function
Pad name or
alt function
Pad characteristics
Functional description
Voltage Type
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 38
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Pin Definitions
Secure digital controller 2 (SDC2) interface – supports dual-voltage SD 3.0
R4 SDC2_CLK P2 BH-NP:pdpukp Secure digital controller 2 clock
N6 SDC2_CMD P2 BH-PD:nppukp Secure digital controller 2 command
P3 SDC2_DATA_0 P2 BH-PD:nppukp Secure digital controller 2 data bit 0
R6 SDC2_DATA_1 P2 BH-PD:nppukp Secure digital controller 2 data bit 1
T7 SDC2_DATA_2 P2 BH-PD:nppukp Secure digital controller 2 data bit 2
P7 SDC2_DATA_3 P2 BH-PD:nppukp Secure digital controller 2 data bit 3
B37
SD_CARD_DET_N
GPIO_38 P3
DI
PD:nppukp
Secure digital card detection
Configurable I/O
G38
SD_WRITE_PROTECT
GPIO_121 P3
DI
PD:nppukp
Secure digital card write protection
Configurable I/O
Secure digital controller interfaces – common to all SDCs
V9 VREF_PADS AI Reference for secure digital I/O pads
Dual-voltage UIM interfaces
G40
UIM1_DATA
GPIO_57 P5
B
 PD:nppukp
UIM1 data
Configurable I/O
J40
UIM1_CLK
GPIO_58 P5
DO
PD:nppukp
UIM1 clock
Configurable I/O
L38
UIM1_RESET
GPIO_59 P5
DO
PD:nppukp
UIM1 reset
Configurable I/O
Y39
UIM1_PRESENT
GPIO_60 P3
DI
PD:nppukp
UIM1 removal detection
Configurable I/O
L40
UIM2_DATA
GPIO_53 P6
B
PD:nppukp
UIM2 data
Configurable I/O
K39
UIM2_CLK
GPIO_54 P6
DO
PD:nppukp
UIM2 clock
Configurable I/O
H39
UIM2_RESET
GPIO_55 P6
DO
PD:nppukp
UIM2 reset
Configurable I/O
AA36
UIM2_PRESENT
GPIO_56 P3
DI
PD:nppukp
UIM2 removal detection
Configurable I/O
Y37
UIM3_DATA
GPIO_49 P4
B
PD:nppukp
UIM3 data
Configurable I/O
AA34
UIM3_CLK
GPIO_50 P4
DO
PD:nppukp
UIM3 clock
Configurable I/O
Y35
UIM3_RESET
GPIO_51 P4
DO
PD:nppukp
UIM3 reset
Configurable I/O
AA38
UIM3_PRESENT
GPIO_52 P3
DI
PD:nppukp
UIM3 removal detection
Configurable I/O
AL38
UIM_BATT_ALARM
GPIO_61 P3
DI
PD:nppukp
UIM battery alarm
Configurable I/O
Y33 VREF_PADS AI Reference for UIM I/O pads
Table 2-4 Pin descriptions – connectivity functions (cont.)
Pad # Pad name and/or
function
Pad name or
alt function
Pad characteristics
Functional description
Voltage Type
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 39
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Pin Definitions
Sensors and keypad buttons
G34
SMB_INT
GPIO_62 P3
DI
B-PD:nppukp
SMB interrupt
Configurable I/O
L36
MAG_INT
GPIO_69 P3
DI
B-PD:nppukp
magnetometer interrupt
Configurable I/O
E38
GYRO_ACCEL_INT_N
GPIO_115 P3
DI
B-PD:nppukp
Gyro interrupt
Configurable I/O
H33
KYPD_SNS0
GPIO_107 P3
DI
B-PD:nppukp
Keypad sense bit 0
Configurable I/O
K35
KYPD_SNS1
GPIO_108 P3
DI
B-PD:nppukp
Keypad sense bit 1
Configurable I/O
J34
KYPD_SNS2
GPIO_109 P3
DI
B-PD:nppukp
Keypad sense bit 2
Configurable I/O
BAM-based low-speed peripheral interface 1 – see Table 2-6 for application-specific pin assignments
BA38
BLSP1_3
GPIO_0 P3
B
PD:nppukp
BLSP 1 bit 3; UART or SPI
Configurable I/O
BB39
BLSP1_2
GPIO_1 P3
B
PD:nppukp
BLSP 1 bit 2; UART or SPI
Configurable I/O
AV35
BLSP1_1
GPIO_2 P3
B
PD:nppukp
BLSP 1 bit 1; UART, SPI, or I2C
Configurable I/O
AY37
BLSP1_0
GPIO_3 P3
B
PD:nppukp
BLSP 1 bit 0; UART, SPI, or I2C
Configurable I/O
BAM-based low-speed peripheral interface 2 – see Table 2-6 for application-specific pin assignments
AT9
BLSP2_3
GPIO_4 P3
B
PD:nppukp
BLSP 2 bit 3; UART or SPI
Configurable I/O
AY1
BLSP2_2
GPIO_5 P3
B
PD:nppukp
BLSP 2 bit 2; UART or SPI
Configurable I/O
AY3
BLSP2_1
GPIO_6 P3
B
PD:nppukp
BLSP 2 bit 1; UART, SPI, or I2C
Configurable I/O
AV3
BLSP2_0
GPIO_7 P3
B
PD:nppukp
BLSP 2 bit 0; UART, SPI, or I2C
Configurable I/O
BAM-based low-speed peripheral interface 3 – see Table 2-6 for application-specific pin assignments
H5
BLSP3_3
GPIO_8 P3
B
PD:nppukp
BLSP 3 bit 3; SPI
Configurable I/O
G2
BLSP3_2
GPIO_9 P3
B
PD:nppukp
BLSP 3 bit 2; SPI
Configurable I/O
H1
BLSP3_1
GPIO_10 P3
B
PD:nppukp
BLSP 3 bit 1; SPI, or I2C
Configurable I/O
E2
BLSP3_0
GPIO_11 P3
B
PD:nppukp
BLSP 3 bit 0; SPI, or I2C
Configurable I/O
Table 2-4 Pin descriptions – connectivity functions (cont.)
Pad # Pad name and/or
function
Pad name or
alt function
Pad characteristics
Functional description
Voltage Type
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 40
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Pin Definitions
BAM-based low-speed peripheral interface 4 – see Table 2-6 for application-specific pin assignments
AM39
BLSP4_3
GPIO_12 P3
B
PD:nppukp
BLSP 4 bit 3; SPI
Configurable I/O
AM35
BLSP4_2
GPIO_13 P3
B
PD:nppukp
BLSP 4 bit 2; SPI
Configurable I/O
AN40
BLSP4_1
GPIO_14 P3
B
PD:nppukp
BLSP 4 bit 1; SPI, or I2C
Configurable I/O
AN36
BLSP4_0
GPIO_15 P3
B
PD:nppukp
BLSP 4 bit 0; SPI, or I2C
Configurable I/O
BAM-based low-speed peripheral interface 5 – see Table 2-6 for application-specific pin assignments
K7
BLSP5_3
GPIO_16 P3
B
PD:nppukp
BLSP 5 bit 3; SPI
Configurable I/O
G6
BLSP5_2
GPIO_17 P3
B
PD:nppukp
BLSP 5 bit 2; SPI
Configurable I/O
J6
BLSP5_1
GPIO_18 P3
B
PD:nppukp
BLSP 5 bit 1; SPI, or I2C
Configurable I/O
J4
BLSP5_0
GPIO_19 P3
B
PD:nppukp
BLSP 5 bit 0; SPI, or I2C
Configurable I/O
BAM-based low-speed peripheral interface 6 – see Table 2-6 for application-specific pin assignments
AY7
BLSP6_3
GPIO_20 P3
B
PD:nppukp
BLSP 6 bit 3; SPI
Configurable I/O
AW6
BLSP6_3
GPIO_21 P3
B
PD:nppukp
BLSP 6 bit 2; SPI
Configurable I/O
AV7
BLSP6_3
GPIO_22 P3
B
PD:nppukp
BLSP 6 bit 1; SPI, or I2C
Configurable I/O
BA2
BLSP6_3
GPIO_23 P3
B
PD:nppukp
BLSP 3 bit 0; SPI, or I2C
Configurable I/O
Serial peripheral interface (SPI) extra chip selects (supplements BLSP ports configured for SPI protocol) signals
AT9
BLSP1_SPI_CS3_N
GPIO_4 P3
B
PD:nppukp
BLSP 1 Chip select 3
Configurable I/O
AY1
BLSP2_SPI_CS3_N
GPIO_5 P3
B
PD:nppukp
BLSP 2Chip select 3
Configurable I/O
K7
BLSP1_SPI_CS2_N
GPIO_16 P3
B
PD:nppukp
BLSP 1 Chip select 2
Configurable I/O
G6
BLSP2_SPI_CS2_N
GPIO_17 P3
B
PD:nppukp
BLSP 2 Chip select 2
Configurable I/O
E4
BLSP3_SPI_CS2_N
GPIO_37 P3
B
PD:nppukp
BLSP 3 Chip select 2
Configurable I/O
L36
BLSP3_SPI_CS3_N
GPIO_69 P3
B
PD:nppukp
BLSP 3 Chip select 3
Configurable I/O
B39
BLSP1_SPI_CS1_N
GPIO_110 P3
B
PD:nppukp
BLSP 1 Chip select 1
Configurable I/O
Table 2-4 Pin descriptions – connectivity functions (cont.)
Pad # Pad name and/or
function
Pad name or
alt function
Pad characteristics
Functional description
Voltage Type
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 41
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Pin Definitions
BAM-enabled low-speed peripheral (BLSP)
The BAM integrates three serial bus cores: UART DM, SPI, and I2C. The SPI and I2C cores are,
in turn, integrated into a single core called the Qualcomm Unified Peripheral (QUP) where both
the subcores share the same FIFO. The UARTDM is integrated separately with its own FIFO. All
the cores share the same bus interface.
The external I/O ports of these cores are shared and only one of the cores can be used at any given
time. However, in the mode where UARTDM is used as a two-pin UART interface, the I2C, which
is also a two-pin interface, can be used simultaneously with UART functionality.
F39
BLSP3_SPI_CS1_N
GPIO_120 P3
B
PD:nppukp
BLSP 3 Chip select 1
Configurable I/O
G38
BLSP2_SPI_CS1_N
GPIO_121 P3
B
PD:nppukp
BLSP 2 Chip select 1
Configurable I/O
Audio clock
AW38
MI2S_MCLK
GPIO_116 P3
B
PD:nppukp
MI2S Master CLK signal
Configurable I/O
Audio MI2S interface #1
D39
MI2S_1_SCLK
GPIO_113 P3
B
PD:nppukp
MI2S SCLK signal
Configurable I/O
B39
MI2S_1_WS
GPIO_110 P3
B
PD:nppukp
MI2S Word Select signal
Configurable I/O
E40
MI2S_1_D0
GPIO_114 P3
B
PD:nppukp
MI2S Data0 signal
Configurable I/O
E38
MI2S_1_D1
GPIO_115 P3
B
PD:nppukp
MI2S Data1 signal
Configurable I/O
Audio MI2S interface #2
AR36
MI2S_2_SCLK
GPIO_118 P3
B
PD:nppukp
MI2S SCLK signal
Configurable I/O
AV37
MI2S_2_WS
GPIO_117 P3
B
PD:nppukp
MI2S Word Select signal
Configurable I/O
BA40
MI2S_2_D0
GPIO_119 P3
B
PD:nppukp
MI2S Data0 signal
Configurable I/O
AW36
MI2S_2_D1
GPIO_112 P3
B
PD:nppukp
MI2S Data1 signal
Configurable I/O
Digital MIC interface
BA38
DMIC0_CLK
GPIO_0 P3
DO
PD:nppukp
Digital MIC0 clock
Configurable I/O
BB39
DMIC0_DATA
GPIO_1 P3
B
PD:nppukp
Digital MIC0 data
Configurable I/O
Table 2-4 Pin descriptions – connectivity functions (cont.)
Pad # Pad name and/or
function
Pad name or
alt function
Pad characteristics
Functional description
Voltage Type
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 42
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Pin Definitions
The BLSP supports the following serial protocols:
 UART_DM
 I2C (master only), driven by QUP
 SPI, driven by QUP
Detailed pin assignments are presented in Table 2-5 and Table 2-6.
Table 2-5 BLSP alternate function configurations
Pad name Alternate function
GPIO[0] BLSP1_SPI_MOSI BLSP1_UART_TX
GPIO[1] BLSP1_SPI_MISO BLSP1_UART_RX
GPIO[2] BLSP1_SPI_CS_N BLSP1_UART_CTS_N BLSP1_I2C_SDA_A
GPIO[3] BLSP1_SPI_CLK BLSP1_UART_RFR_N BLSP1_I2C_SCL_A
GPIO[4] BLSP2_SPI_MOSI BLSP2_UART_TX
GPIO[5] BLSP2_SPI_MISO BLSP2_UART_RX
GPIO[6] BLSP2_SPI_CS_N BLSP2_UART_CTS_N BLSP2_I2C_SDA_A
GPIO[7] BLSP2_SPI_CLK BLSP2_UART_RFR_N BLSP2_I2C_SCL_A
GPIO[8] BLSP3_SPI_MOSI
GPIO[9] BLSP3_SPI_MISO
GPIO[10] BLSP3_SPI_CS_N BLSP3_I2C_SDA_A
GPIO[11] BLSP3_SPI_CLK BLSP2_I2C_SCL_A
GPIO[12] BLSP4_SPI_MOSI
GPIO[13 BLSP4_SPI_MISO
GPIO[14] BLSP4_SPI_CS_N BLSP4_I2C_SDA_A
GPIO[15] BLSP4_SPI_CLK BLSP4_I2C_SCL_A
GPIO[16] BLSP5_SPI_MOSI
GPIO[17] BLSP5_SPI_MISO
GPIO[18] BLSP5_SPI_CS_N BLSP5_I2C_SDA_B
GPIO[19] BLSP5_SPI_CLK BLSP5_I2C_SCL_B
GPIO[20] BLSP6_SPI_MOSI
GPIO[21] BLSP6_SPI_MISO
GPIO[22] BLSP6_SPI_CS_N BLSP6_I2C_SDA_A
GPIO[23] BLSP6_SPI_CLK BLSP6_I2C_SCL_A
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 43
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Pin Definitions
Table 2-6 BLSP internal pin mapping
Pin 4-pin UART I2C + GPIOs I2C + 2-pin UART 4-pin SPI 4 GPIOs
3 UART_TX_DATA GPIO_XX UART_TX_DATA SPI_MOSI_DATA GPIO_XX
2 UART_RX_DATA GPIO_XX UART_RX_DATA SPI_MISO_DATA GPIO_XX
1 UART_CTS_N I2C_DATA I2C_DATA SPI_CS_N GPIO_XX
0 UART_RFR_N I2C_CLK I2C_CLK SPI_CLK GPIO_XX
Table 2-7 Pin descriptions – internal functions
Pad # Pad name and/or
function
Pad name
or alt
function
Pad characteristics
Functional description
Voltage Type
JTAG interface
K1 SRST_N P3 PU JTAG reset for debug
M1 TCK P3 PU JTAG clock input
M3 TDI P3 PU:nppdkp JTAG data input
J2 TDO P3 - JTAG data output
L2 TMS P3 PU:nppdkp JTAG mode-select input
K3 TRST_N P3 PD JTAG reset
General Purpose Clocks, PDM, and related signals
AY7
GP_PDM_0A
GPIO_20 P3
DO
B-PD:nppukp
General-purpose PDM output 0A, 12-bit, XO/4 clock
Configurable I/O
AA38
GP_PDM_1A
GPIO_52 P3
DO
B-PD:nppukp
General-purpose PDM output 1A, 12-bit, XO/4 clock
Configurable I/O
AU4
GP_PDM_0B
GPIO_25 P3
DO
B-PD:nppukp
General-purpose PDM output 0B, 12-bit, XO/4 clock
Configurable I/O
AW6
GP_PDM_1B
GPIO_21 P3
DO
B-PD:nppukp
General-purpose PDM output 1B, 12-bit, XO/4 clock
Configurable I/O
A38
GP_PDM_2A
GPIO_98 P3
DO
B-PD:nppukp
General-purpose PDM output 2A, 12-bit, XO/4 clock
Configurable I/O
D39
GP_PDM_2B
GPIO_113 P3
DO
B-PD:nppukp
General-purpose PDM output 2B, 12-bit, XO/4 clock
Configurable I/O
D3
GP_CLK0
GPIO_31 P3
DO
B-PD:nppukp
General-purpose clock 0
Configurable I/O
D1
GP_CLK1
GPIO_32 P3
DO
B-PD:nppukp
General-purpose clock 1
Configurable I/O
Y37
GP_CLK_1A
GPIO_49 P4
DO
B-PD:nppukp
General-purpose clock 1A
Configurable I/O
AA34
GP_CLK_2A
GPIO_50 P4
DO
B-PD:nppukp
General-purpose clock 2A
Configurable I/O
Y35
GP_CLK_3A
GPIO_51 P4
DO
B-PD:nppukp
General-purpose clock 3A
Configurable I/O
C38
GP_CLK_1B
GPIO_97 P3
DO
B-PD:nppukp
General-purpose clock 1B
Configurable I/O
AM39
GP_CLK_2B
GPIO_12 P3
DO
B-PD:nppukp
General-purpose clock 2B
Configurable I/O
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 44
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Pin Definitions
AM35
GP_CLK_3B
GPIO_13 P3
DO
B-PD:nppukp
General-purpose clock 3B
Configurable I/O
B39
GP_MN
GPIO_110 P3
DO
B-PD:nppukp
General-purpose M/N:D counter output
Configurable I/O
Resets and mode controls
AU32 MODE_0 P3 DIS-PD Mode control bit 0, unconnected for native mode
AT31 MODE_1 P3 DIS-PD Mode control bit 1, unconnected for native mode
AV1 RESOUT_N P3 DO Reset output
E4
FORCED_USB_BOOT
GPIO[37] P3
DI
B-PD:nppukp
Force USB boot control
Configurable I/O
C38 BOOT_CONFIG[14]
GPIO[97] P3
 DI
B-PD:nppukp
Boot configuration control bit 14
Configurable I/O
BC34
BOOT_CONFIG[13]
GPIO[94] P3
DI
B-PD:nppukp
Boot configuration control bit 13
Configurable I/O
BD33
BOOT_CONFIG[12]
GPIO[93] P3
 DI
B-PD:nppukp
Boot configuration control bit 12
Configurable I/O
AY33
BOOT_CONFIG[11]
GPIO[92] P3
DI
B-PD:nppukp
Boot configuration control bit 11
Configurable I/O
BE38
BOOT_CONFIG[10]
GPIO[91] P3
 DI
B-PD:nppukp
Boot configuration control bit 10
Configurable I/O
BA32
BOOT_CONFIG[9]
GPIO[90] P3
DI
B-PD:nppukp
Boot configuration control bit 9
Configurable I/O
BD35
BOOT_CONFIG[8]
GPIO[89] P3
 DI
B-PD:nppukp
Boot configuration control bit 8
Configurable I/O
BB35
BOOT_CONFIG[7]
GPIO[88] P3
DI
B-PD:nppukp
Boot configuration control bit 7
Configurable I/O
BB37
BOOT_CONFIG[6]
GPIO[87] P3
DI
B-PD:nppukp
Boot configuration control bit 6
Configurable I/O
BD39
BOOT_CONFIG[5]
GPIO[86] P3
 DI
B-PD:nppukp
Boot configuration control bit 5
Configurable I/O
BC8
BOOT_CONFIG[4]
GPIO[84] P3
DI
B-PD:nppukp
Boot configuration control bit 4
Configurable I/O
BC40
BOOT_CONFIG[3]
GPIO[83] P3
 DI
B-PD:nppukp
Boot configuration control bit 3
Configurable I/O
BC38
BOOT_CONFIG[2]
GPIO[82] P3
DI
B-PD:nppukp
Boot configuration control bit 2
Configurable I/O
BD7
BOOT_CONFIG[1]
GPIO[81] P3
 DI
B-PD:nppukp
Boot configuration control bit 1
Configurable I/O
BD5
BOOT_CONFIG[0]
GPIO[80] P3
 DI
B-PD:nppukp
Boot configuration control bit 0
Configurable I/O
Table 2-7 Pin descriptions – internal functions (cont.)
Pad # Pad name and/or
function
Pad name
or alt
function
Pad characteristics
Functional description
Voltage Type
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 45
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Pin Definitions
Figure 2-3 GPIO ‘A/B’ multiplexing
Table 2-8 MSM8x16 wakeup pins for modem power management (MPM)
Pad # Pad name
Pad characteristics 1 Wakeup functional
description
Voltage Type
BB39 GPIO_1 P3 B-PD:nppukp General purpose wakeup
AY1 GPIO_5 P3 B-PD:nppukp General purpose wakeup
G2 GPIO_9 P3 B-PD:nppukp General purpose wakeup
E2 GPIO_11 P3 B-PD:nppukp General-purpose wakeup
AM39 GPIO_12 P3 B-PD:nppukp General-purpose wakeup
AM35 GPIO_13 P3 B-PD:nppukp General-purpose wakeup
AY7 GPIO_20 P3 B-PD:nppukp General-purpose wakeup
AW6 GPIO_21 P3 B-PD:nppukp General-purpose wakeup
AU4 GPIO_25 P3 B-PD:nppukp General-purpose wakeup
F1 GPIO_28 P3 B-PD:nppukp General-purpose wakeup
D3 GPIO_31 P3 B-PD:nppukp General-purpose wakeup
F5 GPIO_34 P3 B-PD:nppukp General-purpose wakeup
A4 GPIO_35 P3 B-PD:nppukp General-purpose wakeup
C4 GPIO_36 P3 B-PD:nppukp General-purpose wakeup
GP_PDM_2
GP_PDM_1
GP_PDM_0
others
others
others
GP_PDM_0B
GP_PDM_1B
GP_PDM_2B
A
B
A
B
A
B
others
others
others
GP_PDM_0A
GP_PDM_1A
GP_PDM_2A
GPIO functions with output options like
‘A’, ‘B’, etc use the same core circuits
Core
circuits
These options are created by output
multiplexing
Software must select just one output
(such as the ‘A’ output or the ‘B’
output); multiple outputs for the same
function are not available
simultaneously
Multiple options are provided to
increase GPIO assignment flexibility
Multiple output options are available
for the following functions:
GP_PDM signals
are an example
GP_PDM_2
GP_PDM_1
GP_PDM_0
GP_CLK_3
GP_CLK_2
GP_CLK_1
QDSS trace (16 bits, clock, control, trigger in, and trigger out)
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 46
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Pin Definitions
E4 GPIO_37 P3 B-PD:nppukp General-purpose wakeup
B37 GPIO_38 P3 B-PD:nppukp General-purpose wakeup
Y37 GPIO_49 P4 B-PD:nppukp General-purpose wakeup
AA34 GPIO_50 P4 B-PD:nppukp General-purpose wakeup
Y35 GPIO_51 P4 B-PD:nppukp General-purpose wakeup
AA38 GPIO_52 P3 B-PD:nppukp General-purpose wakeup
K39 GPIO_54 P3 B-PD:nppukp General-purpose wakeup
G34 GPIO_62 P3 B-PD:nppukp General-purpose wakeup
AJ38 GPIO_66 P3 B-PD:nppukp General-purpose wakeup
AL40 GPIO_68 P3 B-PD:nppukp General-purpose wakeup
L36 GPIO_69 P3 B-PD:nppukp General-purpose wakeup
C38 GPIO_97 P3 B-PD:nppukp General-purpose wakeup
A38 GPIO_98 P3 B-PD:nppukp General-purpose wakeup
H33 GPIO_107 P3 B-PD:nppukp General-purpose wakeup
K35 GPIO_108 P3 B-PD:nppukp General-purpose wakeup
J34 GPIO_109 P3 B-PD:nppukp General-purpose wakeup
B39 GPIO_110 P3 B-PD:nppukp General-purpose wakeup
C40 GPIO_111 P3 B-PU:nppukp General-purpose wakeup
AW36 GPIO_112 P3 B-PD:nppukp General-purpose wakeup
D39 GPIO_113 P3 B-PD:nppukp General-purpose wakeup
E40 GPIO_114 P3 B-PD:nppukp General-purpose wakeup
E38 GPIO_115 P3 B-PD:nppukp General-purpose wakeup
AV37 GPIO_117 P3 B-PD:nppukp General-purpose wakeup
AR36 GPIO_118 P3 B-PD:nppukp General-purpose wakeup
F39 GPIO_120 P3 B-PD:nppukp General-purpose wakeup
G38 GPIO_121 P3 B-PD:nppukp General-purpose wakeup
AE38 SDC1_DATA_1 P7 BH-PD:nppukp SDIO wakeup
AH37 SDC1_DATA_3 P7 BH-PD:nppukp SD card detect
R6 SDC2_DATA_1 P2 BH-PD:nppukp SDIO wakeup
P7 SDC2_DATA_3 P2 BH-PD:nppukp SD card detect
K1 SRST_N P3 DI JTAG
1. Refer to Table 2-1 for parameter and acronym definitions.
Table 2-8 MSM8x16 wakeup pins for modem power management (MPM) (cont.)
Pad # Pad name
Pad characteristics 1 Wakeup functional
description
Voltage Type
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 47
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Pin Definitions
Table 2-9 Pin descriptions – chipset interface functions
Pad # Pad name and/or
function
Pad name or
alt function
Pad characteristics
Functional description
Voltage Type
RFIC – Rx baseband interfaces
BD21 BBRX_IM_CH0 - AI Baseband receiver input, in-phase minus, channel 0
AY19 BBRX_IM_CH1 - AI Baseband receiver input, in-phase minus, channel 1
BC16 BBRX_IM_CH2 - AI Baseband receiver input, in-phase minus, channel 2
BB21 BBRX_IP_CH0 - AI Baseband receiver input, in-phase plus, channel 0
BA20 BBRX_IP_CH1 - AI Baseband receiver input, in-phase plus, channel 1
BB15 BBRX_IP_CH2 - AI Baseband receiver input, in-phase plus, channel 2
BE20 BBRX_QM_CH0 - AI Baseband receiver input, quadrature minus, channel 0
BA18 BBRX_QM_CH1 - AI Baseband receiver input, quadrature minus, channel 1
BE14 BBRX_QM_CH2 - AI Baseband receiver input, quadrature minus, channel 2
BC20 BBRX_QP_CH0 - AI Baseband receiver input, quadrature plus, channel 0
BB17 BBRX_QP_CH1 - AI Baseband receiver input, quadrature plus, channel 1
BD15 BBRX_QP_CH2 - AI Baseband receiver input, quadrature plus, channel 2
RFIC – GNSS Rx baseband interface
BE12 GNSS_BB_IP - AI GNSS receiver baseband input, in-phase plus
BD11 GNSS_BB_IM - AI GNSS receiver baseband input, in-phase minus
BC14 GNSS_BB_QP - AI GNSS receiver baseband input, quadrature plus
BB13 GNSS_BB_QM - AI GNSS receiver baseband input, quadrature minus
RFIC – Tx baseband interfaces
BA26 TX_DAC0_IM - AO Transmitter DAC 0 output, in-phase minus
AY27 TX_DAC0_IP - AO Transmitter DAC 0 output, in-phase plus
AU26 TX_DAC0_IREF - AI Transmitter DAC 0 current reference
BE26 TX_DAC0_QM - AO Transmitter DAC 0 output, quadrature minus
BD25 TX_DAC0_QP - AO Transmitter DAC 0 output, quadrature plus
AR26 TX_DAC0_VREF - AI Transmitter DAC 0 voltage reference
BE24 TX_DAC1_IM - AO Transmitter DAC 1 output, in-phase minus
BC24 TX_DAC1_IP - AO Transmitter DAC 1 output, in-phase plus
AT23 TX_DAC1_IREF - AI Transmitter DAC 1 current reference
AY23 TX_DAC1_QM - AO Transmitter DAC 1 output, quadrature minus
BB23 TX_DAC1_QP - AO Transmitter DAC 1 output, quadrature plus
AU22 TX_DAC1_VREF - AI Transmitter DAC 1 voltage reference
RFIC – GSM transmit phase adjust signals
BE34
GSM0_TX_PHASE_D0
GPIO_99 P3
DO-Z
B-PD:nppukp
GSM0 transmit phase adjust data bit 0
Configurable I/O
BE36
GSM0_TX_PHASE_D1
GPIO_100 P3
DO-Z
B-PD:nppukp
GSM0 transmit phase adjust data bit 1
Configurable I/O
BB33
GSM1_TX_PHASE_D0
GPIO_101 P3
DO-Z
B-PD:nppukp
GSM1 transmit phase adjust data bit 0
Configurable I/O
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 48
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Pin Definitions
BE32
GSM1_TX_PHASE_D1
GPIO_102 P3
DO-Z
B-PD:nppukp
GSM1 transmit phase adjust data bit 1
Configurable I/O
RFIC – status and control signals
AT35
SSBI_WTR0_RX
GPIO_103 P3
B
B-PD:nppukp
WTR0 receivers single-wire serial bus interface
Configurable I/O
AW40
SSBI_WTR0_TX
GPIO_104 P3
B
B-PD:nppukp
WTR0 transmitters single-wire serial bus interface
Configurable I/O
AU36
SSBI_WTR1_RX
GPIO_105 P3
B
B-PD:nppukp
WTR1 receivers single-wire serial bus interface
Configurable I/O
AY39
SSBI_WTR1_TX
GPIO_106 P3
B
B-PD:nppukp
WTR1 transmitters single-wire serial bus interface
Configurable I/O
WCN – WLAN signals
BD3
WLAN_DATA0
GPIO_42 P3
B
B-PD:nppukp
WLAN data bit 0
Configurable I/O
BB1
WLAN_DATA1
GPIO_41 P3
B
B-PD:nppukp
WLAN data bit 1
Configurable I/O
BB5
WLAN_DATA2
GPIO_40 P3
B
B-PD:nppukp
WLAN data bit 2
Configurable I/O
BB3
WLAN_CLK
GPIO_44 P3
DO-Z
B-PD:nppukp
WLAN Clock
Configurable I/O
BA6
WLAN_SET
GPIO_43 P3
DO-Z
B-PD:nppukp
WLAN Set
Configurable I/O
AR14 WLAN_BB_IM - AI, AO WLAN baseband Rx/Tx switched, in-phase minus
AP15 WLAN_BB_IP - AI, AO WLAN baseband Rx/Tx switched, in-phase plus
AP13 WLAN_BB_QM - AI, AO WLAN baseband Rx/Tx switched, quadrature minus
AR12 WLAN_BB_QP - AI, AO WLAN baseband Rx/Tx switched, quadrature plus
AU14 WLAN_REXT - AI WLAN external resistor
AR8 WLAN_XO - DI WLAN clock
WCN – Bluetooth signals
AW8
BT_DATA
GPIO_48 P3
B
B-PD:nppukp
Bluetooth dual-function signal – serial data and strobe
Configurable I/O
BA4
BT_CTL
GPIO_47 P3
DO
B-PD:nppukp
Bluetooth control
Configurable I/O
BC2
BT_SSBI
GPIO_39 P3
B
B-PD:nppukp
Bluetooth single-wire serial bus interface
Configurable I/O
WCN – FM signals
AY9
FM_DATA
GPIO_46 P3
B
B-PD:nppukp
FM radio serial data interface
Configurable I/O
AY5
FM_SSBI
GPIO_45 P3
B
B-PD:nppukp
FM radio single-wire serial bus interface
Configurable I/O
Table 2-9 Pin descriptions – chipset interface functions (cont.)
Pad # Pad name and/or
function
Pad name or
alt function
Pad characteristics
Functional description
Voltage Type
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 49
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Pin Definitions
PMIC interfaces
AK37 PMIC_SPMI_CLK P3 DO Slave and PBUS interface for PMICs – clock
AJ36 PMIC_SPMI_DATA P3 B Slave and PBUS interface for PMICs – data
E36 PS_HOLD P3 DO Power-supply hold signal to PMIC
F35 RESIN_N P3 DI Reset input
G36 SLEEP_CLK P3 DI Sleep clock
AL34 CXO P3 DI Core crystal oscillator (system clock at 19.2 MHz
A36 CXO_EN P3 DO Core crystal oscillator enable
General RF control (GRFC) signals
AP37
GRFC_0
GPIO_74 P3
B
PD:nppukp
Generic RF controller bit 0
Configurable I/O
AV39
GRFC_1
GPIO_75 P3
B
PD:nppukp
Generic RF controller bit 1
Configurable I/O
AP35
GRFC_2
GPIO_76 P3
B
PD:nppukp
Generic RF controller bit 2
Configurable I/O
BC4
GRFC_3
GPIO_77 P3
B
PD:nppukp
Generic RF controller bit 3
Configurable I/O
BE4
GRFC_4
GPIO_78 P3
B
PD:nppukp
Generic RF controller bit 4
Configurable I/O
BC6
GRFC_5
GPIO_79 P3
B
PD:nppukp
Generic RF controller bit 5
Configurable I/O
BD5
GRFC_6
GPIO_80 P3
B
PD:nppukp
Generic RF controller bit 6
Configurable I/O
BD7
GRFC_7
GPIO_81 P3
B
PD:nppukp
Generic RF controller bit 7
Configurable I/O
BC38
GRFC_8
GPIO_82 P3
B
PD:nppukp
Generic RF controller bit 8
Configurable I/O
BC40
GRFC_9
GPIO_83 P3
B
PD:nppukp
Generic RF controller bit 9
Configurable I/O
BC8
GRFC_10
GPIO_84 P3
B
PD:nppukp
Generic RF controller bit 10
Configurable I/O
BE6
GRFC_11
GPIO_85 P3
B
PD:nppukp
Generic RF controller bit 11
Configurable I/O
BD39
GRFC_12
GPIO_86 P3
B
PD:nppukp
Generic RF controller bit 12
Configurable I/O
BB37
GRFC_13
GPIO_87 P3
B
PD:nppukp
Generic RF controller bit 13
Configurable I/O
BB35
GRFC_14
GPIO_88 P3
B
PD:nppukp
Generic RF controller bit 14
Configurable I/O
BD35
GRFC_15
GPIO_89 P3
B
PD:nppukp
Generic RF controller bit 15
Configurable I/O
Table 2-9 Pin descriptions – chipset interface functions (cont.)
Pad # Pad name and/or
function
Pad name or
alt function
Pad characteristics
Functional description
Voltage Type
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 50
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Pin Definitions
BA32
GRFC_16
GPIO_90 P3
B
PD:nppukp
Generic RF controller bit 16
Configurable I/O
BE38
GRFC_17
GPIO_91 P3
B
PD:nppukp
Generic RF controller bit 17
Configurable I/O
AY33
GRFC_18
GPIO_92 P3
B
PD:nppukp
Generic RF controller bit 18
Configurable I/O
BD33
GRFC_19
GPIO_93 P3
B
PD:nppukp
Generic RF controller bit 19
Configurable I/O
BC34
GRFC_20
GPIO_94 P3
B
PD:nppukp
Generic RF controller bit 20
Configurable I/O
BB31
GRFC_21
GPIO_95 P3
B
PD:nppukp
Generic RF controller bit 21
Configurable I/O
Qualcomm RFFE interfaces
AN38
RFFE1_CLK
GPIO_70 P3
DO
PD:nppukp
RF front end clock 1
Configurable I/O
AR38
RFFE1_DATA
GPIO_71 P3
B
PD:nppukp
RF front end data 1
Configurable I/O
AT39
RFFE2_CLK
GPIO_72 P3
DO
PD:nppukp
RF front end clock 2
Configurable I/O
AU40
RFFE2_DATA
GPIO_73 P3
B
PD:nppukp
RF front end data 2
Configurable I/O
AP37
RFFE3_CLK
GPIO_74 P3
DO
PD:nppukp
RF front end clock 3
Configurable I/O
AP35
RFFE3_DATA
GPIO_76 P3
B
PD:nppukp
RF front end data 3
Configurable I/O
AU36
RFFE4_CLK
GPIO_105 P3
DO
PD:nppukp
RF front end clock 4
Configurable I/O
AY39
RFFE4_DATA
GPIO_106 P3
B
PD:nppukp
RF front end data 4
Configurable I/O
AT35
RFFE5_CLK
GPIO_103 P3
DO
PD:nppukp
RF front end clock 5
Configurable I/O
AW40
RFFE5_DATA
GPIO_104 P3
B
PD:nppukp
RF front end data 5
Configurable I/O
GPS Control
BC32
EXT_GPS_LNA_EN
GPIO_96 P3
DO
PD:nppukp
EXT_GPS_LNA_EN
Configurable I/O
Table 2-9 Pin descriptions – chipset interface functions (cont.)
Pad # Pad name and/or
function
Pad name or
alt function
Pad characteristics
Functional description
Voltage Type
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 51
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Pin Definitions
Table 2-10 Pin descriptions – general-purpose input/output ports
Pad # Pad name Configurable function
Pad characteristics
Functional description
Voltage Type
BA38 GPIO_0
BLSP1_3
DMIC0_CLK
P3 B-PD:nppukp
B
DO
Configurable I/O
BLSP #1, bit 3; UART or SPI
Digital MIC0 clock
BB39 GPIO_1
BLSP1_2
DMIC0_DATA
P3 B-PD:nppukp
B
DI
Configurable I/O
BLSP #1, bit 2; UART or SPI
Digital MIC0 data
AV35 GPIO_2
BLSP1_1
P3 B-PD:nppukp
B
Configurable I/O
BLSP #1, bit 1; UART, SPI or I2C
AY37 GPIO_3
BLSP1_0
P3 B-PD:nppukp
B
Configurable I/O
BLSP #1, bit 0; UART, SPI or I2C
AT9 GPIO_4
BLSP2_3
BLSP1_SPI_CS3_N
P3 B-PD:nppukp
B
DO
Configurable I/O
BLSP #2, bit 3; UART or SPI
Chip select 3 for SPI on BLSP1
AY1 GPIO_5
BLSP2_2
BLSP2_SPI_CS3_N
P3 B-PD:nppukp
B
DO
Configurable I/O
BLSP #2, bit 2; UART or SPI
Chip select 3 for SPI on BLSP2
AY3 GPIO_6
BLSP2_1
P3 B-PD:nppukp
B
Configurable I/O
BLSP #2, bit 1; UART, SPI, or I2C
AV3 GPIO_7
BLSP2_0
P3 B-PD:nppukp
B
Configurable I/O
BLSP #2, bit 0; UART, SPI, or I2C
H5 GPIO_8
BLSP3_3
P3 B-PD:nppukp
B
Configurable I/O
BLSP #3, bit 3; SPI, or I2C
G2 GPIO_9
BLSP3_2
P3 B-PD:nppukp
B
Configurable I/O
BLSP #3, bit 2; SPI, or I2C
H1 GPIO_10
BLSP3_1
P3 B-PD:nppukp
B
Configurable I/O
BLSP #3, bit 1; SPI, or I2C
E2 GPIO_11
BLSP3_0
P3 B-PD:nppukp
B
Configurable I/O
BLSP #3, bit 0; SPI, or I2C
AM39 GPIO_12
BLSP4_3
GP_CLK_2B
P3 B-PD:nppukp
B
DO
Configurable I/O
BLSP #4, bit 3; SPI, or I2C
General-purpose clock output 2B
AM35 GPIO_13
BLSP4_2
GP_CLK_3B
P3 B-PD:nppukp
B
DO
Configurable I/O
BLSP #4, bit 2; SPI, or I2C
General-purpose clock output 3B
AN40 GPIO_14
BLSP4_1
P3 B-PD:nppukp
B
Configurable I/O
BLSP #4, bit 1; SPI, or I2C
AN36 GPIO_15
BLSP4_0
P3 B-PD:nppukp
B
Configurable I/O
BLSP #4, bit 0; SPI, or I2C
K7 GPIO_16
BLSP5_3
BLSP1_SPI_CS2_N
P3 B-PD:nppukp
B
DO
Configurable I/O
BLSP #5, bit 3; SPI, or I2C
Chip select 2 for SPI on BLSP1
G6 GPIO_17
BLSP5_2
BLSP2_SPI_CS2_N
P3 B-PD:nppukp
B
DO
Configurable I/O
BLSP #5, bit 2; SPI, or I2C
Chip select 2 for SPI on BLSP1
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 52
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Pin Definitions
J6 GPIO_18
BLSP5_1
P3 B-PD:nppukp
B
Configurable I/O
BLSP #5, bit 1; SPI, or I2C
J4 GPIO_19
BLSP5_0
P3 B-PD:nppukp
B
Configurable I/O
BLSP #5, bit 0; SPI, or I2C
AY7 GPIO_20
BLSP6_3
GP_PDM_0A
P3 B-PD:nppukp
B
DO
Configurable I/O
BLSP #6, bit 3; SPI, or I2C
General-purpose PDM output 0A, 12-bit,
XO/4 clock
AW6 GPIO_21
BLSP6_2
GP_PDM_1B
P3 B-PD:nppukp
B
DO
Configurable I/O
BLSP #6, bit 2; SPI, or I2C
General-purpose PDM output 1B, 12-bit,
XO/4 clock
AV7 GPIO_22
BLSP6_1
P3 B-PD:nppukp
B
Configurable I/O
BLSP #6, bit 1; SPI, or I2C
BA2 GPIO_23
BLSP6_0
P3 B-PD:nppukp
B
Configurable I/O
BLSP #6, bit 0; SPI, or I2C
AT5 GPIO_24
MDP_VSYNC_P
P3 B-PD:nppukp
DI
Configurable I/O
MDP vertical sync – primary
AU4 GPIO_25
DSI_RST_N
GP_PDM_0B
P3 B-PD:nppukp
DO
DO
Configurable I/O
Display reset
General-purpose PDM output 0B, 12-bit,
XO/4 clock
H3 GPIO_26
CAM_MCLK0
P3 B-PD:nppukp
DO
Configurable I/O
Camera master clock 0
C2 GPIO_27
CAM_MCLK1
P3 B-PD:nppukp
DO
Configurable I/O
Camera master clock 1
F1 GPIO_28
CAM1_RST_N
P3 B-PD:nppukp
DO
Configurable I/O
Camera 1 (front camera) reset
B3 GPIO_29
CAM_I2C_SDA
P3 B-PD:nppukp
B
Configurable I/O
Camera control interface I2C 0 serial data
F3 GPIO_30
CAM_I2C_SCL
P3 B-PD:nppukp
B
Configurable I/O
Camera control interface I2C 0 serial Clock
D3 GPIO_31
CCI_TIMER0
GP_CLK0
P3 B-PD:nppukp
DO
DO
Configurable I/O
Camera control interface timer 0
General-purpose clock 0
D1 GPIO_32
CCI_TIMER1
GP_CLK1
P3 B-PD:nppukp
DO
DO
Configurable I/O
Camera control interface timer 1
General-purpose clock 1
G4 GPIO_33
CCI_ASYNC0
P3 B-PD:nppukp
DI
Configurable I/O
Camera control interface async 0
F5 GPIO_34
CAM0_STANDBY_N
P3 B-PD:nppukp
DO
Configurable I/O
Camera 0 (rear camera) standby
A4 GPIO_35
CAM0_RST_N
P3 B-PD:nppukp
DO
Configurable I/O
Camera 0 (rear camera) reset
Table 2-10 Pin descriptions – general-purpose input/output ports (cont.)
Pad # Pad name Configurable function
Pad characteristics
Functional description
Voltage Type
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 53
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Pin Definitions
C4 GPIO_36
FLASH_LED_RESET
P3 B-PD:nppukp
DO
Configurable I/O
LED Flash reset
E4 GPIO_37
BLSP3_SPI_CS2_N
FORCED_USB_BOOT
P3 B-PD:nppukp
DO
DI
Configurable I/O
Chip select 2 for SPI on BLSP3
Force USB boot control
B37 GPIO_38
SD_CARD_DET_N
CCI_TIMER2
P3 B-PD:nppukp
DI
DO
Configurable I/O
Secure digital card detection
Camera control interface timer 2
BC2 GPIO_39
BT_SSBI
P3 B-PD:nppukp
B
Configurable I/O
Bluetooth single-wire serial bus interface
BB5 GPIO_40
WLAN_DATA2
P3 B-PD:nppukp
B
Configurable I/O
WLAN data bit 2
BB1 GPIO_41
WLAN_DATA1
P3 B-PD:nppukp
B
Configurable I/O
WLAN data bit 1
BD3 GPIO_42
WLAN_DATA0
P3 B-PD:nppukp
B
Configurable I/O
WLAN data bit 0
BA6 GPIO_43
WLAN_SET
P3 B-PD:nppukp
DO-Z
Configurable I/O
WLAN set
BB3 GPIO_44
WLAN_CLK
P3 B-PD:nppukp
DO-Z
Configurable I/O
WLAN clock
AY5 GPIO_45
FM_SSBI
P3 B-PD:nppukp
B
Configurable I/O
FM-radio SSBI
AY9 GPIO_46
FM_DATA
P3 B-PD:nppukp
B
Configurable I/O
FM radio serial data interface
BA4 GPIO_47
BT_CTL
P3 B-PD:nppukp
DO
Configurable I/O
Bluetooth control
AW8 GPIO_48
BT_DATA
P3 B-PD:nppukp
B
Configurable I/O
Bluetooth dual function: data and strobe
Y37 GPIO_49
UIM3_DATA
GP_CLK_1A
P4 B-PD:nppukp
B
DO
Configurable I/O
UIM3 data
General-purpose clock output 1A
AA34 GPIO_50
UIM3_CLK
GP_CLK_2A
P4 B-PD:nppukp
DO
DO
Configurable I/O
UIM3 clock
General-purpose clock output 2A
Y35 GPIO_51
UIM3_RST
GP_CLK_3A
P4 B-PD:nppukp
DO
DO
Configurable I/O
UIM3 reset
General-purpose clock output 3A
AA38 GPIO_52
UIM3_PRESENT
GP_PDM_1A
P3 B-PD:nppukp
DI
DO
Configurable I/O
UIM3 removal detection
General-purpose PDM output 1A, 12-bit,
XO/4 clock
L40 GPIO_53
UIM2_DATA
P6 B-PD:nppukp
B
Configurable I/O
UIM2 data
K39 GPIO_54
UIM2_CLK
P6 B-PD:nppukp
DO
Configurable I/O
UIM2 clock
Table 2-10 Pin descriptions – general-purpose input/output ports (cont.)
Pad # Pad name Configurable function
Pad characteristics
Functional description
Voltage Type
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 54
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Pin Definitions
H39 GPIO_55
UIM2_RST
P6 B-PD:nppukp
DO
Configurable I/O
UIM2 reset
AA36 GPIO_56
UIM2_PRESENT
P3 B-PD:nppukp
DI
Configurable I/O
UIM2 removal detection
G40 GPIO_57
UIM1_DATA
P5 B-PD:nppukp
B
Configurable I/O
UIM1 data
J40 GPIO_58
UIM1_CLK
P5 B-PD:nppukp
DO
Configurable I/O
UIM1 clock
L38 GPIO_59
UIM1_RST
P5 B-PD:nppukp
DO
Configurable I/O
UIM1 reset
Y39 GPIO_60
UIM1_PRESENT
P3 B-PD:nppukp
DI
Configurable I/O
UIM1 removal detection
AL38 GPIO_61
UIM_BATT_ALARM
P3 B-PD:nppukp
DI
Configurable I/O
UIM battery alarm
G34 GPIO_62
SMB_INT
P3 B-PD:nppukp
DI
Configurable I/O
SMB interrupt
AJ40 GPIO_63
CDC_PDM0_CLK
P3 B-PD:nppukp
DO
Configurable I/O
PDM0 Clock
AH39 GPIO_64
CDC_PDM0_SYNC
P3 B-PD:nppukp
DO
Configurable I/O
PDM0 sync signal
AK39 GPIO_65
CDC_PDM0_TX0
P3 B-PD:nppukp
DI
Configurable I/O
PDM0 Transmit signal 0
AJ38 GPIO_66
CDC_PDM0_RX0
P3 B-PD:nppukp
DO
Configurable I/O
PDM0 Receive signal 0
AK35 GPIO_67
CDC_PDM0_RX1
P3 B-PD:nppukp
DO
Configurable I/O
PDM0 Receive signal 1
AL40 GPIO_68
CDC_PDM0_RX2
P3 B-PD:nppukp
DO
Configurable I/O
PDM0 Receive signal 2
L36 GPIO_69
MAG_INT
BLSP3_SPI_CS3_N
P3 B-PD:nppukp
DI
DO
Configurable I/O
magnetometer interrupt
Chip select 3 for SPI on BLSP3
AN38 GPIO_70
RFFE1_CLK
P3 B-PD:nppukp
DO
Configurable I/O
RF front end clock 1
AR38 GPIO_71
RFFE1_DATA
P3 B-PD:nppukp
B
Configurable I/O
RF front end data 1
AT39 GPIO_72
RFFE2_CLK
P3 B-PD:nppukp
DO
Configurable I/O
RF front end clock 2
AU40 GPIO_73
RFFE2_DATA
P3 B-PD:nppukp
B
Configurable I/O
RF front end data 2
AP37 GPIO_74
GRFC_0
PA_ON0
RFFE3_CLK
P3 B-PD:nppukp
DO
DO
DO
Configurable I/O
Generic RF controller bit 0
Power amplifier enable 0; only high for Tx
RF front end clock 3
Table 2-10 Pin descriptions – general-purpose input/output ports (cont.)
Pad # Pad name Configurable function
Pad characteristics
Functional description
Voltage Type
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 55
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Pin Definitions
AV39 GPIO_75
GRFC_1
PA_ON1
P3 B-PD:nppukp
DO
DO
Configurable I/O
Generic RF controller bit 1
Power amplifier enable 1; only high for Tx
AP35 GPIO_76
GRFC_2
PA_ON2
RFFE3_DATA
P3 B-PD:nppukp
DO
DO
B
Configurable I/O
Generic RF controller bit 2
Power amplifier enable 2; only high for Tx
RF front end data 3
BC4 GPIO_77
GRFC_3
PA_ON3
P3 B-PD:nppukp
DO
DO
Configurable I/O
Generic RF controller bit 3
Power amplifier enable 3; only high for Tx
BE4 GPIO_78
GRFC_4
PA_ON4
P3 B-PD:nppukp
DO
DO
Configurable I/O
Generic RF controller bit 4
Power amplifier enable 4; only high for Tx
BC6 GPIO_79
GRFC_5
PA_ON5
P3 B-PD:nppukp
DO
DO
Configurable I/O
Generic RF controller bit 5
Power amplifier enable 5; only high for Tx
BD5 GPIO_80
GRFC_6
BOOT_CONFIG_0 (WDOG_
DISABLE)
P3 B-PD:nppukp
DO
DI
Configurable I/O
Generic RF controller bit 6
Boot configuration control bit 0
BD7 GPIO_81
GRFC_7
BOOT_CONFIG_1
P3 B-PD:nppukp
DO
DI
Configurable I/O
Generic RF controller bit 7
Boot configuration control bit 1
BC38 GPIO_82
GRFC_8
BOOT_CONFIG_2
PA0_RANGE0
P3 B-PD:nppukp
DO
DI
DO
Configurable I/O
Generic RF controller bit 8
Boot configuration control bit 2
PA set 0 range control bit 0
BC40 GPIO_83
GRFC_9
BOOT_CONFIG_3
PA0_RANGE1
P3 B-PD:nppukp
DO
DI
DO
Configurable I/O
Generic RF controller bit 9
Boot configuration control bit 3
PA set 0 range control bit 1
BC8 GPIO_84
GRFC_10
BOOT_CONFIG_4
P3 B-PD:nppukp
DO
DI
Configurable I/O
Generic RF controller bit 10
Boot configuration control bit 4
BE6 GPIO_85
GRFC_11
SDC1_EMMC_1P2_EN
P3 B-PD:nppukp
DO
DI
Configurable I/O
Generic RF controller bit 11
Enables 1.2 V I/O for eMMC on SDC1
BD39 GPIO_86
GRFC_12
BOOT_CONFIG_5
P3 B-PD:nppukp
DO
DI
Configurable I/O
Generic RF controller bit 12
Boot configuration control bit 5
BB37 GPIO_87
GRFC_13
BOOT_CONFIG_6
P3 B-PD:nppukp
DO
DI
Configurable I/O
Generic RF controller bit 13
Boot configuration control bit 6
BB35 GPIO_88
GRFC_14
PA1_RANGE0
BOOT_CONFIG_7
P3 B-PD:nppukp
DO
DO
DI
Configurable I/O
Generic RF controller bit 14
PA set 1 range control bit 0
Boot configuration control bit 7
Table 2-10 Pin descriptions – general-purpose input/output ports (cont.)
Pad # Pad name Configurable function
Pad characteristics
Functional description
Voltage Type
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 56
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Pin Definitions
BD35 GPIO_89
GRFC_15
PA1_RANGE1
BOOT_CONFIG_8
P3 B-PD:nppukp
DO
DO
DI
Configurable I/O
Generic RF controller bit 15
PA set 1 range control bit 1
Boot configuration control bit 8
BA32 GPIO_90
GRFC_16
BOOT_CONFIG_9
P3 B-PD:nppukp
DO
DI
Configurable I/O
Generic RF controller bit 16
Boot configuration control bit 9
BE38 GPIO_91
GRFC_17
BOOT_CONFIG_10
P3 B-PD:nppukp
DO
DI
Configurable I/O
Generic RF controller bit 17
Boot configuration control bit 10
AY33 GPIO_92
GRFC_18
BOOT_CONFIG_11
P3 B-PD:nppukp
DO
DI
Configurable I/O
Generic RF controller bit 18
Boot configuration control bit 11
BD33 GPIO_93
GRFC_19
BOOT_CONFIG_12
P3 B-PD:nppukp
DO
DI
Configurable I/O
Generic RF controller bit 19
Boot configuration control bit 12
BC34 GPIO_94
GRFC_20
BOOT_CONFIG_13
P3 B-PD:nppukp
DO
DI
Configurable I/O
Generic RF controller bit 20
Boot configuration control bit 13
BB31 GPIO_95
GRFC_21
P3 B-PD:nppukp
DO
Configurable I/O
Generic RF controller bit 21
BC32 GPIO_96
EXT_GNSS_LNA_EN
GRFC_24
P3 B-PD:nppukp
DO
DO
Configurable I/O
External GNSS LNA enable
Generic RF controller bit 24
C38 GPIO_97
LCD_DRIVER_5V_EN
GP_CLK_1B
BOOT_CONFIG_14
P3 B-PD:nppukp
DO
DO
DI
Configurable I/O
5 V display driver enable
General-purpose clock output 1B
Boot configuration control bit 14
A38 GPIO_98
LCD_BL_EN
GP_PDM_2A
P3 B-PD:nppukp
DO
DO
Configurable I/O
Display backlight enable
General-purpose PDM 2A output
BE34 GPIO_99
GSM0_TX_PHASE_D0
P3 B-PD:nppukp
DO-Z
Configurable I/O
GSM0 transmit phase adjust data bit 0
BE36 GPIO_100
GSM0_TX_PHASE_D1
P3 B-PD:nppukp
DO-Z
Configurable I/O
GSM0 transmit phase adjust data bit 1
BB33 GPIO_101
GSM1_TX_PHASE_D0
P3 B-PD:nppukp
DO-Z
Configurable I/O
GSM1 transmit phase adjust data bit 0
BE32 GPIO_102
GSM1_TX_PHASE_D1
P3 B-PD:nppukp
DO-Z
Configurable I/O
GSM1 transmit phase adjust data bit 1
AT35 GPIO_103
SSBI_WTR0_RX
RFFE5_CLK
P3 B-PD:nppukp
B
DO
Configurable I/O
WTR0 receivers single-wire serial bus IF
RF front end clock 5
AW40 GPIO_104
SSBI_WTR0_TX
RFFE5_DATA
P3 B-PD:nppukp
B
DO
Configurable I/O
WTR0 transmitters single-wire serial bus IF
RF front end DATA 5
Table 2-10 Pin descriptions – general-purpose input/output ports (cont.)
Pad # Pad name Configurable function
Pad characteristics
Functional description
Voltage Type
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 57
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Pin Definitions
AU36 GPIO_105
SSBI_WTR1_RX
RFFE4_CLK
P3 B-PD:nppukp
B
DO
Configurable I/O
WTR1 receivers single-wire serial bus IF
RF front end clock 4
AY39 GPIO_106
SSBI_WTR1_TX
RFFE4_DATA
P3 B-PD:nppukp
B
DO
Configurable I/O
WTR1 transmitters single-wire serial bus IF
RF front end DATA 4
H33 GPIO_107
KYPD_SNS0
P3 B-PD:nppukp
DI
Configurable I/O
Keypad sense bit 0
K35 GPIO_108
KYPD_SNS1
P3 B-PD:nppukp
DI
Configurable I/O
Keypad sense bit 1
J34 GPIO_109
KYPD_SNS2
P3 B-PD:nppukp
DI
Configurable I/O
Keypad sense bit 2
B39 GPIO_110
BLSP1_SPI_CS1_N
MI2S_1_WS
GP_MN
USB_HS_ID
P3 B-PD:nppukp
DO
B
DO
AI
Configurable I/O
Chip select 1 for SPI on BLSP1
MI2S #1 word select (L/R)
General-purpose M/N:D counter output
USB ID pin for host mode detection
C40 GPIO_111 P3 B-PU:nppukp Configurable I/O
AW36 GPIO_112
MI2S_2_D1
P3 B-PD:nppukp
B
Configurable I/O
MI2S #2 serial data channel 1
D39 GPIO_113
MI2S_1_SCLK
GP_PDM_2B
P3 B-PD:nppukp
B
DO
Configurable I/O
MI2S #1 bit clock
General-purpose PDM 2B output
E40 GPIO_114
MI2S_1_D0
P3 B-PD:nppukp
B
Configurable I/O
MI2S #1 serial data channel 0
E38 GPIO_115
GYRO_ACCEL_INT_N
MI2S_1_D1
P3 B-PD:nppukp
DI
B
Configurable I/O
Gyro interrupt
MI2S #1 serial data channel 1
AW38 GPIO_116
MI2S_1_MCLK
P3 B-PD:nppukp
DO
Configurable I/O
MI2S #1 master clock
AV37 GPIO_117
MI2S_2_WS
P3 B-PD:nppukp
B
Configurable I/O
MI2S #2 word select (L/R)
AR36 GPIO_118
MI2S_2_SCLK
P3 B-PD:nppukp
B
Configurable I/O
MI2S #2 bit clock
BA40 GPIO_119
MI2S_2_D0
P3 B-PD:nppukp
B
Configurable I/O
MI2S #2 serial data channel 0
F39 GPIO_120
BLSP3_SPI_CS1_N
P3 B-PD:nppukp
DO
Configurable I/O
Chip select 1 for SPI on BLSP3
G38 GPIO_121
BLSP2_SPI_CS1_N
P3 B-PD:nppukp
DO
Configurable I/O
Chip select 2 for SPI on BLSP2
Table 2-10 Pin descriptions – general-purpose input/output ports (cont.)
Pad # Pad name Configurable function
Pad characteristics
Functional description
Voltage Type
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 58
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Pin Definitions
Table 2-11 Pin descriptions – RF front-end functions
Pad # Pad name
and/or function
Pad name
or alt function
Pad characteristics 1
Functional description
Voltage Type
GPS control signal
BC32
EXT_GPS_LNA_EN
GPIO_96 P3
DO
B-PD:nppukp
External GPS LNA enable
Configurable I/O
General RF control (GRFC) signals
BB31
GRFC_21
GPIO_95 P3
DO
B-PD:nppukp
Generic RF controller bit 21
Configurable I/O
BC34
GRFC_20
GPIO_94 P3
DO
B-PD:nppukp
Generic RF controller bit 20
Configurable I/O
BD33
GRFC_19
GPIO_93 P3
DO
B-PD:nppukp
Generic RF controller bit 19
Configurable I/O
AY33
GRFC_18
GPIO_92 P3
DO
B-PD:nppukp
Generic RF controller bit 18
Configurable I/O
BE38
GRFC_17
GPIO_91 P3
DO
B-PD:nppukp
Generic RF controller bit 17
Configurable I/O
BA32
GRFC_16
GPIO_90 P3
DO
B-PD:nppukp
Generic RF controller bit 16
Configurable I/O
BD35
GRFC_15
GPIO_89 P3
DO
B-PD:nppukp
Generic RF controller bit 15
Configurable I/O
BB35
GRFC_14
GPIO_88 P3
DO
B-PD:nppukp
Generic RF controller bit 14
Configurable I/O
BB37
GRFC_13
GPIO_87 P3
DO
B-PD:nppukp
Generic RF controller bit 13
Configurable I/O
BD39
GRFC_12
GPIO_86 P3
DO
B-PD:nppukp
Generic RF controller bit 12
Configurable I/O
BE6
GRFC_11
GPIO_85 P3
DO
B-PD:nppukp
Generic RF controller bit 11
Configurable I/O
BC8
GRFC_10
GPIO_84 P3
DO
B-PD:nppukp
Generic RF controller bit 10
Configurable I/O
BC40
GRFC_9
GPIO_83 P3
DO
B-PD:nppukp
Generic RF controller bit 9
Configurable I/O
BC38
GRFC_8
GPIO_82 P3
DO
B-PD:nppukp
Generic RF controller bit 8
Configurable I/O
BD7
GRFC_7
GPIO_81 P3
DO
B-PD:nppukp
Generic RF controller bit 7
Configurable I/O
BD5
GRFC_6
GPIO_80 P3
DO
B-PD:nppukp
Generic RF controller bit 6
Configurable I/O
BZC6
GRFC_5
GPIO_79 P3
DO
B-PD:nppukp
Generic RF controller bit 5
Configurable I/O
BE4
GRFC_4
GPIO_78 P3
DO
B-PD:nppukp
Generic RF controller bit 4
Configurable I/O
BC4
GRFC_3
GPIO_77 P3
DO
B-PD:nppukp
Generic RF controller bit 3
Configurable I/O
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 59
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Pin Definitions
NOTE GPIO pins can support multiple functions. To assign GPIOs to particular functions
(such as the options listed in the table above), designers must identify all their
application’s requirements and map each GPIO to its function – carefully avoiding
conflicts in GPIO assignments. Refer to Table 2-10 for a list of all supported functions
for each GPIO.
NOTE Handset designers must examine each GPIO’s external connection and programmed
configuration, and take necessary steps to avoid excessive leakage current.
Combinations of the following factors must be controlled properly:
– GPIO configuration
• Input versus output
• Pullup or pulldown
– External connections
• Unused inputs
• Connections to high-impedance (tri-state) outputs
• Connections to external devices that may not be attached
To help designers define their products’ GPIO assignments, QTI provides an Excel spreadsheet
that lists all MSM8x16 GPIOs (in numeric order), pad numbers, pad voltages, pull states, and
available configurations.
NOTE Click the link below to download the MSM8916 GPIO Configuration Spreadsheet
(80-NK807-1B) from the CDMA Tech Support website.
https://downloads.cdmatech.com/qdc/drl/objectId/09010014825db1e2
If you have permission to view the document, a prompt will be presented for initiating
the download.
NOTE Subscribe to the pin assignment spreadsheet to be notified of any changes.
AP35
GRFC_2
GPIO_76 P3
DO
B-PD:nppukp
Generic RF controller bit 2
Configurable I/O
AV39
GRFC_1
GPIO_75 P3
DO
B-PD:nppukp
Generic RF controller bit 1
Configurable I/O
AP37
GRFC_0
GPIO_74 P3
DO
B-PD:nppukp
Generic RF controller bit 0
Configurable I/O
1. Refer to Table 2-1 for parameter and acronym definitions.
Table 2-11 Pin descriptions – RF front-end functions (cont.)
Pad # Pad name
and/or function
Pad name
or alt function
Pad characteristics 1
Functional description
Voltage Type
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 60
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Pin Definitions
Click the Help button to download the latest revision of Using CDMA Tech Support
Documents and Downloads User Guide (80-V7273-1). This document includes
subscription instructions.
Table 2-12 Pin descriptions – No connection, do not connect, and reserved pins
Pad # Pad name Functional description
 A2, A40, AB11, AB19, AB23, AC6, AD1, AD23,
AD27, AD3, AD31, AD5, AJ6, AK25, AK27, AK3,
AK5, AL4, AL6, AM27, AM5, AM7, AN2, AN4,
AN6, AP25, AP3, AP5, AP7, AT1, AT17, AT19,
AT21, AT25, AT3, AU16, AU18, AU2, AU20,
AU24, AV21, AV23, AV25, AV27, AV29, AV31,
AW16, AW18, AW20,AW22, AW24, AW26,
AW28, AW30, AW32, AY25, AY29, B1, BA24,
BA30, BB29, BB9, BC30, BD1, BD29, BD9, BE2,
BE40, D33, D37, F15, F17, F21, G22, G26, H11,
H13, H15, H19, H23, H25, H27, H29, H31, H7,
M19, P19, P23, P25, AA40
NC No connect; not connected internally
BA36, AY35, AN8, AY15, AY17, BA14, BA16 DNC Do not connect; connected internally, do not connect externally
Table 2-13 Pin descriptions – power supply pins
Pad # Pad name Functional description
AP17, AP19 VDD_A1 Power for analog circuits – low voltage
AR24, AR22, AR18, AR20 VDD_A2 Power for analog circuits – high voltage
AB25, AB27, AB29, AB31, K29, K31, K33, M23, M25,
M27, M29, M31, M33, P27, P29, P31, P33, T25, T27,
T29, T33, V25, V27, V29, V31, V33, Y25, Y27, Y29,
Y31
VDD_APC Power for applications microprocessors
AF31, U8, AD13, AD15, AD17, AD25, AD29, AH11,
AH17, AH19, AH21, AM17, AM19, AR10, M11, M21,
M9, T11, T21, T9, U22, U24, Y11, Y13, Y15, Y17, Y9
VDD_CORE Power for digital core circuits
AD11, AG28, AH13, AH15, AH23, AH25, AH27,
AH29, AJ28, AL28, AM11, AM9, AN28, AP29, AU10,
K25, M15, N14, T13, T15, T23, T31, Y19, J28, K27,
M13, M17, AP27
VDD_MEM Power for on-chip memory
AE6, AE8, AB9, AC8 VDD_MIPI Power for MIPI circuits (CSI and DSI)
AH5 VDD_MIPI_DSI_PLL Power for MIPI _DSI PHY PLL
J10, J14, J20, J22, J24, J30, K11, K15, K19, K23 VDD_P1 Power for pad group 1 – EBI pads
W8 VDD_P2 Power for pad group 2 – SDC2 pads
AA32, AG32, AK9, AP33, AT11, AT33, AT7, AU30,
AU34, AU8, F31, H17, J8, V7
VDD_P3 Power for pad group 3 – most I/O pads
AB35 VDD_P4 Power for pad group 4 – UIM3 pads
L34 VDD_P5 Power for pad group 5 – UIM1 pads
AC34 VDD_P6 Power for pad group 6 – UIM2 pads
AF33 VDD_P7 Power for pad group 7 – SDC1 pads
Y21, AG16, AE22 VDD_PLL1 Power for PLL circuits – low voltage
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 61
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Pin Definitions
W24, AP23, AN14 VDD_PLL2 Power for PLL circuits – high voltage
AJ8 VDD_QFPROM_PRG Power for programming the QFPROM; otherwise GND
AE30 VDD_USB_HS Power for USB PHY interface – digital voltage
AD33 VDD_USBPHY_1P8 Power for USB PHY interface – low voltage
AC32 VDD_USBPHY_3P3 Power for USB PHY interface – high voltage
AT15 VDD_WLAN Power for WLAN ADC circuits
Table 2-13 Pin descriptions – power supply pins (cont.)
Table 2-14 Pin descriptions – ground pins
Pad # Pad name Functional description
AV15, AW14, AY13, BA12, BC12, BD13, AC30, W22, Y23, AN20, AE16,
AG18, AE20, AD21, V23, V21, AM23, AM21, AM15, AM13, AY21, BD19,
BE18, AV19, BB19, BC18, AV17, BD17, BE16, BB25, BE22, AA4, AA8,
AC4, AD7, T3, T5, V3, W4, Y3, AF5, AH7, AJ2, AK7, AL8, AM1, AM3, AJ4,
AT27, AU28, BA28, BB27, BC26, BC28, BD27, BE28, BA22, BC22, BD23,
AT13, AV13, AW12, A12, A16, A22, A28, A32, A6, AA24, AA26, AA28,
AA30, AB13, AB15, AB17, AB21, AD19, AF11, AF13, AF15, AF17, AF19,
AF21, AF23, AF25, AF27, AF29, AF9, AG20, AH31, AH9, AJ34, AK11,
AK13, AK15, AK17, AK19, AK21, AK23, AK29, AK31, AK33, AL30, AM25,
AM29, AM31, AM33, AP9, AR4, AR6, AT29, AU12, AU38, AU6, AV11,
AV33, AV5, AV9, AW10, AW2, AW34, AW4, AY11, B5, BA8, BB7, BC36,
BD37, BE10, BE8, C18, C20, C32, C8, D27, D5, D7, E12, F19, F25, F27,
F29, F37, F7, G10, G12, G14, G16, G18, G20, G24, G28, G30, G32, G8,
H35, H37, J16, J18, J32, J36, J38, K17, K21, K37, K5, K9, L30, L32, L4, L6,
L8, M35, M37, M39, M5, M7, N2, N22, N24, N26, N28, N30, N32, N34, N36,
N38, N4, N40, N8, P11, P13, P15, P17, P21, P35, P37, P39, P5, P9, R22,
R24, R26, R28, R30, R32, R34, R36, R38, R40, R8, T17, T19, T35, T37,
T39, U26, U28, U30, U32, U34, U36, U38, U40, V11, V13, V15, V17, V19,
V35, V37, V39, W16, W26, W28, W30, W32, W34, W36, W38, W40
GND Ground
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 62
Confidential and Proprietary – Qualcomm Technologies, Inc.
3 Electrical Specifications
3.1 Absolute maximum ratings
Absolute maximum ratings (Table 3-1) reflect conditions that the MSM8x16 device may be
exposed to beyond the operating limits, without experiencing immediate functional failure. They
are limiting values, to be considered individually when all other parameters are within their
specified operating ranges. Functionality and long-term reliability can only be expected within the
operating conditions, as described in Section 3.2.
Table 3-1 Absolute maximum ratings
Parameter Min Max Unit
Power-supply voltages
VDD_A1 Analog circuits -0.30 1.56 V
VDD_A2 Analog circuits -0.30 2.16 V
VDD_APC Application microprocessors -0.30 1.62 V
VDD_CORE Digital core circuits -0.30 1.55 V
VDD_MEM On-chip memory -0.30 1.55 V
VDD_MIPI_DSI_PLL Power for MIPI _DSI PHY PLL -0.30 2.16 V
VDD_P1 Digital pad circuits -0.30 1.44 V
VDD_P2 Digital pad circuits – 2.95 V
Digital pad circuits – 1.80 V
-0.30
-0.30
3.25
2.16
V
VDD_P3 Digital pad circuits -0.30 2.16 V
VDD_P4 Digital pad circuits – 2.95 V
Digital pad circuits – 1.80 V
-0.30
-0.30
3.25
2.16
V
VDD_P5 Digital pad circuits – 2.95 V
Digital pad circuits – 1.80 V
-0.30
-0.30
3.25
2.16
V
VDD_P6 Digital pad circuits – 2.95 V
Digital pad circuits – 1.80 V
-0.30
-0.30
3.25
2.16
V
VDD_P7 Digital pad circuits -0.30 2.45 V
VDD_PLL1 PLL circuits -0.30 1.55 V
VDD_PLL2 PLL circuits -0.30 2.16 V
VDD_QFPROM_
PRG
QFPROM programming voltage -0.30 2.16 V
VDD_USBPHY_1P8 USB PHY low-voltage circuit -0.30 2.16 V
VDD_USBPHY_3P3 USB PHY high-voltage circuit -0.30 3.63 V
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 63
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Electrical Specifications
3.2 Operating conditions
Operating conditions include parameters that are under the control of the design team:
power-supply voltage, power-distribution impedances, and thermal conditions (Table 3-3). The
MSM8x16 meets all performance specifications listed in Section 3.3 through Section 3.12, when
used within the operating conditions, unless otherwise noted in those sections (provided the
absolute maximum ratings have never been exceeded).
VDD_USB_HS Core circuits for USB -0.30 1.55 V
VDD_WLAN WLAN ADC circuits -0.30 1.56 V
Signal pins
V_IN Voltage on any non-power input pin -0.3 Vxx + 20% 1 V
VIN_P7 Voltage on any eMMC input pin -0.30 2.45 V
I_IN Latch-up current -100 100 mA
ESD protection – see Section 7.1
Thermal conditions – see Section 4.3
1. VXX is the supply voltage associated with the input or output pin to which the test voltage is applied.
Table 3-1 Absolute maximum ratings (cont.)
Parameter Min Max Unit
Table 3-2 Operating conditions for APC and CORE rails
Parameter Min Typ Max Unit
VDD_APC Quad Cortex A53 [operating at a maximum frequency of
1.15+ GHz]
Turbo mode
Nominal mode
SVS* mode
1.07
0.97
0.97
–
–
1.05
1.42
1.22
1.12
V
V
V
VDD_CORE Turbo mode
Nominal mode
SVS mode
1.05
0.93
0.84
–
–
–
1.36
1.22
1.12
V
V
V
NOTE Parts with voltages outside the specified ranges are not guaranteed to operate
properly
* AVS Type I is not enabled on APC rail in SVS mode.
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 64
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Electrical Specifications
Table 3-3 Operating conditions
Parameter Min Typ 2
2. Typical voltages represent the recommended output settings of the companion PMIC device
Max Unit
Power-supply voltages
VDD_A1
VDD_WLAN
Power for analog circuits – low voltage for PA DAC
and Tx DAC circuits
Power for WLAN ADC circuits
1.25 1.3 1.35 V
VDD_MEM
VDD_PLL1
VDD_USB_HS
Power supply for internal memory cores
Power for PLL circuits – low voltage
Power for core circuits of USB
Turbo mode
Nominal mode
SVS mode
1.22
1.10
1.00
1.2875
1.15
1.05
1.33
1.19
1.09
V
V
V
VDD_PLL2
VDD_A2
VDD_USBPHY_1P8
Power for PLL circuits – high voltage
Power for analog circuits – high voltage for
analog baseband receiver and SVideo circuits
Power for USB PHY interface – low voltage
1.75 1.80 1.93 V
VDD_P1
VDD_MIPI
Power for pad group 1 – EBI pads
Power for MIPI circuits (CSI and DSI)
1.15 1.20 1.25 V
VDD_P2 Power for pad group 2
SDC2 pads low voltage
SDC2 pads high voltage
1.67
2.75
1.8
2.95
1.93
3.04
V
V
VDD_P3 Power for pad group 3 – most I/O pads 1.67 1.8 1.93 V
VDD_P4 Power for pad group 4
UIM3 pads low voltage
UIM3 pads high voltage
1.67
2.75
1.8
2.95
1.93
3.04
V
V
VDD_P5 Power for pad group 5
UIM1 pads low voltage
UIM1 pads high voltage
1.67
2.75
1.8
2.95
1.93
3.04
V
V
VDD_P6 Power for pad group 6
UIM2 pads low voltage
UIM2 pads high voltage
1.67
2.75
1.8
2.95
1.93
3.04
V
V
VDD_P7 Power for pad group 7 – SDC1 pads 1.67 1.8 1.93 V
VDD_MIPI_DSI_PLL Power for MIPI _DSI PHY PLL 1.72 1.8 1.95 V
VDD_QFPROM_PRG Power for programming the QFPROM; otherwise
ground
1.67 1.8 1.93 V
VDD_USBPHY_3P3 Power for USB PHY interface – high voltage 2.97 3.08 3.50 V
Thermal conditions
TC Device operating temperature (case) -30 +25 +85 °C
TA 1
1. These temperature ranges are defined by the 3GPP and 3GPP2 system specifications.
3GPP2-mode operating temperature (ambient) -30 +25 +60 °C
3GPP-mode operating temperature (ambient) -20 +25 +60 °C
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 65
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Electrical Specifications
3.2.1 Core voltage minimization (retention mode)
The MPM supports VDD minimization, also known as VDD_CORE retention mode. This
technique reduces the leakage of the digital logic by reducing VDD to the minimum required to
maintain the register and memory state.
The V(MIN) for state retention is found through characterization. As in any normal distribution,
retention voltages vary across devices. Three fuses are blown to set the core voltage in retention
mode. These fuses are used by software.
The fuse locations in Table 3-4 refer to register 0x0005C00C SECURITY_CONTROL_CORE_
QFPROM_CORR_PTE2.
3.3 Power delivery network specification
This is the power delivery network (PDN) maximum impedance specification.
NOTE Design guidelines for the PDN are listed in Training: Power Delivery Network Design
(80-VT310-13). If PCB designers have difficulty meeting these impedances, please
contact QTI for assistance.
3.3.1 PDN system specification (PCB + baseband IC)
Table 3-5 lists the PCB + baseband IC PDN requirements. Meeting this specification requires the
use of a commercial circuit simulator program (e.g., ADS) and the MSM8x16 S-parameter model
(Power Distribution Network Package Model (HS11-NK807-10HW).
Table 3-4 Core voltage in retention mode
VDD_CORE 1
1. The specified VDD_CORE voltages are PMIC settings.
Bit 7 (MSB) Bit 6 Bit 5
(LSB)
0.65 V 0 0 0
0.5 V 0 0 1
0.65 V 0 1 1
Table 3-5 PCB + baseband IC PDN impedance vs. frequency
Power domain
Required PCB routing
inductance (caps
shorted) 1
1. Meeting the PCB routing inductance is the required starting point to reap maximum benefits from the PDN
capacitor optimization process described in PDN Capacitor Optimization Guidelines (80-VT310-15).
Max impedance
DC to 10 Hz 10 Hz to 10 MHz 10 MHz–500 MHz
VDD_MEM 500 pH 11 m 104 m 250 m
VDD_CORE 250 pH 5 m 79 m 160 m
VDD_APC 200 pH 4 m 45 m 140 m
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 66
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Electrical Specifications
3.3.2 PDN specification (PCB-only)
Table 3-6 lists the PCB-only PDN requirements. Refer to this specification only if a commercial
circuit simulator program (e.g., ADS) is not available.
NOTE Design guidelines for the PDN are listed in Training: Power Delivery Network Design
(80-VT310-13). If PCB designers have difficulty meeting these impedances, contact
QTI for assistance.
NOTE The PDN DC specification for VDD_P1 applies for both MSM and external memory
domains powered by VREG_L2_1P2 under the assumption that the maximum current
drawn by memory device is 250 mA. The PDN AC specification for VDD_P1 applies
only for MSM domain powered by VREG_L2_1P2.
3.4 DC power characteristics
3.4.1 Average operating current
Detailed current-consumption information and details about the operating modes tested are
available in the MSM8916 Linux Android Current Consumption Data (80-NK807-7).
3.4.2 Dhrystone and rock bottom maximum power
Table 3-7 lists values for Dhrystone and rock bottom power specifications.
Table 3-6 PCB-only PDN impedance vs. frequency
Power domain
Max impedance Pin number of
positive ports
Pin number of negative
ports
DC to 10 Hz 10 Hz to 25 MHz
VDD_MEM 11 m 78 m All VDD_MEM pins All GND pins
VDD_CORE 5 m 78 m All VDD_CORE pins All GND pins
VDD_APC 4 m 45 m All VDD_APC pins All GND pins
VDD_P1 35 m 141 m J10, J14, K11 G10, G12, G14, G16, K9,
J16
141 m J20, J22 G18, G20, G24, J18, K21
141 m J24, K23 G24, K21
141 m K15, K19 K17, K21
141 m J30 G28, G30, G32, J32
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 67
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Electrical Specifications
3.5 Power sequencing
The PM8916 includes poweron circuits that provide the proper power sequencing for the entire
MSM8x16 chipset. The supplies are turned on as groups of regulators that are selected by the
hardware configuration of some PMIC pins. Refer to the PM8916 Power Management IC Device
Specification (80-NK808-1) for details.
A high-level summary of the required poweron sequence is as follows:
 VDD_MEM (on-chip memory), VDD_PLL1
 VDD_CORE (digital core circuits)
 VDD_APC (Cortex A53 microprocessor)
 VREF_SDC (SDC reference voltage)
 VDD_P3 (SDC3 and I/Os), VDD_P7 (SDC1), VDD_DDR_1P8
 VDD_P1 (EBI and DDR I/Os), VDD_DDR_1P2
 VREG_XO
 VDD_USBPHY_1P8, VDD_PLL2
 EBI0_VREF_XX (LPDDR2/3 reference voltage)
 VDD_USB_3P3
 VDD_QFPROM_PRG, VDD_P2 (SDC2)
Comments regarding this sequence:
 The core voltage (VDD_CORE) needs to power up before the pad circuits (VDD_Px), so that
internal circuits can take control of the I/Os and pads.
 If pad voltages power up first, the output drivers might be stuck in unknown states, and might
cause large leakage currents until VDD_CORE powers on.
 The general-purpose pad voltage (VDD_P3) needs to precede the analog voltages (VDD_Ax),
since the SSBIs are initialized to their default states before VDD_Ax powers up (analog
circuits are controlled by SSBI).
 Other noncritical supplies are included within the poweron sequence. Any other desired
supplies can be powered on by software after the sequence is completed.
Table 3-7 Dhrystone and rock bottom power specifications
MSM version Dhrystone (W) at 85°C (Tj
) 1 2 Rock bottom (mW) at 25°C
(Tj
) 3
MSM8x16 (1.2 GHz) 3.78 11.8
1. Dhrystone should be measured using the QTI custom Dhrystone script that will be provided upon request.
2. The Dhrystone specification applies only to MSM8x16 CS devices. Dhrystone should be run and measured on all
four APC together.
3. Rock bottom (VDD_CORE and VDD_MEM) should be measured at VDD_CORE and VDD_MEM rails when
VDD_CORE and VDD_MEM are at retention voltage. Refer to AIR1, Table 3-1 in MSM8916 Linux Android Current
Consumption Data (80-NK807-7) for the test setup.
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 68
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Electrical Specifications
 Each domain needs to reach its 90% value before the next domain starts ramping up. For
example, when VDD_MEM reaches 90% of its value, then the VDD_CORE supply can start
ramping up.
3.6 Digital logic characteristics
A digital I/O’s performance specification depends upon its pad type, its usage, and/or its supply
voltage:
 Some are dedicated for interconnections between the MSM8x16 chipset and other ICs within
the QTI chipset, and therefore do not require specification.
 Some are defined by existing standards (such as I2C, SPI, etc). QTI devices comply with those
standards and additional specifications are not required.
 All other digital I/Os require performance specifications, and are organized within this section
as described in Table 3-8.
Table 3-8 Digital I/Os specified in this section
Pad voltage Usage Table
1.2 V EBI0 (P1) Table 3-9
1.8 V GPIO (P3) Table 3-10
Dual- V
(1.8 V/2.95 V)
SDC2 (P2), GPIO (P5, P6, P4), UIM1 (P5), UIM2 (P6), UIM3 (P4) Table 3-11
Dual- V
(1.2 V/1.8 V)
SDC1 (P7) Table 3-12
Table 3-9 1.2 V digital I/O characteristics
Parameter Comments Min Max Unit
EBI0 pads only (as identified in Table 3-8)
VREF Reference voltage 0.49 * VDD_Px 0.51 * VDD_Px V
VIH High-level input voltage CMOS/Schmitt VREF + 0.13 – V
VIL Low-level input voltage CMOS/Schmitt – VREF - 0.13 V
IIH Input high leakage current No pulldown – 2 µA
IIL Input low leakage current No pullup -2 – µA
IIHPD Input high leakage current with
pulldown
40 200 µA
IILPU Input low leakage current with
pullup
-200 -40 µA
IOZHKP High-level, tri-state leakage
current with keeper
-120 -10 µA
IOZLKP Low-level, tri-state leakage
current with keeper
10 120 µA
VOH High-level output voltage CMOS, at rated
drive strength 1
0.9 * VDD_Px – V
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 69
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Electrical Specifications
VOL Low-level output voltage CMOS, at rated
drive strength 1
– 0.1 * VDD_Px V
CI/O I/O capacitance 2 1.25 2.50 pF
1. Refer to Table 2-1 for each output pin’s drive strength (IOH and IOL); the drive strengths of many output
pins are programmable, and depend on the associated supply voltage.
2. Input capacitance and I/O capacitance values are guaranteed by design, but not 100% tested.
Table 3-9 1.2 V digital I/O characteristics (cont.)
Parameter Comments Min Max Unit
Table 3-10 1.8 V digital I/O characteristics
Parameter Comments Min Max Unit
GPIO (P3) (as identified in Table 3-8)
VIH High-level input voltage CMOS/Schmitt 0.65 * VDD_Px – V
VIL Low-level input voltage CMOS/Schmitt – 0.35 * VDD_Px V
VOH High-level output voltage CMOS, at rated drive strength 1 VDD_Px - 0.45 V
VOL Low-level output voltage CMOS, at rated drive strength 3 – 0.45 V
RP Pull resistance 2 Pullup and pulldown 55 390 k
RK Keeper resistance 2 30 150 k
IIH Input high leakage current 3 No pulldown – 1 µA
IIL Input low leakage current 4 No pullup -1 – µA
VSHYS Schmitt hysteresis voltage 100 – mV
CI/O I/O capacitance – 5 pF
RFFE and SPMI pins
VIH High-level input voltage CMOS/Schmitt 0.65 * VDD_PX – V
VIL Low-level input voltage CMOS/Schmitt – 0.35 * VDD_Px V
VOH High-level output voltage CMOS, at rated drive strength 0.8 * VDD_PX V
VOL Low-level output voltage CMOS, at rated drive strength – 0.2 * VDD_Px V
RP Pull resistance Pullup and pulldown 10 50 k
RK Keeper resistance 10 50 k
IIH Input high leakage current No pulldown – 1 µA
IIL Input low leakage current No pullup -1 – µA
VSHYS Schmitt hysteresis voltage 165 – mV
1. Refer to Table 2-1 for each output pin’s drive strength (IOH and IOL); the drive strengths of many output pins are
programmable, and depend on the associated supply voltage.
2. Refer to Table 2-1 for pullup, pulldown, and keeper options for each pad (where appropriate).
3. Pad voltage = VDD_Px max.
4. Over all valid pad voltages.
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 70
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Electrical Specifications
Table 3-11 Dual-voltage 1.8 V/2.95 V digital I/O characteristics
Parameter Comments Min Max Unit
Common to dual-voltage pads 1.8 V/2.95 V (as identified in Table 3-8)
RP Pull resistance 1 Pullup and pulldown 10 100 k
RK Keeper resistance 1 10 100 k
VSHYS Schmitt hysteresis voltage 100 – mV
CI/O IO capacitance – 5 pF
Common to SDC2 pad and UIM pad at 2.95 V only (as identified in Table 3-8)
IIH Input high leakage current No pulldown – 10 µA
IIL Input low leakage current No pullup -10 – µA
Common to UIM pads, either voltage (as identified in Table 3-8)
VIH High-level input voltage CMOS/Schmitt 0.7 * VDD_Px VDD_Px + 0.3 V
VIL Low-level input voltage CMOS/Schmitt -0.3 0.2 * VDD_Px V
VOH High-level output voltage CMOS, at rated drive strength 2 0.8 * VDD_Px VDD_Px V
VOL Low-level output voltage CMOS, at rated drive strength 2 0 0.4 V
SDC2 pads at 2.95 V only (as identified in Table 3-8)
VIH High-level input voltage CMOS/Schmitt 0.625 * VDD_Px VDD_Px + 0.3 V
VIL Low-level input voltage CMOS/Schmitt -0.3 0.25 * VDD_Px V
VOH High-level output voltage CMOS, at rated drive strength 2 0.75 * VDD_Px VDD_Px V
VOL Low-level output voltage CMOS, at rated drive strength 2 0 0.125 * VDD_Px V
Common to SDC2 pad and UIM pad at 1.8 V only (as identified in Table 3-8)
IIH Input high leakage current No pulldown – 2 µA
IIL Input low leakage current No pullup -2 – µA
SDC2 pads at 1.8 V only (as identified in Table 3-8)
VIH High-level input voltage CMOS/Schmitt 1.27 2 V
VIL Low-level input voltage CMOS/Schmitt -0.3 0.58 V
VOH High-level output voltage CMOS, at rated drive strength 1.4 V
VOL Low-level output voltage CMOS, at rated drive strength 0 0.45 V
1. Refer to Table 2-1 for pullup, pulldown, and keeper options for each pad (where appropriate).
2. Refer to Table 2-1 for each output pin’s drive strength (IOH and IOL); the drive strengths of many output pins are
programmable, and depend on the associated supply voltage.
Table 3-12 Dual-voltage 1.2 V/1.8 V digital I/O characteristics
Parameter Comments Min Max Unit
Common to all dual-voltage pads 1.2 V / 1.8 V(as identified in Table 3-8)
VIH High-level input voltage CMOS/Schmitt 0.625 * VDD_Px – V
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 71
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Electrical Specifications
In all digital I/O cases, VOL and VOH are linear functions (Figure 3-1) with respect to the drive
current (drive currents are given in Table 2-1). They can be calculated using these relationships:
Figure 3-1 IV curve for VOL and VOH (valid for all VDD_Px)
VIL Low-level input voltage CMOS/Schmitt – 0.35 * VDD_Px V
IIH Input high leakage current No pulldown – 2 µA
IIL Input low leakage current No pullup -2 – µA
RP Pull resistance 1 Pullup and pulldown 10 100 k
RK Keeper resistance 1 10 100 k
CIN Input capacitance – 5 pF
SDC1 (P7) pad at 1.2 V only (as identified in Table 3-8)
VOH High-level output voltage CMOS, at rated drive strength 0.75 * VDD_Px – V
VOL Low-level output voltage CMOS, at rated drive strength – 0.25 * VDD_Px V
SDC1 (P7) pad at 1.8 V only (as identified in Table 3-8)
VOH High-level output voltage CMOS, at rated drive strength VDD_Px - 0.45 – V
VOL Low-level output voltage CMOS, at rated drive strength – 0.45 V
1. Refer to Table 2-1 for pullup, pulldown, and keeper options for each pad (where appropriate).
Table 3-12 Dual-voltage 1.2 V/1.8 V digital I/O characteristics (cont.)
Parameter Comments Min Max Unit
VOL (max)
0
20
40
60
80
100
0 0.15 0.30 0.45
Output voltage
% Drive
VOH (min)
VDD_P – 0.45
Output voltage
% Drive
VDD_P – 0.30 VDD_P – 0.15 VDD_P
0
20
40
60
80
100
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 72
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Electrical Specifications
3.7 Timing characteristics
Specifications for the device timing characteristics are included (where appropriate) under each
function’s section, along with all its other performance specifications. Some general comments
about timing characteristics and pertinent pad-design methodologies are included here.
NOTE All MSM8x16 devices are characterized with actively terminated loads, so all
baseband timing parameters in this document assume no bus loading. This is
described further in Section 3.7.2.
3.7.1 Timing-diagram conventions
The conventions used within timing diagrams throughout this document are shown in Figure 3-2.
Figure 3-2 Timing-diagram conventions
For each signal in the diagram:
 One clock period (T) extends from one rising clock edge to the next rising clock edge.
 The high level represents 1, the low level represents 0, and the middle level represents the
floating (high-impedance) state.
 When both the high and low levels are shown over the same time interval, the meaning
depends on the signal type:
 For a bus-type signal (multiple bits) – the processor or external interface is driving a value,
but that value may or may not be valid.
 For a single signal – indicates don’t care.
Keeper
Don't care or bus is driven
Signal is changing from low to high
Signal is changing from high to low
Bus is changing from invalid to valid
Bus is changing from valid to keeper
Waveform Description
Denotes multiple clock periods
Bus is changing from Hi-Z to valid
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 73
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Electrical Specifications
3.7.2 Rise and fall time specifications
The testers that characterize MSM8x16 devices have actively terminated loads, making the rise
and fall times quicker (mimicking a no-load condition). The impact that different external load
conditions have on rise and fall times is shown in Figure 3-3.
Figure 3-3 Rise and fall times under different load conditions
To account for external load conditions, rise or fall times must be added to parameters that start
timing at the MSM device and terminate at an external device (or vice versa). Adding these rise
and fall times is equivalent to applying capacitive load derating factors.
3.7.3 Pad design methodology
The MSM8x16 device uses a generic CMOS pad driver design. The intent of the pad design is to
create pin response and behavior that is symmetric with respect to the associated VDD_Px supply
(Figure 3-4). The input switch point for pure input-only pads is designed to be VDD_Px/2 (or 50%
of VDD_Px). The documented switch points (guaranteed over worst-case combinations of process,
voltage, and temperature by both design and characterization) are 35% of VDD_Px for VIL and 65%
of VDD_Px for VIH.
Figure 3-4 Digital input signal switch points
Outputs (address, chip selects, clocks, etc.) are designed and characterized to source or sink a large
DC output current (several mA) at the documented VOH (min) and VOL(max) levels over
worst-case process/voltage/temperature. Because the pad output structures (Figure 3-5) are
Specified switch low points
(active terminated load)
Simulated driving
30 pF signal load
Actual switch low
point @ 30 pF
0V
Simulated driving
80 pF signal load
0V
VOH
VOL
VOH
VOL
Specified switch high points
(active terminated load)
Actual switch high
point @ 30 pF
Actual switch high
point @ 80 pF
Actual switch low
point @ 80 pF
VDD_PX
VDD_PX
0 V
VDD_PX
50%
VIL
VIH
switch points
65% VDD_PX
35% VDD_PX
Input
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 74
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Electrical Specifications
essentially CMOS drivers that possibly have a small amount of IR loss (estimated at less than
50 mV under worst-case conditions), the expected zero DC load outputs are estimated to be:
 VOH ~ VDD_Px - 50 mV or more
 VOL ~ 50 mV or less
Figure 3-5 Output-pad equivalent circuit
The DC output drive strength can be approximated by linear interpolations between VOH (min)
and VDD_Px - 50 mV, and between VOL (max) and 50 mV. For example, an output pad driving low
that guarantees 4.5 mA at VOL (max) will provide approximately 3.0 mA or more at
2/3 × [VOL (max) - 50 mV], and 1.5 mA or more at 1/3 × [VOL (max) - 50 mV]. Likewise, an
output pad driving high that guarantees 2.5 mA at VOH (min) will provide approximately 1.25 mA
or more at ½ × [VDD_Px - 50 mV + VOH (min)].
The output pads are essentially CMOS outputs with a corresponding FET-type output
voltage/current transfer function. When an output pad is shorted to the opposite power rail, the pad
is capable of sourcing or sinking ISC (SC = short-circuit) of current, where the magnitude of ISC is
larger than the current capability at the intended output logic levels.
Since the target application includes a radio, output pads are designed to minimize output slew
rates. Decreased slew rates limit high-frequency spectral components that tend to desensitize the
companion radio.
Output drivers’ rise time (t(r)) and fall time (t(f)) values are functions of board loading.
Bidirectional pins include both input and output pad structures, and behave accordingly when used
as inputs or outputs within the system. Both input and output behaviors were described above.
3.8 Memory support
All timing parameters in this document assume no bus loading. Rise/fall time numbers must be
factored into the numbers in this document. For example, setup-time numbers will get worse and
hold-time numbers may get better.
3.8.1 EBI0 memory support
The EBI0 port is dedicated to the LPDDR2/3 SDRAM memory that is attached to the top of the
MSM8x16 device.
output
pad
P_out
P_out = high
IR loss < 50 mV
P_out = low
IR loss < 50 mV
VDD_Px
MSM pad
Pad voltage:
HIGH (max) > VDD_Px – 50 mV
LOW (min) < 50 mV
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 75
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Electrical Specifications
3.8.1.1 EBI0 pad drive strength
Pads for EBI0 are tailored for its 1.2 V interface and are source-terminated. Before the source
termination, the pad drive strength is 15 mA to 60 mA. But at the pads, after the source
termination, the drive strength at IOL, IOH is equivalent to 0.90 mA to 3.35 mA in nonlinear steps
when the JEDEC standard range (90% – 10%) is followed.
3.8.1.2 LPDDR2/3 SDRAM clock
For any timing analysis, the measurement point for all signals is at 50% of VDD_Px. All output
timing parameters represent the point of the output signal transition; additional accounting for
signal rise and fall times for specific bus loading is required.
Figure 3-6 DDR SDRAM DCLK and DCLKB
EBI0_DCLK
EBI0_DCLKB
VOD
Vixca
Three examples of the clock crossing point:
EBI0_DCLK
EBI0_DCLKB
123
VDD/2
Vixca
Table 3-13 DDR SDRAM clock-timing parameters
Parameter Comments Min Typ Max Unit
1/tCK DDR clock frequency 10 – 533 (LPDDR2)
533 (LPDDR3)
MHz
Duty cycle 45 – 55 %
Vixca 1 Clock crossover-point ± offset from VDD/2 – – 120 mV
VOD Differential output voltage 0.44 – – V
1. Crosstalk due to high CA activity might cause parameters to exceed the VIXCA limit
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 76
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Electrical Specifications
3.8.1.3 LPDDR2/3 SDRAM strobe
Figure 3-7 DDR SDRAM DQS_x and DQSB_x
3.8.1.4 LPDDR2 SDRAM read and write timing
Figure 3-8 DDR SDRAM read timing
EBI0_DQS_x
EBI0_DQSB_x
Three examples of the strobe crossing point:
EBI0_DQS_x
EBI0_DQSB_x
VOD
Vixdq
123
VDD/2
Vi d
Table 3-14 DDR SDRAM strobe timing parameters
Parameter Comments Min Typ Max Unit
VIXDQ Clock cross-over point ± offset from VDDQ/2 – – 120 mV
VOD Differential output voltage 0.44 – – V
t(is) t(ih)
EBI0_CA[MSB:0]
EBI0_DQS[MSB:0]
t(ipw)
EBI0_DQSB[MSB:0]
EBI0_DCLK
EBI0_DCLKB
CMD/ADDR
ADDR
t(dqsck)
EBI0_DQ[MSB:0]
t(dqsq)
t(qhs) t(dipw)
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 77
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Electrical Specifications
Figure 3-9 DDR SDRAM write timing
t(is) t(ih)
EBI0_CA[MSB:0]
EBI0_DQS[MSB:0]
t(ipw)
EBI0_DQSB[MSB:0]
EBI0_DCLK
EBI0_DCLKB
CMD/ADDR
ADDR
t(dqss) max
EBI0_DQ[MSB:0]
t(ds)
t(dh)
t(dqsh) t(dss)
t(dqsl)
EBI0_DQS[MSB:0]
EBI0_DQSB[MSB:0]
EBI0_DQ[MSB:0]
t(ds)
t(dsh)
t(dqss) min t(dqsl) t(dqsh)
t(dh)
CASE 1
t(dqss) = MAX
CASE 2
t(dqss) = MIN
Table 3-15 DDR SDRAM read and write timing specifications
Parameter Comments Min Typ Max Unit
LPDDR2 (533 MHz) – common to read and write
t(is) Address and control in setup time before
CK
0.22 – – ns
t(ih) Address and control input hold time after
CK
0.22 – – ns
t(dipw) DQ and DM pulse width 0.35 – – tCK
t(ipw) Address and control input pulse width 0.40 – – tCK
t(tdiff) Input transition slew rate from VIL to VIH Differential clock 2.0 – – V/ns
t(t) Input transition time from VIL to VIH Other than diff clock 1.0 – – V/ns
LPDDR2 (533 MHz) – read cycle
t(dqsck) DQS access time from clock 2.50 – 5.50 ns
t(dqsq) DQS to DQ skew limit – – 0.2 ns
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 78
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Electrical Specifications
3.8.1.5 LPDDR3 SDRAM read and write timing
Figure 3-10 DDR SDRAM read timing
t(rpre) Read preamble 0.90 – – t(ck)
t(qhs) Data hold skew factor – – 0.23 ns
LPDDR2 (533 MHz) – write cycle
t(ds) DQ and DM input setup time before DQS 0.21 – – ns
t(dh) DQ and DM input hold time after DQS 0.21 – – ns
t(dqsh) DQS input high-level width 0.40 – – t(ck)
t(dqsl) DQS input low-level width 0.40 – – t(ck)
t(dqss) First DQS latching transition 0.75 – 1.25 t(ck)
t(dss) DQS falling edge to CK setup time 0.20 – – t(ck)
t(dsh) DQS falling edge hold time after CK 0.20 – – t(ck)
Table 3-15 DDR SDRAM read and write timing specifications (cont.)
Parameter Comments Min Typ Max Unit
t(isca) t(ihca)
EBI0_CA[MSB:0]
EBI0_DQS[MSB:0]
t(ipwca)
EBI0_DQS_B[MSB:0]
EBI0_DCLK
EBI0_DCLKB
CMD/ADDR
ADDR
t(dqsck)
EBI0_DQ[MSB:0]
t(dqsq)
t(dipw)
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 79
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Electrical Specifications
Figure 3-11 DDR SDRAM write timing
t(is) t(ih)
EBI0_CA[MSB:0]
EBI0_DQS[MSB:0]
t(ipw)
EBI0_DQS_B[MSB:0]
EBI0_DCLK
EBI0_DCLKB
CMD/ADDR
ADDR
t(dqss) max
EBI0_DQ[MSB:0]
t(ds)
t(dh)
t(dqsh) t(dss)
t(dqsl)
EBI0_DQS[MSB:0]
EBI0_DQS_B[MSB:0]
EBI0_DQ[MSB:0]
t(ds)
t(dsh)
t(dqss) min t(dqsl) t(dqsh)
t(dh)
CASE 1
t(dqss) = MAX
CASE 2
t(dqss) = MIN
WL
Table 3-16 DDR SDRAM read and write timing specifications
Parameter Comments Min Typ Max Unit
LPDDR3 (533 MHz) – common to read and write
t(isca) Address and control in setup time before
CK
0.175 – – ns
t(ihca) Address and control input hold time after
CK
0.175 – – ns
t(dipw) DQ and DM pulse width 0.35 – – tCK
t(iscs) CS_n input setup time 0.29 – – ns
t(ihcs) CS_n input hold time 0.29 – – ns
t(ipwcs) CS_n input pulse width 0.7 – – t(ck)
t(ipw) Address and control input pulse width 0.35 – – tCK
t(tdiff) Input transition slew rate from VIL to VIH Differential clock 2.0 – – V/ns
t(t) Input transition time from VIL to VIH Other than diff clock 1.0 – – V/ns
LPDDR3 (533 MHz) – read cycle
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 80
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Electrical Specifications
3.8.2 eMMC on SDC1
See Section 3.10.1 for secure digital interface details.
3.9 Multimedia
Multimedia parameters requiring performance specification are addressed in this section.
3.9.1 Camera interfaces
The MSM8x16 supports two MIPI_CSIs.
 CSI0 is a single 4-lane CSI
 CSI1 is a 2-lane CSI
t(dqsck) DQS access time from clock 2.50 – 5.50 ns
t(dqsq) DQS to DQ skew limit – – 0.165 ns
t(qhs) Data hold skew factor – – 0.713 ns
t(rpre) Read preamble 0.9 – – t(ck)
LPDDR3 (533 MHz) – write cycle
t(ds) DQ and DM input setup time before DQS 0.175 – – ns
t(dh) DQ and DM input hold time after DQS 0.175 – – ns
t(dqsh) DQS input high-level width 0.40 – – t(ck)
t(dqsl) DQS input low-level width 0.40 – – t(ck)
t(dqss) First DQS latching transition 0.75 – 1.25 t(ck)
t(dss) DQS falling edge to CK setup time 0.2 – – t(ck)
t(dsh) DQS falling edge hold time after CK 0.2 – – t(ck)
Table 3-16 DDR SDRAM read and write timing specifications (cont.)
Parameter Comments Min Typ Max Unit
Table 3-17 Supported MIPI_CSI standards and exceptions
Applicable standard Feature exceptions MSM variations
MIPI Alliance Specification for D-PHY, v0.65 and
v0.9/v1.0, October 8, 2007
http://www.mipi.org/specifications/physical-layer
(Complete specifications are available to MIPI
members only.)
Supports only
unidirectional data
receiving.
None
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 81
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Electrical Specifications
3.9.2 Audio support
The MSM8x16 device provides the system's audio functions with the analog audio codec
integrated into PM8916 device. A proprietary audio PDM interface through GPIO[63:68] was
used for transmission of audio data with PM8916 integrated analog codec. Refer to PM8916
Device Specification (80-NK808-1) for its performance characteristics.
MSM audio-related audio interface that support other audio devices included:
 I2S – Section 3.10.4
 I2C – Section 3.10.5
3.9.3 Display support
The MSM8x16 supports a 4-lane MIPI_DSI.
3.10 Connectivity
The connectivity functions supported by the MSM8x16 device that require electrical specifications
include:
 Secure digital (SD), including SD cards and multimedia cards (MMC)
 High-speed universal serial bus/on-the-go (host mode only) with built-in physical layer (PHY)
 Inter-IC sound (I2S) interfaces
 Touch screen connections
 Through proper configuration of the six BLSP ports:
 Universal asynchronous receiver/transmitter (UART) ports
 User identity module (UIM) ports, including dual-voltage options
 Inter-integrated circuit (I2C) interfaces
 Serial peripheral interface (SPI) ports
Pertinent specifications for these functions are included in the following subsections:
Table 3-18 Supported MIPI_DSI standards and exceptions
Applicable standard Feature exceptions MSM variations
MIPI Alliance Specification v1.01 for Display Serial
Interface
http://www.mipi.org/specifications/display-interface
(Specifications are available to MIPI members only.)
None None
MIPI D-PHY Specification v0.65, v0.81, v0.90
http://www.mipi.org/specifications/physical-layer
(Complete specifications are available to MIPI
members only.)
None None
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 82
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Electrical Specifications
NOTE In addition to reviewing the following hardware specifications, also be sure to review
the latest software release notes for software-based performance features or
limitations.
3.10.1 Secure digital interfaces
Table 3-19 Supported SD standards and exceptions
Applicable standard Feature exceptions Device variations
Multi Media Card Host Specification, version 4.4.1
http://www.jedec.org/
(Available for free download.)
None Timing specifications – see
Figure 3-12 and Table 3-20
Secure Digital: Physical Layer Specification, version 3.0
https://www.sdcard.org/downloads/pls/
(Simplified version of the Physical Layer Specification is
available for free download.)
None
SDIO Card Specification, version 2.0
https://www.sdcard.org/downloads/pls/simplified_
specs/archive/partE1_200.pdf
(Simplified specification version 3.00 is available for free
download.)
None
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 83
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Electrical Specifications
Figure 3-12 Secure digital interface timing
Case 1 – single data rate
t(cdvrd)
t(dvrd)
t(chrd)
t(dhrd)
t(csurd)
t(dsurd)
SDCx_CLK
Read
Write
t(pddwr)
t(pdcwr)
Case 2 – double data rate
t(csurd) t(chrd)
SDCx_CLK
Command
Read
Command
Write
t(pdcwr)
t(dsurd) t(dhrd) t(dsurd) t(dhrd)
Data Read
Data Write
t(pddwr) t(pddwr)
Table 3-20 Secure digital interface timing
Parameter Min Typ Max Unit
Single data rate (SDR) mode – SDC1 up to 200 MHz
t(cvdrd) Command valid 2.4 – – ns
t(dvdrd) Data valid 2.4 – – ns
t(pddwr) Propagation delay on data write -1.45 – 0.85 ns
t(pdcwr) Propagation delay on command write -1.45 – 0.85 ns
Double data rate (DDR) mode – SDC1 up to 52 MHz
t(chrd) Command hold 1.5 – – ns
t(csurd) Command setup 5.53 – – ns
t(dhrd) Data hold 1.5 – – ns
t(dsurd) Data setup 1.65 – – ns
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 84
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Electrical Specifications
3.10.2 UIM interface
t(pddwr) Propagation delay on data write 2.5 – 6.15 ns
t(pdcwr) Propagation delay on command write -7.85 – 2.65 ns
SDR mode – SDC2 up to 208 MHz
t(cvdrd) Command valid 2.4 – – ns
t(dvdrd) Data valid 2.4 – – ns
t(pddwr) Propagation delay on data write -1.36 – 0.76 ns
t(pdcwr) Propagation delay on command write -1.36 – 0.76 ns
DDR mode – SDC2 up to 50 MHz
t(chrd) Command hold 1.5 – – ns
t(csurd) Command setup 6.3 – – ns
t(dhrd) Data hold 1.5 – – ns
t(dsurd) Data setup 2 – – ns
t(pddwr) Propagation delay on data write 0.8 – 6 ns
t(pdcwr) Propagation delay on command write -8.2 – 3 ns
SDR mode – SDC2 up to 100 MHz
t(chrd) Command hold 1.5 – – ns
t(csurd) Command setup 2.5 – – ns
t(dhrd) Data hold 1.5 – – ns
t(dsurd) Data setup 2.5 – – ns
t(pddwr) Propagation delay on data write -3.7 – 1.5 ns
t(pdcwr) Propagation delay on command write -3.7 – 1.5 ns
Table 3-20 Secure digital interface timing (cont.)
Parameter Min Typ Max Unit
Table 3-21 Supported UIM standards and exceptions
Applicable standard Feature exceptions MSM variations
ISO/IEC 7816-3
http://webstore.ansi.org/
(Available to ANSI Site Licensees or for a fee).
None None
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 85
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Electrical Specifications
3.10.3 USB interfaces
3.10.4 I2S interface
The MI2S (multiple I2S) interface for microphone and speaker functions is supported by the
MSM8x16.
Table 3-22 Supported USB standards and exceptions
Applicable standard Feature exceptions Device variations
Universal Serial Bus Specification, Revision 2.0
(April 27, 2000 or later)
http://www.usb.org/developers/docs/
(Available for free download.)
None Operating voltages, system
clock, and VBUS – see
Table 3-23
On-The-Go Supplement to the USB 2.0 Specification
(June 24, 2003, Revision 1.0A or later)
http://www.usb.org/developers/docs/
(Available for free download as part of the USB 2.0
Supports host mode
aspect of OTG only
None
Table 3-23 Device-specific USBPHY specifications
Parameter Comments Min Typ Max Unit
Supply voltages
Dual-supply (see Table 3-3 for specifications)
VDD_USB_1P8
VDD_USB_3P3
–
–
1.80
3.075
–
–
V
V
USB_SYSCLK
Frequency 19.2 MHz clock is required. – 19.2 – MHz
Clock deviation -400 – 400 ppm
Jitter (peak-to-peak) 0.5 to 1.75 MHz 0 – 60 ps
Duty cycle 40 – 60 %
Low-level input voltage (VIL) – – 0.85 V
High-level input voltage (VIH) 1.27 – – V
USB_VBUS
Valid USB_HS_VBUS detection voltage 2.00 – 5.25 V
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 86
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Electrical Specifications
The following information applies to MI2S.
Figure 3-13 I2S timing diagram
Table 3-24 Supported I2S standards and exceptions
Applicable standards Feature exceptions MSM variations
Phillips I2S Bus Specifications revised June 5, 1996
http://www.classic.nxp.com/acrobat_
download2/various/I2SBUS.pdf
(Available for free download.)
None When an external SCK clock
is used, a duty cycle between
45% to 55% is required.
High-level I2S timing
SCK
SD and WS
transmitter
T
t(HC)
t(htr)
SCK
WS
SD LSB MSB LSB MSB
WORD (n – 1)
RIGHT CHANNEL WORD (n) LEFT CHANNEL WORD (n + 1)
RIGHT CHANNEL
V(hi) = 2.0 V
V(lo) = 0.8 V
t(LC)
t(dtr)
SD and WS
receiver
t(sr) t(hr)
I2S timing details – Tx & Rx
Table 3-25 I2S interface timing
Parameter Comments 1 Min Typ Max Unit
Using internal SCK
Frequency – – 12.288 MHz
T Clock period 81.380 – – ns
t(HC) Clock high 0.45 · T – 0.55 · T ns
t(LC) Clock low 0.45 · T – 0.55 · T ns
t(sr) SD and WS input setup time 16.276 – – ns
t(hr) SD and WS input hold time 0 – – ns
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 87
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Electrical Specifications
3.10.5 I2C interface
3.10.6 Serial peripheral interface
The MSM8x16 supports SPI as a master only. Any one of the six BLSP ports can be configured as
an SPI master:
 BLSP @ 52 MHz (see Table 3-27)
 BLSP @ 26 MHz (see Table 3-28)
Figure 3-14 SPI master timing diagram
t(dtr) SD and WS output delay – – 65.100 ns
t(htr) SD and WS output hold time 0 – – ns
Using external SCK
Frequency – – 12.288 MHz
T Clock period 81.380 – – ns
t(HC) Clock high 0.45 · T – 0.55 · T ns
t(LC) Clock low 0.45 · T – 0.55 · T ns
t(sr) SD and WS input setup time 16.276 – – ns
t(hr) SD and WS input hold time 0 – – ns
t(dtr) SD and WS output delay – – 65.100 ns
t(htr) SD and WS output hold time 0 – – ns
1. Load capacitance is between 10 and 40 pF.
Table 3-25 I2S interface timing (cont.)
Parameter Comments 1 Min Typ Max Unit
Table 3-26 Supported I2C standards and exceptions
Applicable standard Feature exceptions MSM variations
I2C Specification, version 5.0, October 2012 None Multimaster is not supported
50% clock duty cycle is shown but is not a requirement
SPI_CLK
SPI_DATA_MOSI
T
t(mov)
SPI_DATA_MISO
t(mis) t(mih)
t(mov) value is positive if after clock transition (shown); negative if before)
SPI_CS_N SPI_CS_N to SPI_CLK timing is fixed at 1 clock period
T
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 88
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Electrical Specifications
3.11 Internal functions
Some internal functions require external interfaces to enable their operation. These include clock
generation, modes and resets, and JTAG functions – as specified in the following subsections.
3.11.1 Clocks
Clocks that are specific to particular functions are addressed in the corresponding sections of this
document. Others are specified here.
3.11.1.1 19.2 MHz XO input
Figure 3-15 XO timing parameters
Table 3-27 SPI master timing characteristics at 48 MHz
Parameter Comments Min Typ Max Unit
T 1 SPI clock period: 48 MHz max 20.0 – – ns
t(ch) Clock high 9.0 – – ns
t(cl) Clock low 9.0 – – ns
t(mov) Master output valid -5.0 – 5.0 ns
t(mis) Master input setup 5.0 – – ns
t(mih) Master input hold 1.0 – – ns
1. The minimum clock period includes 1% jitter of the maximum frequency.
Table 3-28 SPI master timing characteristics at 26 MHz
Parameter Comments Min Typ Max Unit
T SPI clock period: 26 MHz max 38 – – ns
t(ch) Clock high 17 – – ns
t(cl) Clock low 17 – – ns
t(mov) Master output valid -5 – 5 ns
t(mis) Master input setup 3 – – ns
t(mih) Master input hold 1 – – ns
XO
T
t(xoh) t(xol) t()
T
t(xoh)
Average
(DC component)
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 89
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Electrical Specifications
3.11.1.2 Sleep clock
Figure 3-16 Sleep-clock timing parameters
3.11.2 Modes and resets
Mode and reset functions are basic digital I/Os that meet the performance specifications presented
in Section 3.6.
Table 3-29 XO timing parameters
Parameter Comments 1 Min Typ Max Unit
t(xoh) XO logic high 22.6 – 29.5 ns
t(xol) XO logic low 22.6 – 29.5 ns
T XO clock period – 52.083 – ns
1/T Frequency 19.2 MHz must be used. – 19.2 – MHz
1. See GPS Quality, 19.2 MHz 2520 Package Size, Crystal and TH + Xtal Mini-Specification (80-V9690-24) for more
details.
Sleep clock
T
t(xoh) t(xol)
Average
(DC component)
Vpp
Table 3-30 Sleep-clock timing parameters
Parameter Comments Min Typ Max Unit
t(xoh) Sleep-clock logic high 4.58 – 25.94 µs
t(xol) Sleep-clock logic low 4.58 – 25.94 µs
T Sleep-clock period – 30.518 – µs
F Sleep-clock frequency F = 1/T – 32.768 – kHz
Vpp Peak-to-peak voltage – 1.8 – V
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 90
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Electrical Specifications
3.11.3 JTAG
Figure 3-17 JTAG-interface timing diagram
3.12 RF and power management interfaces
The supported chipset and RF front-end (RFFE) interfaces are listed in Table 3-32 and Table 3-33,
respectively. The digital I/Os must meet the logic-level requirements specified in Section 3.6. The
Rx and Tx baseband interfaces are proprietary, and therefore are not specified.
3.12.1 RF front-end (RFFE)
The maximum operation frequency of SCLK is 26 MHz, although lower rates may be utilized. A
Slave might not be able to support a 26 MHz clock frequency during a read operation. In this case,
known as Half Speed operation, a 13 MHz clock frequency may be implemented for only the read
back.
t(do)
t(htdi)
t(sutdi)
t(htms)
t(sutms)
t(tckh) t(tckl)
t(tckcy)
TCK
TMS
TDI
TDO
Table 3-31 JTAG-interface timing characteristics
Parameter Comments Min Typ Max Unit
t(tckcy) TCK period 50 – – ns
t(tckh) TCK pulse width high 20 – – ns
t(tckl) TCK pulse width low 20 – – ns
t(sutms) TMS input setup time 5 – – ns
t(htms) TMS input hold time 20 – – ns
t(sutdi) TDI input setup time 5 – – ns
t(htdi) TDI input hold time 20 – – ns
t(do) TDO data-output delay – – 15 ns
Table 3-32 Supported RFFE standards and exceptions
Applicable standard Feature exceptions MSM variations
MIPI Alliance Specification for RF Front-End Control
Interface version 1.0
None None
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 91
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Electrical Specifications
3.12.2 System power management interface (SPMI)
Table 3-33 RFFE data
Symbol Description
Half speed device Full speed device
Units
Min Max Min Max
Tsclkoh Clock output high time 24 11.25 ns
Tsclkol Clock output low time 24 11.25 ns
Tsclkotr Clock output transition (rise/fall) time1 3.5 10 3.5 6.5 ns
Tsclkdch Clock output duty cycle high time2,3 45 55 45 55 ns
Tsclkdcl Clock output duty cycle low time2,3 45 55 45 55 ns
Table 3-34 Rx/Tx data
Parameter Description LSL USL units
Tsu Rx Data setup time w.r.t falling edge of
clock
15.75 N/A ns
Thd Rx Data hold time w.r.t falling edge of
clock
0 N/A ns
Tpd Tx data output delay w.r.t rising edge of
clock
NA 10.25 ns
TclHigh Tx clock duty cycle 0.45*Tck 0.55*Tck ns
Table 3-35 Supported SPMI standards and exceptions
Applicable standard Feature exceptions MSM variations
MIPI Alliance Specification for System Power
Management Interface (SPMI) version 1.0
None None
Table 3-36 Supported SPMI standards and exceptions
Interface Parameter Description Target frequency Spec min Spec
max
Units
SPMI tsu Input data set up time 19.2 MHz 1 1 ns
thd Input data hold time 5 5 ns
tdataZ data release time - 11 ns
tpd Output data delay - 11 ns
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 92
Confidential and Proprietary – Qualcomm Technologies, Inc.
4 Mechanical Information
4.1 Device physical dimensions
The MSM8x16 is available in the 760-pin nanoscale package (NSP) that includes dedicated
ground pins for improved grounding, mechanical strength, and thermal continuity. The 760 NSP
has a 14.0 mm × 12.0 mm body with a maximum height of 0.96 mm. Pin A1 is located by an
indicator mark on the top of the package, and by the ball pattern when viewed from below. A
simplified version of the 760NSP outline drawing is shown in Figure 4-1.
NOTE Click the link below to download the 760 NSP outline drawing (NT90-NK468-1)
from the CDMA Tech Support website.
https://downloads.cdmatech.com/qdc/drl/objectId/090100148263475c
https://downloads.cdmatech.com/qdc/drl/objectId/09010014826f4811
If you have permission to view the document, a prompt will be presented for initiating
the download.
NOTE Subscribe to the package drawing to be notified of any changes.
Click the Help button to download the latest revision of Using CDMATech Support
Documents and Downloads User Guide (80-V7273-1). This document includes
subscription instructions.
MSM8216/MSM8616/MSM8916 Device Specification Mechanical Information
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 93
Confidential and Proprietary – Qualcomm Technologies, Inc.
Figure 4-1 760 NSP (14.0 × 12.0 × 0.96 mm) outline drawing
NOTE This is a simplified outline drawing. Click the link below to download the complete, up-to-date package outline drawing:
https://downloads.cdmatech.com/qdc/drl/objectId/090100148263475c
https://downloads.cdmatech.com/qdc/drl/objectId/09010014826f4811
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 94
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Mechanical Information
4.2 Part marking
Figure 4-2 MSM8x16 device marking (top view, not to scale)
4.2.1 Specification-compliant devices
NOTE For complete marking definitions of all MSM8x16 variants and revisions, refer to the
MSM8216/MSM8616/MSM8916 Device Revision Guide (80-NK807-4).
Ball A1 identifier
Additional line
2
3
4
060[
);;;;;;;
$6<::55
1
3%%
5
48$/&200
Table 4-1 MSM8x16 device marking line definitions
Line Marking Description
1 QUALCOMM Qualcomm® name or logo
2 MSM8x16 QTI product name
x = 2, 6, 9 (see Table 4-2 for differences)
3 PBB P = product configuration code (see Table 4-2)
BB = feature code (see Table 4-2)
An additional line may appear on the part marking for some samples; this is manufacturing information that
is only relevant to QTI and QTI suppliers.
4 FXXXXXXX F = supply source code
 F = A (for GF)
 F = B (for TSMC)
 F = C (for Samsung)
XXXXXXX = traceability number
5 ASYWWRR A = assembly site code
 A = U (Amkor, Shanghai)
 A = K (SPIL Taiwan)
 A = V (STATSChipPAC, China)
 A = E (ASE, Kaohsiung, Taiwan)
S = assembly sequence number
Y = single-digit year code
WW = work week (based on calendar year)
RR = product revision (see Table 4-2)
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 95
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Mechanical Information
4.2.2 Daisy-chain devices
This information will be included in future revisions of this document.
4.3 Device ordering information
4.3.1 Specification-compliant devices
This device can be ordered using the identification code shown in Figure 4-3 and explained below.
Figure 4-3 MSM8x16 device identification code
Device ordering information details for all samples available to date are summarized in Table 4-2.
Example
Device ID
code
Symbol
definition
Product
name
AAA-AAAA
Config
code
P
Number
of pins
Package
type
Shipping
package
Product
version
Source
code
Feature
code
—— — — —— CCC DDD EE RR S BB
MSM-8916 0 760 NSP TR 00 0 VV —— — — ——
MSM8216/MSM8616/MSM8916 Device Specification Mechanical Information
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 96
Confidential and Proprietary – Qualcomm Technologies, Inc.
Table 4-2 Device identification code/ordering information details
Device
Product
configuration
code (P)
Product
revision
(RR)
HW revision
number FEATURE_ID Sample type HW revision S value
1. “S” is the source configuration code that identifies all of the qualified die fabrication-source combinations available at the time a particular sample type was shipped.
S values are defined in Table 4-3.
BB
value 2
2. “BB” is the feature code that identifies an IC’s specific feature set, which distinguishes it from other versions or variants. All feature sets available at the time of this
document’s release are defined in Table 4-2.
NOTE Devices with date code (YWW) = 1423 or later are CS devices
Comments
MSM8916 3 00 0x0 0705 0E1 03 ES/CS v 1.0 0 VV LTE/UMTS/CDMA/TDS/GSM, 1.2 GHz A53,
1920 x 1080, 8 MP/13 MP
4 00 0x0 0705 0E1 04 ES/CS v 1.0 0 VV LTE/UMTS/TDS/GSM, 1.2 GHz A53,
1920 x 1080, 8 MP/13 MP
5 00 0x0 0705 0E1 05 ES/CS v 1.0 0 VV LTE/UMTS/CDMA/TDS/GSM, 1.2 GHz A53,
1280 x 720, 8 MP/13 MP
6 00 0x0 0705 0E1 06 ES/CS v 1.0 0 VV LTE/UMTS/TDS/GSM, 1.2 GHz A53,
1280 x 720, 8 MP/13 MP
7 00 0x0 0705 0E1 07 ES/CS v 1.0 0 VV LTE/TDS/GSM, 1.2 GHz A53, 1280 x 720,
8 MP/13 MP
0 00 0x0 0705 0E1 00 ES/CS v 1.0 0 VV LTE/UMTS/CDMA/TDS/GSM, 1.2 GHz A53,
qHD, 8 MP/13 MP
1 00 0x0 0705 0E1 01 ES/CS v 1.0 0 VV LTE/UMTS/TDS/GSM, 1.2 GHz A53, qHD,
8 MP/13 MP
8 00 0x0 0705 0E1 08 ES/CS v 1.0 0 VV LTE/TDS/GSM, 1.2 GHz A53, qHD, 8 MP/13 MP
MSM8216 1 00 0x0 0707 0E1 01 ES/CS v 1.0 0 VV UMTS/TDS/GSM, 1.2 GHz A53, 1280 x 720,
8 MP/13 MP
MSM8616 1 00 0x0 0709 0E1 01 ES/CS v 1.0 0 VV CDMA/UMTS/TDS/GSM, 1.2 GHz A53,
1280 x 720 8 MP/13 MP
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 97
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Mechanical Information
4.3.2 Daisy-chain devices
This information will be included in future revisions of this document.
4.4 Device moisture-sensitivity level
Plastic-encapsulated surface mount packages are susceptible to damage induced by absorbed
moisture and high temperature. A package’s moisture-sensitivity level (MSL) indicates its ability
to withstand exposure after it is removed from its shipment bag, while it is on the factory floor
awaiting PCB installation. A low MSL rating is better than a high rating; a low MSL device can be
exposed on the factory floor longer than a high MSL device. All pertinent MSL ratings are
summarized in Table 4-4.
QTI follows the latest IPC/JEDEC J-STD-020 standard revision for moisture-sensitivity
qualification. The MSM8x16 device samples are currently classified as MSL3 at 255 (+5, -0)°C.
This qualification temperature (255 (+5, -0)°C) should not be confused with the peak temperature
within the recommended solder reflow profile (see Section 6.2.3 for more details).
Table 4-3 Source configuration code
S value Die F value = A F value = B F value = C
0 Digital GF TSMC Samsung
Other columns and rows will be added in future revisions of this document, if needed.
Table 4-4 MSL ratings summary
MSL Out-of-bag floor life Comments
1 Unlimited ≤ 30°C / 85% RH
2 1 year ≤ 30°C / 60% RH
2a 4 weeks ≤ 30°C / 60% RH
3 168 hours ≤ 30°C / 60% RH
4 72 hours ≤ 30°C / 60% RH
5 48 hours ≤ 30°C / 60% RH
5a 24 hours ≤ 30°C / 60% RH
6 Mandatory bake before use. After bake, must be re-flowed
within the time limit specified on the label.
≤ 30°C / 60% RH
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 98
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Mechanical Information
4.5 Thermal characteristics
Rather than provide thermal resistance values JC and JA, validated thermal-package models are
provided through the CDMA Tech Support website. A thermal model for each device is provided
within the Power_Thermal subfolder for each chipset family. Designers can obtain thermal
resistance values by conducting their own thermal simulations.
NOTE Click the link below to download the MSM8x16 thermal-package model from the
CDMA Tech Support website.
The thermal package models can be found in downloads.cdma.tech.com under the
folder:
library/8916/HW/Power_Thermal/Packages Thermal Models
If you have permission to view the document, a prompt will be presented for initiating
the download.
NOTE Subscribe to the MSM8x16 thermal-package model to be notified of any changes.
Click the Help button to download the latest revision of Using CDMA Tech Support
Documents and Downloads User Guide (80-V7273-1). This document includes
subscription instructions
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 99
Confidential and Proprietary – Qualcomm Technologies, Inc.
5 Carrier, Storage, & Handling Information
5.1 Carrier
5.1.1 Tape and reel information
All QTI carrier tape systems conform to EIA-481 standards.
A simplified sketch of the MSM8x16 tape carrier is shown in Figure 5-1, including the proper part
orientation, maximum number of devices per reel, and key dimensions.
Figure 5-1 Carrier tape drawing with part orientation
Tape-handling recommendations are shown in Figure 5-2.
Pin A1 faces feed holes
Taping direction Tape width
Pocket pitch
Tape width:
Units per reel: Pocket pitch:
Reel diameter:
Hub diameter:
Tape feed: Single
2000
330 mm
178 mm
24 mm
16 mm
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 100
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Carrier, Storage, & Handling Information
Figure 5-2 Tape handling
5.2 Storage
5.2.1 Bagged storage conditions
MSM8x16 devices delivered in tape and reel carriers must be stored in sealed, moisture barrier,
anti-static bags. If the storage environment maintains an ambient temperature lower than 40°C and
relative humidity less than 90%, the expected shelf life is at least 24 months.
5.2.2 Out-of-bag duration
The out-of-bag duration is the time a device can be on the factory floor before being installed onto
a PCB. It is defined by the device MSL rating, as described in Section 4.4.
5.3 Handling
Tape handling was discussed in Section 5.1.1. Other (IC-specific) handling guidelines are
presented below.
5.3.1 Baking
It is not necessary to bake the MSM8x16 if the conditions specified in Section 5.2.1 and
Section 5.2.2 have not been exceeded.
It is necessary to bake the MSM8x16 if any condition specified in Section 5.2.1 or Section 5.2.2
has been exceeded. The baking conditions are specified on the moisture-sensitive caution label
attached to each bag; see ASIC Packing Methods and Materials Specification (80-VK055-1) for
details.
CAUTION If baking is required, the devices must be transferred into trays that can be baked to at
least 125°C. Devices should not be baked in tape and reel carriers at any temperature.
Handle only at the edges
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 101
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Carrier, Storage, & Handling Information
5.3.2 Electrostatic discharge
Electrostatic discharge (ESD) occurs naturally in laboratory and factory environments. An
established high-voltage potential is always at risk of discharging to a lower potential. If this
discharge path is through a semiconductor device, it may result in destructive damage.
ESD countermeasures and handling methods must be developed and used to control the factory
environment at each manufacturing site.
QTI products must be handled according to the ESD Association standard: ANSI/ESD
S20.20-1999, Protection of Electrical and Electronic Parts, Assemblies, and Equipment.
Refer to Chapter 7 for the MSM8x16 device ESD ratings.
5.4 Barcode label and packing for shipment
Refer to the ASIC Packing Methods and Materials Specification (80-VK055-1) for all
packing-related information, including barcode-label details.
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 102
Confidential and Proprietary – Qualcomm Technologies, Inc.
6 PCB Mounting Guidelines
6.1 RoHS compliance
The device is lead-free and RoHS-compliant. Its SnAgCu solder balls use SAC305 composition on
the top and SAC125/Ni on the bottom. QTI defines its lead-free (or Pb-free) semiconductor
products as having a maximum lead concentration of 1000 ppm (0.1% by weight) in raw
(homogeneous) materials and end products. QTI package environmental programs, RoHS
compliance details, and tables defining pertinent characteristics of all QTI ASIC products are
described in the IC Package Environmental Roadmap (80-V6921-1).
6.2 SMT parameters
This section describes QTI board-level characterization process parameters. It is included to assist
customers with their SMT process development; it is not intended to be a specification for their
SMT processes.
6.2.1 Land pad and stencil design
The land pattern and stencil recommendations presented in this section are based on QTI internal
characterizations for lead-free solder pastes on an eight-layer PCB, built primarily to the
specifications described in JEDEC JESD22-B111.
QTI recommends characterizing the land patterns according to each customer's processes,
materials, equipment, stencil design, and reflow profile prior to PCB production. Optimizing the
solder stencil pattern design and print process is critical to ensure print uniformity, decrease
voiding, and increase board-level reliability.
General land pattern guidelines:
 Non-solder-mask-defined (NSMD) pads provide the best reliability.
 Keep the solderable area consistent for each pad, especially when mixing via-in-pad and
non-via-in-pad in the same array.
 Avoid large solder mask openings over ground planes.
 Traces for external routing are recommended to be less than or equal to half the pad diameter,
to ensure consistent solder-joint shapes.
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 103
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification PCB Mounting Guidelines
One key parameter that should be evaluated is the ratio of aperture area to sidewall area, known as
the area ratio (AR). QTI recommends square apertures for optimal solder-paste release. In this
case, a simple equation can be used relating the side length of the aperture to the stencil thickness
(as shown and explained in Figure 6-1). Larger area ratios enable better transfer of solder paste to
the PCB, minimize defects, and ensure a more stable printing process. Inter-aperture spacing
should be at least as thick as the stencil; otherwise, paste deposits may bridge.
Figure 6-1 Area ratio (AR)
QTI provides an example PCB land pattern and stencil design for the 760 NSP.
NOTE Click the link below to download the 760 NSP land/stencil drawing (LS90-NG134-1)
from the CDMA Tech Support website.
https://downloads.cdmatech.com/qdc/drl/objectId/09010014820ce73e
If you have permission to view the document, a prompt will be presented for initiating
the download.
NOTE Subscribe to the land/stencil drawing to be notified of any changes.
Click the Help button to download the latest revision of Using CDMA Tech Support
Documents and Downloads User Guide (80-V7273-1). This document includes
subscription instructions.
6.2.2 Reflow profile
Reflow profile conditions typically used by QTI for lead-free systems are listed in Table 6-1, and
are shown in Figure 6-2.
T
AR = L / 4T
L
L
Aperture
Table 6-1 QTI typical SMT reflow profile conditions (for reference only)
Profile stage Description Temp range Condition
Preheat Initial ramp < 150°C 3°C/sec max
Soak Flux activation 150 to 190°C 60 to 75 sec
Ramp Transition to liquidus (solder-paste melting point) 190 to 220°C < 30 sec
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 104
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification PCB Mounting Guidelines
Figure 6-2 QTI typical SMT reflow profile
6.2.3 SMT peak package-body temperature
This document states a peak package-body temperature in three other places within this document;
without explanation, they may appear to conflict. The three places are listed below, along with an
explanation of the stated value and its meaning within that section’s context.
 Section 4.4 – Device moisture-sensitivity level
MSM8x16 devices are classified as MSL3@255°C. The temperature (255°C) included in this
designation is the lower limit of the range stated for moisture resistance testing during the
device qualification process, as explained immediately below.
 Section 7.1 – Reliability qualifications summary
One of the tests conducted for device qualification is the moisture resistance test. QTI follows
J-STD-020-C, and hits a peak reflow temperature that falls within the range of 260°C +0/-5°C
(255°C to 260°C).
 Section 6.2.2 – Reflow profile
During a production board’s reflow process, the temperature experienced by the package must
be controlled. Obviously, the temperature must be high enough to melt the solder and provide
reliable connections, but it must not go so high that the device can be damaged. The
recommended peak temperature during production assembly is 245°C. This is comfortably
Reflow Time above liquidus 220 to 245°C 1 50 to 70 sec
Cool down Cool rate – ramp to ambient < 220°C 6°C/sec max
1. During the reflow process, the recommended peak temperature is 245°C (minimum). This temperature should not
be confused with the peak temperature reached during MSL testing, as described in Section 6.2.3.
Table 6-1 QTI typical SMT reflow profile conditions (for reference only) (cont.)
Profile stage Description Temp range Condition
150
200
250
100
t t+20 t+40 t+60 t+80 t+100 t+120 t+140 t+160 t+180 t+200
Tim e (sec)
Temperature (C)
Preheat
Soak
Ramp
Reflow
Cool down
3C/sec max
6C/sec max
Stay above 220 C for 50 to 70 seconds
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 105
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification PCB Mounting Guidelines
above the solder melting point (220°C), yet well below the proven temperature reached during
qualification (255°C or more).
6.2.4 SMT process verification
QTI recommends verification of the SMT process prior to high-volume board assembly, including:
 In-line solder-paste deposition monitoring
 Reflow profile measurement and verification
 Visual and x-ray inspection after soldering to confirm adequate alignment, solder voids,
solder-ball shape, and solder bridging
 Cross-section inspection of solder joints for wetting, solder-ball shape, and voiding
6.3 Daisy-chain components
Daisy-chain packages use the same processes and materials as actual products; they are
recommended for SMT characterization and board-level reliability testing. In fact, all SMT
process recommendations described above can be performed using daisy-chain components.
Ordering information is given in Section 4.3.2.
Daisy-chain PCB routing recommendations are available for download.
NOTE Click the link below to download the 760 NSP daisy-chain interconnect drawing
(DS90-NK468-1) from the CDMA Tech Support website.
https://downloads.cdmatech.com/qdc/drl/objectId/09010014824e2c61
If you have permission to view the document, a prompt will be presented for initiating
the download.
NOTE Subscribe to the daisy-chain interconnect drawing to be notified of any changes.
Click the Help button to download the latest revision of Using CDMA Tech Support
Documents and Downloads User Guide (80-V7273-1). This document includes
subscription instructions.
6.4 Board-level reliability
QTI conducts characterization tests to assess the device’s board-level reliability, including the
following physical tests on evaluation boards:
 Drop shock (JESD22-B111)
 Temperature cycling (JESD22-A104)
 Cyclic bend testing – optional (JESD22-B113)
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 106
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification PCB Mounting Guidelines
Board-level reliability data is available for download.
NOTE Click the link below to download the 760 NSP board-level reliability data
(BR80-NK468-1) from the CDMA Tech Support website.
This link will be included in future revisions of this document.
If you have permission to view the document, a prompt will be presented for initiating
the download.
NOTE Subscribe to the board-level reliability document to be notified of any changes.
Click the Help button to download the latest revision of Using CDMA Tech Support
Documents and Downloads User Guide (80-V7273-1). This document includes
subscription instructions.
6.5 High-temperature warpage
QTI measures high-temperature warpage using a shadow moire system; the measured data is
available for download.
NOTE Click the link below to download the 760 NSP high-temperature warpage data
(WR80-NK468-1) from the CDMA Tech Support website.
https://downloads.cdmatech.com/qdc/drl/objectId/09010014827d9ec5
If you have permission to view the document, a prompt will be presented for initiating
the download.
NOTE Subscribe to the high-temperature warpage document to be notified of any changes.
Click the Help button to download the latest revision of Using CDMA Tech Support
Documents and Downloads User Guide (80-V7273-1). This document includes
subscription instructions.
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 107
Confidential and Proprietary – Qualcomm Technologies, Inc.
7 Part Reliability
7.1 Reliability evaluation summary
7.1.1 MSM8x16 reliability evaluation report for device from GF-F8
NOTE Cum FITs from multiple products under GF F8, 28 nm LP process.
Table 7-1 Silicon reliability results
Tests, standards, and conditions Sample size Result
DPPM rate (ELFR) and average failure rate (AFR)
in FIT () failure in billion device-hours
HTOL: JESD22-A108-D
Total samples from three different wafer lots
356 DPPM < 1000
Cum FITs < 25 FITs
Mean time to failure (MTTF) t = 1/ in million hours
Total samples from three different wafer lots
356 > 40
ESD – human-body model (HBM) rating:
JESD22-A114-F
Total samples from one wafer lot
3 2000 V
ESD – charge-device model (CDM) rating:
JESD22-C101-D
Target: 500 V
Total samples from one wafer lot
3 500 V
Latch-up (I-test):
EIA/JESD78C
Trigger current: ±100 mA; temperature: 85C
Total samples from one wafer lot
6 Pass
Latch-up (V supply overvoltage):
EIA/JESD78A
Trigger voltage: each VDD pin, stress at 1.5 × Vdd max
per device specification; temperature: 85C
Total samples from one wafer lot
6 Pass
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 108
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Part Reliability
Table 7-2 Package reliability results
Tests, standards, and conditions ATC
assembly
source
sample size
SPIL
assembly
source
sample
size
ASE
assembly
source
sample size
SCC
assembly
source
sample
size
Result
Moisture resistance test (MRT): 
J-STD-020
Reflow at 260C +0/-5C
Total samples from three different assembly
lots at each SAT
480 480 480 480 Pass
Temperature cycle: JESD22-A104-D
Temperature: -55C to 125C; number of cycles:
1000
Soak time at minimum/maximum temperature:
8–10 mins.
Cycle rate: 2 cycles per hour (CPH)
Preconditioning: JESD22-A113
MSL 1, reflow temperature: 260C +0/-5C
Total samples from three different assembly
lots at each SAT
240 240 240 240 Pass
Unbiased highly accelerated stress test:
JESD22-A118
130C/85% RH and 96 hrs duration
Preconditioning: JESD22-A113-F
MSL 1, reflow temperature: 260C +0/-5C
Total samples from three different assembly
lots at each SAT
240 240 240 240 Pass
Biased highly accelerated stress test:
JESD22-A110
130C/85% RH and 264 hrs duration
Preconditioning: JESD22-A113-F
MSL 1, reflow temperature: 260C +0/-5C
Total samples from three different assembly
lots at each SAT
**Data is bridged from the 488 NSP
12 × 12 mm package.
**Data is bridged from the 745 PNSP
12 × 12 mm package.
135* 135* 135** 135* Pass
High-temperature storage life: 
JESD22-A103-C
Temperature 150C, 500, 1000 hrs.
Total samples from three different assembly
lots at each SAT
240 240 240 240 Pass
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 109
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Part Reliability
7.1.2 MSM8x16 reliability evaluation report for device from TSMC-F15
Flammability
UL-STD-94
UL-STD-94
Note: flammability test – not required
UL-STD-94
QTI ICs are exempt from the flammability
requirements due to their sizes per UL/EN
60950-1, as long as they are mounted on
materials rated V-1 or better. Most PWBs onto
which our ICs mounted are rated V-0 (better
than V-1).
N/A N/A N/A N/A
Physical dimensions: JESD22-B100-A
Case outline drawing: QTI internal document
Total samples from three different assembly
lots at each SAT
75 75 75 75 Pass
Solder ball shear: JESD22-B117
Total samples from three different assembly
lots at each SAT
30 30 30 30 Pass
Internal/external visual
Total samples from three different assembly
lots at each SAT
75 75 75 75
Pass
Table 7-2 Package reliability results (cont.)
Tests, standards, and conditions ATC
assembly
source
sample size
SPIL
assembly
source
sample
size
ASE
assembly
source
sample size
SCC
assembly
source
sample
size
Result
Table 7-3 Silicon reliability results
Tests, standards, and conditions Sample size Result
DPPM rate (ELFR) and average failure rate (AFR) in
FIT () failure in billion device-hours
HTOL: JESD22-A108-D
Total samples from three different wafer lots
360 DPPM < 1000
Cum FITs < 25 FITs
Mean time to failure (MTTF) t = 1/ in million hours
Total samples from three different wafer lots
360 > 40
ESD – human-body model (HBM) rating:
JESD22-A114-F
Total samples from one wafer lot
3 2000 V
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 110
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Part Reliability
NOTE Cum FITs from multiple products under TSMC-F15, 28 nm LP process.
ESD – charge-device model (CDM) rating:
JESD22-C101-D
Target: 500 V
Total samples from one wafer lot
3 500 V
Latch-up (I-test):
EIA/JESD78C
Trigger current: ±100 mA; temperature: 85C
Total samples from one wafer lot
6 Pass
Latch-up (V supply overvoltage):
EIA/JESD78A
Trigger voltage: each VDD pin, stress at 1.5 × Vdd max
per device specification; temperature: 85C
Total samples from one wafer lot
6 Pass
Table 7-3 Silicon reliability results (cont.)
Tests, standards, and conditions Sample size Result
Table 7-4 Package reliability results
Tests, standards, and conditions ATC
assembly
source
sample size
SPIL
assembly
source
sample
size
ASE
assembly
source
sample
size
SCC
assembly
source
sample
size
Result
Moisture resistance test (MRT): 
J-STD-020
Reflow at 260C +0/-5C
Total samples from three different assembly
lots at each SAT
480 480 480 480 Pass
Temperature cycle: JESD22-A104-D
Temperature: -55C to 125C; number of
cycles: 1000
Soak time at minimum/maximum
temperature: 8–10 mins.
Cycle rate: 2 cycles per hour (CPH)
Preconditioning: JESD22-A113
MSL 1, reflow temperature: 260C +0/-5C
Total samples from three different assembly
lots at each SAT
240 240 240 240 Pass
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 111
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Part Reliability
Unbiased highly accelerated stress test:
JESD22-A118
130C/85% RH and 96 hrs. duration
Preconditioning: JESD22-A113-F
MSL 1, reflow temperature: 260C +0/-5C
Total samples from three different assembly
lots at each SAT
240 240 240 240 Pass
Biased highly accelerated stress test:
JESD22-A110
130C/85% RH and 264 hrs duration
Preconditioning: JESD22-A113-F
MSL 1, reflow temperature: 260C +0/-5C
Total samples from three different assembly
lots at each SAT
*Data is bridged from the 488 NSP
12 × 12 mm package.
**Data is bridged from the 745 PNSP
12 × 12 mm package.
135* 135* 135** 135* Pass
High-temperature storage life: 
JESD22-A103-C
Temperature 150C, 500, 1000 hrs.
Total samples from three different assembly
lots at each SAT
240 240 240 240 Pass
Flammability
UL-STD-94
UL-STD-94
Note: Flammability test – not required
UL-STD-94
QTI ICs are exempt from the flammability
requirements due to their sizes per UL/EN
60950-1, as long as they are mounted on
materials rated V-1 or better. Most PWBs
onto which our ICs mounted are rated V-0
(better than V-1).
N/A N/A N/A N/A
Physical dimensions: JESD22-B100-A
Case outline drawing: QTI internal document
Total samples from three different assembly
lots at each SAT
75 75 75 75 Pass
Table 7-4 Package reliability results (cont.)
Tests, standards, and conditions ATC
assembly
source
sample size
SPIL
assembly
source
sample
size
ASE
assembly
source
sample
size
SCC
assembly
source
sample
size
Result
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 112
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Part Reliability
7.1.3 MSM8916 reliability evaluation report for device from Samsung
NOTE Cum FITs from multiple products under the Samsung-F15, 28 nm LP process.
Solder ball shear: JESD22-B117
Total samples from three different assembly
lots at each SAT
30 30 30 30 Pass
Internal/external visual
Total samples from three different assembly
lots at each SAT
75 75 75 75 Pass
Table 7-4 Package reliability results (cont.)
Tests, standards, and conditions ATC
assembly
source
sample size
SPIL
assembly
source
sample
size
ASE
assembly
source
sample
size
SCC
assembly
source
sample
size
Result
Table 7-5 Section A: Silicon reliability results
Tests, standards, and conditions Sample size Result
DPPM rate (ELFR) and average failure rate (AFR) in
FIT () failure in billion device-hours
HTOL: JESD22-A108-D
Total samples from three different wafer lots
456 DPPM < 1000
Cum FITs < 25 FITs
Mean time to failure (MTTF) t = 1/ in million hours
Total samples from three different wafer lots
456 > 40
ESD – human-body model (HBM) rating:
JESD22-A114-F
Total samples from one wafer lot
3 2000 V
ESD – charge-device model (CDM) rating:
JESD22-C101-D
Target: 500 V
Total samples from one wafer lot
3 500 V
Latch-up (I-test):
EIA/JESD78C
Trigger current: ±100 mA; temperature: 85C
Total samples from one wafer lot
6 Pass
Latch-up (V supply overvoltage):
EIA/JESD78A
Trigger voltage: each VDD pin, stress at 1.5 × Vdd max
per device specification; temperature: 85°C
Total samples from one wafer lot
6 Pass
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 113
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Part Reliability
Table 7-6 Section B: Package reliability results
Tests, standards, and conditions ATC
assembly
source
sample size
SPIL
assembly
source
sample size
ASE
assembly
source
sample size
SCC
assembly
source
sample size
Result
Moisture resistance test (MRT): 
J-STD-020
Reflow at 260C +0/-5C
Total samples from three different
assembly lots at each SAT
480 480 480 480 Pass
Temperature cycle: JESD22-A104-D
Temperature: -55C to 125C; number
of cycles: 1000
Soak time at minimum/maximum
temperature: 8–10 mins.
Cycle rate: 2 cycles per hour (CPH)
Preconditioning: JESD22-A113
MSL 3, reflow temperature: 260C
+0/-5C
Total samples from three different
assembly lots at each SAT
240 240 240 240 Pass
Unbiased highly accelerated stress
test: JESD22-A118
130C/85% RH and 96 hrs. duration
Preconditioning: JESD22-A113-F
MSL 3, reflow temperature: 260C
+0/-5C
Total samples from three different
assembly lots at each SAT
240 240 240 240 Pass
Biased highly accelerated stress
test: JESD22-A110
130C/85% RH and 264 hrs. duration
Preconditioning: JESD22-A113-F
MSL 3, reflow temperature: 260C
+0/-5C
Total samples from three different
assembly lots at each SAT
*Data is bridged from the 488 NSP
12 × 12 mm PKG.
**Data is bridged from the 745 PNSP
12 × 12 mm PKG
135* 135* 135** 135* Pass
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 114
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Part Reliability
High-temperature storage life:
JESD22-A103-C
Temperature 150C, 500, 1000 hrs.
Total samples from three different
assembly lots at each SAT
240 240 240 240 Pass
Flammability
UL-STD-94
UL-STD-94
Note: Flammability test – not required
UL-STD-94
QTI ICs are exempt from the
flammability requirements due to their
sizes per UL/EN 60950-1, as long as
they are mounted on materials rated
V-1 or better. Most PWBs onto which
our ICs mounted are rated V-0 (better
than V-1).
N/A N/A N/A N/A
Physical dimensions: 
JESD22-B100-A
Case outline drawing: QTI internal
document
Total samples from three different
assembly lots at each SAT
75 75 75 75 Pass
Solder ball shear: JESD22-B117
Total samples from three different
assembly lots at each SAT
30 30 30 30 Pass
Internal/external visual
Total samples from three different
assembly lots at each SAT
75 75 75 75 Pass
Table 7-6 Section B: Package reliability results (cont.)
Tests, standards, and conditions ATC
assembly
source
sample size
SPIL
assembly
source
sample size
ASE
assembly
source
sample size
SCC
assembly
source
sample size
Result
80-NK807-1 Rev. J MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION 115
Confidential and Proprietary – Qualcomm Technologies, Inc.
MSM8216/MSM8616/MSM8916 Device Specification Part Reliability
7.2 Qualification sample description
Device characteristics
Device name: MSM8x16
Package type: 760 NSP
Package body size: 14 mm × 12 mm × 0.96 mm
Fab process: 28 nm CMOS
Fab sites: GF
TSMC
Samsung
Assembly sites: Amkor, Shangai
SPIL, Taiwan (SPT)
STATSChipPAC, China (SCC)
ASE, Kaohsiung, Taiwan
Solder ball pitch: 0.4 mm

Wire Expression 2
Уникальный чип, функцию которого может задать сам игрок с помощью собственного языка программирования.

Синтаксис
Синтаксис Expression 2 сильно изменился со времен прошлого Expression Chip, придется изучить немного больше команд, но это сделает ваши постройки намного более функциональными. Помните что как правило существует несколько способов написания кода, и задача может быть решена несколькими путями.

В условных операторах Expression 2 числа принимаются за "ложь", если они равны 0, в ином случае они принимаются за "истину". Функции, которые по сути возвращают "истину" или "ложь", на деле возвращают 1 и 0 соответственно.

Синтаксис	Пример	Упрощенный	Описание
#	#это комментарий		Все, что находится за знаком # считается комментарием и не будет учитываться при обработке кода (оно будет проигнорировано при запуске чипа)
#[коментарий]#	#[Это многострочный
comment]#

Все, что находится между знаками #[ и ]# считается комментарием и не будет учитываться при обработке кода (оно будет проигнорировано при запуске чипа)
if () {}	if (A) {B=C}	if (A) {D=B}	Если значение (выражение) между круглыми скобками - "истина" то выполняются операции внутри фигурных скобок.
else {}	else {A=B}		Должен следовать за if () {} или elseif () {}. Если предыдущее условие было ложным, то выполняются операции в фигурных скобках.
Оператор не обязателен.

elseif () {}	elseif (A) {B = C}		Должен следовать за if () {} или elseif () {}. Если предыдущее условие было ложным и условие в круглых скобках истинно, то выполняются операции в фигурных скобках.
Оператор не обязателен.

~	if(~Time & Time == 0) {DO stuff}		Изменялось ли значение на входе между выполнениями?
$	Opitch = Pitch + ($Pitch *3)		Возвращает разницу между выполнениями в виде числа. (Работает только с переменными типа number, vector2, vector, vector4, angle)
++	if(Count == 2 {Count++}	Count = Count + 1	Прибавляет 1 к заданной переменной.
--	if(Count == 3){Count--}	Count = Count - 1	Вычитает 1 из заданной переменной.
+=	if(Count == 4){Count += 2}	Count = Count + 2	Прибавляет число после += к заданной переменной.
-=	if(Count == 5) {Count -= 2}	Count = Count - 2	Вычитает число после -= из заданной переменной.
( ? : )	D = (A ? B : C)		Если A истина то возвращает B иначе C. Замечание: конструкция A ?: B аналогична конструкции A ? A : B
I	if (A I B) {C = 1}		Если A или B истина C=1.
&	if (A & B) {C = 1}		Если A и B истина C=1.
!	if (!A) {B = 1}		Должно предшествовать число. Возвращает 1 если A ложно (эквивалентно "A == 0").
Должно предшествовать число.
->	->Input or ->Output		Если вы используете его на входе, он возвращает 1, когда вход подсоединяется к чему либо. Если вы используете его на выходе, он возвращает количество входов присоединённых на выход.
#ifdef	#ifdef entity():setAlpha(number)		Проверяет может ли данная функция выполняться на сервере.
#else	#else entity():setModel(string)		Должно предшествовать #ifdef. Если данная функция не может использоваться на сервере запустится код после #else...
#endif	#endif		Должно предшествовать #ifdef или #else .Закрывает выражение #ifdef.
Переменные
В E2, все входы, выходы и переменные должны быть объявлены с заглавной буквы:

Синтаксис	Описание
@persist variable	Это не будет работать потому, что переменная "variable" не будет прочитана как переменная, так как она объявлена со строчной буквы, а в Expression 2 переменные нужно обозначать с заглавной буквы.
@persist Variable	Это будет работать, так как переменная "Variable" начинается с заглавной буквы.
Выражение @trigger
Выражение @trigger может выборочно разрешать и запрещать входам вызывать выполнение кода.Возможные значения: all/none, или список разрешенных входов.

Синтаксис	Описание
@trigger all	Всё по старому, изменение значения на входах всегда вызывает выполнение кода
@trigger none	Изменение значения на входах никогда не вызывает выполнение кода, его вызывает только таймер, и.т.п. функции
@trigger Time Button	Выполнение кода вызывается только при изменении значений на входах Time и Button
Выражение @model
Выражение @model устанавливает модель чипа при его первом создании.

Пример: @model models/bull/gates/processor.mdl

Циклы
Синтаксис	Пример	Описание
while () {}	while (A) {B++}	Любые инструкции в фигурных скобках будет повторяться, пока условие в круглых скобках истинно. Если условие ложно, инструкции будут пропущены и E2 будет продолжаться с конца цикла. Заметим, что условие проверяется только в самом начале каждого цикла.
for () {}	for (I = A, B[, C]) {}	Добавляет значение C переменной для каждой итерации, пока она равна значению B. Если шаг C не указан, то он будет установлен на единицу. Обратите внимание, что А и В вычисляются только один раз - если они рассчитываются из переменных, что цикл устанавливает новые значения, это не изменит число итераций.
foreach () {}	foreach(K,V:type=Table) {}	Проверяет  каждый элемент указанного типа в таблице. Назначает ключ к К и значение V. Элементы, которые не имеют определенного типа будут пропущены. Элементы могут быть добавлены, удалены или изменены, однако добавляемые элементы не будут обрабатываться в текущем цикле. Только цикл по строке индексов при использовании таблицы.
continue	if (A) {continue}	Может быть использовано только в while/for/foreach цикле. Эта команда позволяет перейти к следующей итерации (немедленно вернуться к началу цикла), пропуская следующие инструкции.
break	if (A) {break}	Может быть использовано только в while/for/foreach цикле. Эта команда позволяет немедленно выйти из цикла, пропуская следующие инструкции.
Производительность
Были проведены некоторые тесты в игре:

~3.000.000/сек арифметических операций (+-*/) на числах, 2000 операций, 200 выполнений за 0.13сек

~850.000/сек арифметических операций (+-*/) на векторах, 2000 операций, 100 выполнений за 0.23сек

Горячие Клавиши Редактора
Ctrl-Пробел Проверить (и переместить курсор на ошибку)
Ctrl-S Сохранить
Ctrl-Z Отменить
Ctrl-Y Вернуть
Ctrl-X Вырезать
Ctrl-C Копировать
Ctrl-V Вставить
Ctrl-A Выделить Всё
Ctrl-Up Прокрутить Вверх
Ctrl-Down Прокрутить Вниз
Ctrl-Left Прокрутить Влево
Ctrl-Right Прокрутить Вправо
Консольные команды
Команда	Описание
wire_expression2_model <model>	Вручную меняет модель чипа
wire_expression2_reload	Перезагружает все расширения для E2, полезно для отладки своих расширений. Помните, что клиентские файлы в мультиплеере берутся из кэша g-mod.
wire_expression2_debug 0/1	Включает режим отладки, который может быть полезен для разработчиков. Необходимо ввести "wire_expression2_reload" после изменения, чтобы сработало.
wire_expression2_extension_enable <extension>	Включить определенное расширение
wire_expression2_extension_disable <extension>	Выключить определенное расширение
wire_expression2_unlimited 0/1	Включить/выключить ограничения по производительности
wire_holograms_modelany 0/1	Позволяет брать любую модель для голограммы (0-выключить,1-включить)
Типы
Expression2 использует несколько типов данных. По понятным причинам, тут только верхушка всего айсберга.

Сокращение	Типы
N	Number(Числа)
V2 / V / V4	2D / 3D / 4D Vector(Векторы)
A	Angle(Углы)
S	String(Строки)
E	Entity(Объекты)
R	Array(Массивы)
T	Table(Таблицы)
RD	Ranger Data(Рейнджеры)
B	Bone(Кости)
M2 / M / M4	2x2 / 3x3 / 4x4 Matrix(Матрицы)
XWL	Wirelink
C	Комплексные числа
Q	Кватернионы
Числа
Описание
Производит операции над числами

Команды
Функция	Возвращает	Описание
N + N	N	Сложение
N - N	N	Вычитание
N * N	N	Умножение
N / N	N	Деление
N ^ N	N	Возведение в степень (2 ^ 3 = 8)
N % N	N	Остаток от деления арумента 1 на аргумент 2. Примечание "-1 % 3 = 2"
mod(N, N)	N	Остаток от деления арумента 1 на аргумент 2. Примечание "mod(-1, 3) = -1"
sqrt(N)	N	Возвращает квадратный корень числа
cbrt(N)	N	Возвращает кубический корень числа
root(N, N)	N	Возвращает корень первого числа
e()	N	Возвращает число Эйлера
exp(N)	N	Возводит число Эйлера в степень аргумента (можно и e()^N, однако так быстрее)
ln(N)	N	Возвращает логарифм числа N по основанию e (число Эйлера)
log2(N)	N	Возвращает логарифм числа N по основанию 2 (двоичный)
log10(N)	N	Возвращает логарифм числа N по основанию 10(десятичный)
log(N,N)	N	Возвращает логарифм первого аргумента по основанию второго
abs(N)	N	Возвращает модуль числа
ceil(N)	N	Округляет аргумент до ближайшего большего целого числа [ceil(5.5) = 6]
ceil(N,N)	N	Округляет аргумент с десятичной точностью до второго аргумента [ceil(5.05) = 5.1]
floor(N)	N	Округляет аргумент до ближайшего меньшего целого числа [floor(5.5) =5]
floor(N,N)	N	Округляет аргумент с десятичной точностью до второго аргумента [floor(5.14) = 5.1]
round(N)	N	Округление [round(5.5) = 6; round(5.4) = 5]
round(N,N)	N	Округление с десятичной точностью до второго аргумента
int(N)	N	Возвращает целую часть числа (как floor)
frac(N)	N	Возвращает дробную часть числа (как floor)
clamp(N,N,N)	N	Если Arg1 <= Arg2 (минимальное) возвращает Arg2; если Arg1 >= Arg3 (максимальное) возвращает Arg3; иначе возвращает Arg1.
inrange(N,N2,N3)	N	Возвращает 1 если N находится в интервале [N2; N3], иначе 0.
sign(N)	N	Возвращает знак числа (-1,0,1) [sign(N) = N / abs(N) ]
min(N,N)	N	Возвращает значение минимального аргумента
min(N,N,N)	N	Возвращает значение минимального аргумента
min(N,N,N,N)	N	Возвращает значение минимального аргумента
max(N,N)	N	Возвращает значение максимального аргумента
max(N,N,N)	N	Возвращает значение максимального аргумента
max(N,N,N,N)	N	Возвращает значение максимального аргумента
random()	N	Возвращает случайное число с плавающей точкой между 0 и 1 [0 <х <1]
random(N)	N	Возвращает случайное число с плавающей точкой между 0 и указанным значением [0 <= X <]
random(N,N)	N	Возвращает случайное число с плавающей точкой в указанном интервале [A < х < B]
randint(N)	N	Возвращает случайное целое число между 1 и указанным значением [1 <= x <= a ]
randint(N,N)	N	Возвращает случайное целое число в указанном интервале [a <= x <= b ]
pi()	N	Возвращает постоянную ПИ
toRad(N)	N	Переводит градусную меру угла в радианную
toDeg(N)	N	Переводит радианную меру угла в градусную
sin(N)	N	Возвращает синус числа N (из градусной меры)
cos(N)	N	Возвращает косинус числа N (из градусной меры)
tan(N)	N	Возвращает тангенс числа N (из градусной меры)
asin(N)	N	Возвращает арксинус числа N (из градусной меры)
acos(N)	N	Возвращает арккосинус числа N (из градусной меры)
atan(N)	N	Возвращает арктангенс числа N (из градусной меры)
sinh(N)	N	Возвращает гиперболический синус N (из градусной меры)
cosh(N)	N	Возвращает гиперболический косинус числа N (из градусной меры)
tanh(N)	N	Возвращает гиперболический тангенс числа N (из градусной меры)
sinr(N)	N	Возвращает синус числа N (из радианной меры)
cosr(N)	N	Возвращает косинус числа N (из радианной меры)
tanr(N)	N	Возвращает тангенс числа N (из радианной меры)
asinr(N)	N	Возвращает арксинус числа N (из радианной меры)
acosr(N)	N	Возвращает арккосинус числа N (из радианной меры)
atanr(N)	N	Возвращает арктангенс числа N (из радианной меры)
atanr(N,N)	N	Возвращает арктангенс аргументов (ARG1 / ARG2), в радианах. Эта функция учитывает положительные / отрицательные аргументы, и аргументы близкие к 0
sinhr(N)	N	Возвращает гиперболический синус числа N (из радианной меры)
coshr(N)	N	Возвращает гиперболический косинус числа N (из радианной меры)
tanhr(N)	N	Возвращает гиперболический тангенс числа N (из радианной меры)
A = B	N	Присваивание (присвоить переменной A число B)
A++	N	Увеличить на 1 (добавить к A единицу, упрощенно "A += 1")
A--	N	Уменьшить на 1 (вычисть из A единицу, упрощенно "A -= 1")
A += B	N	Увеличить на число (увеличить A на B, упрощенно "A = (A + B)")
A -= B	N	Уменьшить на число (уменьшить A на B, упрощенно "A = (A - B)")
A /= B	N	Делит A на B
A %= B	N	Присваивает A остаток деления A на B
A ^= B	N	Возводит A в степень B
A == B	N	A равно B?
A != B	N	А не равно В?
A > B	N	А больше В?
A < B	N	А меньше В?
A >= B	N	А больше или равно В?
A <= B	N	А меньше или равно В?
Строки
Описание
Строки позволяют вам работать с текстом в E2. Необходимо для роты текстовых экранов.

Пример работы
String Example by Hitman271
Команды
Создает строку из помещенной в кавычки, например,"text goes here" Доступны операторы равенства (==) и неравенства, также как и конкатенации(+), для объединения строк и чисел в любом порядке. Операция конкатенации возвращает строку. Первый символ строки имеет номер 1. Отрицательные индексы отсчитываются от конца строки, в которой последний символ -1. Положительные индексы привязаны к длине строки.

Функция	Возвращает	Описание
S:index(N)	S	Возвращает N-нный символ из строки
S:length()	N	Возвращает длину строки
S:upper()	S	Делает все буквы у строки большими
S:lower()	S	Делает все буквы у строки маленькими
S:sub(N,N)	S	Возвращает подстроку, начиная с первого аргумента и заканчивая вторым
S:left(N)	S	Возвращает первые N символов строки
S:right(N)	S	Возвращает последние N символов строки
S:find(S)	N	Возвращает 1 если в строке найдена подстрока S, или 0 если не найдена
S:find(S, N)	N	Возвращает 1 если в строке найдена подстрока S начиная с Nого символа, или 0 если не найдена
S:explode(S)	R	Разбивает строку через разделитель S и записывает результат в массив. Подробнее string.Explode
S:repeat(N)	S	Повторяет N раз, возвращает S
trim(S)	S	Убирает пробелы в начале и в конце строки
S:trimLeft()	S	Убирает пробелы в начале строки
S:trimRight()	S	Убирает пробелы в конце строки
S:replace(1S,2S)	S	В строке S, находит все 1S, и заменяет их на 2S
S:reverse()	S	Возвращает перевернутую строку S
S:toNumber()	N	Переводит строку в числа
toString(N)	S	Переводит число N в строку. (Числа могут быть преобразованы в строку без этой функции)
toChar(N)	S	Возвращает ASCII-код из N, при условии что там помещен один знак.
toByte(S)	N	Возвращает ASCII-код от первого знака в начале строки.
toByte(S,N)	N	Возвращает ASCII-код знака из S, на позиции N
S:match(S2,N)	R	Запускает функцию string.match(S, S2, N) garrysmod и возвращает в виде массива.
S:match(S2)	R	Запускает функцию string.match(S, S2) garrysmod и возвращает в виде массива.
S:matchFirst(S2,N)	S	Запускает функцию string.match(S, S2, N) garrysmod и первое совпадение или пустую строку в случае ошибки.
S:matchFirst(S2)	S	Запускает функцию string.match(S, S2) garrysmod и первое совпадение или пустую строку в случае ошибки.
Entity
Описание
Эти функции позволяют получать информацию и манипулировать объектами (такими как игроки или пропы), находящимися в игровом мире. Entity объекта можно получить несколькими способами: используя Target finder, Entity marker или специальными командами в самом E2.

Since the expression collects the data directly from the entity, it is much faster to handle calculations from within the E2 than having a beacon-sensor send its information to the gate.

A valid entity will return true in an if-statement. This is helpful for preventing LUA errors resulting from using entity commands on entities which have been destroyed.

Примеры работы
RPM Counter by Beer
Remote Trail Maker (by OmicroN)
Команды
Только операторы для объектов равны и не равны. Кроме того, объект будет возвращать <span style="color:rgb(0,0,0);font-

Функция 	Возвращает	Описание      |     Увеличить   ⇗
entity(N)	E	Возвращает объект, числовой идентификатор объекта "ID"
owner()	E	Действие будет происходить с владельцем ( owner ) чипа. ( так же, как entity():owner() )
E:id()	N	Возвращает числовой идентификатор объекта "ID"
noentity()	E	Возвращает пустой ентити
"Всё равно, что корень из минус одного в линейной алгебре "sqrt(-1)" - не сложить, не поделить"

E:type()	S	Возвращает тип объекта "E"
E:model()	S	Возвращает модель объекта "E"
E:owner()	E	Возвращает владельца объекта "E"
E:name()	S	Возвращает имя объекта "E"
E:steamID()	S	Возвращает Steam ID игрока (на данный момент с ошибками)
E:pos()	V	Возвращает позицию объекта "E"
E:eye()	V	Возвращает позицию взгляда игрока или же направление объекта в переднюю сторону
E:eyeTrace()	RD	Равносильно "rangerOffset(999999, E:shootPos(), E:eye())", но быстрее (требует меньше операций)
E:shootPos()	V	Возвращает позицию выстрела игрока, точка, точно в которой находится камера игрока
E:aimEntity()	E	Возвращает объект на который смотрит игрок
E:aimBone()	B	Возвращает кость на которую смотрит игрок
E:aimPos()	V	Возвращает позицию взгляда игрока (не сторону,в отличие от "E:eye()" )
Равносильно "rangerOffset(999999, E:shootPos(), E:eye()):pos()"

E:aimNormal()	V	Возвращает нормальный вектор направления прицела игрока
E:frags()	N	Возвращает количество убийств игрока
E:team()	N	Возвращает  номер команды игрока
teamName(N)	S	Возвращает имя команды связанной с номером
E:forward()	V	Возвращает переднее направление объекта
E:right()	V	Возвращает правое направление объекта
E:up()	V	Возвращает верхнее направление объекта
E:vel()	V	Возвращает вектор скорости объекта
E:velL()	V	Возвращает локальный вектор скорости объекта
E:boxCenter()	V	Возвращает координату середины ограничивающей рамки объекта в пространстве самого объекта
E:boxCenterW()	V	Возвращает координату середины ограничивающей рамки объекта в пространстве мира
Равносильно: "E:pos() + E:boxCenter():rotate(E:angles())"

E:boxMax()	V	Возвращает максимальную высоту ограничивающей рамки объекта(самый высокий угол)
E:boxMin()	V	Возвращает минимальную высоту ограничивающей рамки объекта(самый низкий угол)
E:boxSize()	V	Возвращает вектор размера ограничивающей рамки объекта(длинна,ширина,высота)
E:toWorld(V)	V	Преобразует, локальный объекту Е, вектор V в систему координат мира.
Равносильно: "E:pos() + V:rotate(E:angles())"

E:toLocal(V)	V	Преобразует вектор V из пространства мира в пространство объекта Е
Равносильно: "V:rotate(-E:angles()) - E:pos()"

E:toWorld(A)	A	Преобразует, локальный объекту Е, угол в угол в пространстве мира
E:toLocal(A)	A	Преобразует угол из пространства мира в локальный угол объекта Е
E:angVel()	A	Возвращает угловую скорость объекта Е
E:angVelVector()	V	Returns rotation axis, velocity and direction given as the vector's direction, magnitude and sense
E:angles()	A	Возвращает углы наклона объекта в пространстве мира
E:radius()	N	Возвращает размер объекта (хоть и не точно, но это полезно)
E:height()	N	Возвращает высоту игрока или NPC
E:bearing(V)	N	Gets the bearing from the entity to the vector
E:elevation(V)	N	Gets the elevation from the entity to the vector
E:direction(V)	A	Gets the elevation and bearing from the entity to the vector
E:health()	N	Возвращает здоровье объекта
E:armor()	N	Возвращает броню обьекта
E:mass()	N	Возвращает массу объекта
Хочу заметить, что масса в source измеряется в килограммах.

E:timeConnected()	N	Возвращает время в течении которого игрок находится на сервере
E:massCenter()	V	Возвращает центр масс объекта в пространстве координат мира
E:massCenterL()	V	Возвращает центр масс объекта в пространстве координат объекта (локальный вектор)
Равносильно: "E:toLocal(E:massCenter())"

Равносильно: "E:massCenter():rotate(-E:angles()) - E:pos()"

E:setMass(N)		Устанавливает массу объекта
(работает в промежутке [0.001; 50,000])

Хочу заметить, что масса в source измеряется в килограммах.

E:inertia()	V	Получает основные компоненты тензора инерции сущности в форме ( Ixx, Iyy, Izz )
E:applyForce(V)		К объекту применяется сила, заданная вектором V
Хочу заметить, что модуль(длинна) этого вектора будет равен силе, которая измеряется в ньютонах

E:applyOffsetForce(V1,V2)		Аналогично "applyForce", только сила V1 применяется не в центре масс, а в указанном векторе V2
E:applyAngForce(A)		К объекту применяется крутящий момент
E:applyTorque(V)		Applies torque according to the given vector, representing the torque axis, magnitude and direction
E:isPlayer()	N	Является ли этот объект игроком?
E:isOnFire()	N	Этот объект горит?
E:isWeapon()	N	Этот объект оружие?
E:isNPC()	N	Этот объект NPC?
E:isFrozen()	N	Этот объект заморожен?
E:isVehicle()	N	Этот объект транспорт?
E:inVehicle()	N	Этот объект(игрок) в транспорте?
E:isWorld()	N	Этот объект - объект мира?
E:isOnGround()	N	Опирается ли объект на что-то?(работает только на игроков и NPC)
E:isUnderWater()	N	Этот объект под водой?
E:isPlayerHolding()	N	Этот объект держит игрок?
E:isAlive()	N	Этот объект(игрок или NPC) жив?
E:isCrouch()	N	Игрок присел?
E:inNoclip()	N	Игрок в режиме хождения сквозь стены?
E:keyAttack1()	N	Нажимает ли игрок кнопку "огонь"?
E:keyAttack2()	N	Нажимает ли игрок кнопку "альтернативный огонь?
E:keyUse()	N	Нажимает ли игрок кнопку "использовать"? 
E:hintDriver(S,N)	N	Displays a hint popup to the driver of vehicle E, with message S for N seconds (N being clamped between 0.7 and 7). Returns 1 if the hint has been sent.
E:printDriver(S)	N	Пишет S в чат водителя машины E. Возвращает 1, если текст был написан, 0, если нет.
E:driver()	E	Возвращает объект игрока, сидящего в транспорте E
E:passenger()	E	Возвращает пассажира машины, если он там один, в одноместных вернёт водителя.
E:lockPod(N)		Значение 1 разрешает садиться в транспорт E, значение 0 запрещает садиться в транспорт E
E:ejectPod()		Выгоняет игрока из транспорта
E:killPod()		Убивает игрока в транспорте
E:weapon()	E	Возвращает объект оружия, которое сейчас держит игрок
E:clip1()	N	Возвращает количество патронов у игрока
E:clip2()	N	Возвращает количество альтернативных патронов
E:primaryAmmoType()	S	Возвращает тип патронов 
E:secondaryAmmoType()	S	Возвращает тип альтернативных патронов
E:ammoCount(S)	N	Returns the amount of stored ammo of type S on player E, excluding current clip
E:removeTrails()		Убирает хвосты/трейлы с объекта
E:setTrails(N,N,N,S,V,N)		Задает объекту трейл, значения:
"объект привязки:(ширина начала, ширина конца, длинна, материал, цвет, прозрачнось"
E:lookupAttachment(string attachmentName)	N	Returns entity's attachment ID associated with attachmentName
E:attachmentPos(attachmentID)	V	Returns entity's attachment position associated with attachmentID
E:attachmentAng(attachmentID)	A	Returns entity's attachment angle associated with attachmentID
E:attachmentPos(string attachmentName)	V	Same as E:attachmentPos(E:lookupAttachment(attachmentName))
E:attachmentAng(string attachmentName) || A|| Same as E:attachmentAng(E:lookupAttachment(attachmentName))

Векторы
Описание
Vectors are now properly implemented in the Expression 2, which means that they are as easy to work with as numbers. For those that know what vectors are, and how to use them, this is a great tool for creating many things.

2D and 4D vectors are also supported by E2. These include all the standard functions of 3D vectors listed here. If you're doing 2D vector operations, you can now do things much more efficiently. 4D vectors work in conjunction with matrices, and can be used as homogeneous representations of 3D vectors.

Operational functions can be used between numbers and vectors, e.g. N*V. Note that operations cannot be performed between two vectors of different size, for example multiplication between a 2D and a 3D vector.

Related Examples
Velocity Stabilization by fishface60
Simple XYZ Target Vector by Gunnanmon
GPS by fishface60
Команды
Functions specific to 2D vectors

Команда	Возвращает	Описание
vec2(N,N)	V2	Создает двухмерный вектор
vec2()	V2	Создает двухмерный вектор
Равносильно: "vec2(0,0)" или "vec2(0)"

Хочу заметить, что выражение "vec2( N , N )" полностью идентично выражению "vec2( N )"

vec2(V)	V2	Конвертирует 3D вектор в 2D (z опускается)
vec2(V4)	V2	Конвертирует 4D вектор в 2D (z и w опускаются)
V2:cross(V2)	N	Gets the 2D vector cross product/wedge product
shift(V2)	V2	Swaps the vector's x,y components
V2:rotate(N)	V2	Поворачивает вектор на заданный аргумент N (из градусной меры)
V2:toAngle()	N	Преобразует вектор в угол (в промежутке от -180 до 180)
V:dehomogenized()	V2	Converts a 2D homogeneous vector (x,y,w) into a 2D cartesian vector
3D Vector Commands
Functions specific to 3D vectors

Function	Returns	Description
vec(N,N,N)	V	Создаёт трёхмерный вектор
vec()	V	Создаёт трёхмерный вектор
Равносильно: "vec(0,0,0)"

vec(V2)	V	Преобразует двухмерный вектор в трёхмерный, при этом координате "Z" задаётся значение "0"
Равносильно: "vec(V2:x(),V2:y(),0)"

vec(V2,N)	V	Преобразует двухмерный вектор в трёхмерный, при этом координате "Z" задаётся значение NРавносильно: "vec(V2:x(),V2:y(),N)"
vec(V4)	V	Преобразует четырёхмерный вектор в трёхмерный, пот этом координата w опускается
Равносильно: "vec(V4:x(),V4:y(),V4:z())"

vec(A)	V	Преобразует углы в вектор
Равносильно: "vec(A:pitch(),A:yaw(),A:roll())"

V:cross(V)	V	Gets the 3D vector cross product
shiftL(V)	V	Shifts the vector's components left: shiftL( x,y,z ) = ( y,z,x )
shiftR(V)	V	Shifts the vector's components right: shiftR( x,y,z ) = ( z,x,y )
V:rotate(A)	V	Вращает вектор по углам А
V:rotate(N,N,N)	V	Вращает вектор по углам ang(N,N,N)
V:toAngle()	A	Преобразует вектор в углы, которые указывают направление в система отсчета мира
V4:dehomogenized()	V	Converts a 3D homogeneous vector (x,y,z,w) into a 3D cartesian vector
V:isInWorld()	N	Returns 1 if the position vector is within the world, 0 if not
4D Vector Commands
Functions specific to 4D vectors. From a mathematics standpoint these are treated as 4D Cartesian vectors, where the 4th component is referred to as "w".

Function	Returns	Description
vec4(N,N,N,N)	V4	Makes a 4D vector
vec4()	V4	Same as vec4(0,0,0,0)
vec4(V2)	V4	Converts a 2D vector into a 4D vector (the z and w components are set to 0)
vec4(V2,N,N)	V4	Converts a 2D vector into a 4D vector (the z and w components are set to the second and third arguments)
vec4(V2,V2)	V4	Creates a 4D vector from two 2D vectors
vec4(V)	V4	Converts a 3D vector into a 4D vector (the w component is set to 0)
vec4(V,N)	V4	Converts a 3D vector into a 4D vector (the w component is set to the second argument)
shiftL(V4)	V4	Shifts the vector's components left: shiftL( x,y,z,w ) = ( y,z,w,x )
shiftR(V4)	V4	Shifts the vector's components right: shiftR( x,y,z,w ) = ( w,x,y,z )
Common Vector Commands
Functions that apply to 2D and 3D vectors. They are written here in terms of 3D vectors, but apply to 2D and 4D vectors in the same way, also returning 2D or 4D vectors where applicable.

Function	Returns	Description
ceil(V)	V	Округляет XYZ к ближайшему числу
ceil(V,N)	V	Rounds XYZ up to argument 2's decimal precision
floor(V)	V	Rounds XYZ down to the nearest integer
floor(V,N)	V	Rounds XYZ down to argument 2's decimal precision
round(V)	V	Rounds XYZ to the nearest integer
round(V,N)	V	Rounds XYZ to argument 2's decimal precision
mod(V,N)	V	Returns the remainder after XYZ have been divided by argument 2
mod(V,V)	V	Returns the remainder after the components of vector 1 have been divided by the components of vector 2
clamp(V,V,V)	V	Clamps vector 1's XYZ between the XYZ of vector 2(min) and vector 3(max)
clamp(V,N,N)	V	Clamps vector 1's length between argument 2(min) and argument 3(max)
min(V,V)	V	Returns the vector with the smallest length
max(V,V)	V	Returns the vector with the greatest length
mix(V,V,N)	V	Combines vector 1's XYZ with vector 2's XYZ by a proportion given by argument 3 (between 0 and 1)
positive(V)	V	Returns a vector containing the positive value of each vector component, equivalent to abs(N)
V:length()	N	Gets the length of the vector
V:length2()	N	Gets the squared length of the vector
V:distance(V)	N	Gets the distance between vectors
V:distance2(V)	N	Gets the squared distance between vectors
V:normalized()	V	Gets the normalized vector
V:dot(V)	N	Gets the vector dot (scalar) product
V:x()	N	Выводит из вектора x координату
V:y()	N	Выводит из вектора y координату
V:z()	N	Выводит из вектора z координату
V:w()	N	Выводит из вектора w координату
V:setX(N)	V	Returns a copy of the vector with X replaced (use as Vec = Vec:setX(...))
V:setY(N)	V	Returns a copy of the vector with Y replaced (use as Vec = Vec:setY(...))
V:setZ(N)	V	Returns a copy of the vector with Z replaced (use as Vec = Vec:setZ(...))
V:setW(N)	V	Returns a copy of the vector with W replaced (use as Vec = Vec:setW(...))
V:toString()	S	Gets the vector nicely formatted as a string "[X,Y,Z]"
Matrix
Developed by: Jimlad

Description
2x2, 3x3 and 4x4 matrices are now supported in Expression 2. These are for more advanced manipulations involving vectors and numbers. As with vectors, for those with the relevant knowledge these can be very useful tools.

Basic operations supported:

Matrix addition and subtraction
Multiplication by scalars, vectors and matrices
Division by a scalar
Exponentiation (only integers between -1 and 2)
Delta of a matrix (returns a matrix)
NOTES:

Similarly to vectors, 3x3 matrix commands are referred to using "matrix", whereas 2x2 and 4x4 matrix commands use "matrix2" and "matrix4"

The "set" and "swap" functions are like the 3D vector "set" functions; they do not affect the original matrix.

Remember that operations will only work on vectors/matrices of a similar size. You cannot, for example, multiply a 3x3 matrix by a 2D vector. Also, all vectors are treated as column vectors for the purposes of matrices, so M*V will return a vector but V*M is undefined.

2x2 Matrix Commands
Functions specific to 2x2 matrices

Function	Returns	Description
identity2()	M2	Creates a 2x2 identity matrix
matrix2()	M2	Creates a 2x2 zero matrix
matrix2(N,N,N,N)	M2	Creates a matrix with values in order (i.j) of: (1,1), (1,2), (2,1), (2,2)
matrix2(V2,V2)	M2	Creates a matrix with vectors by columns
matrix2(M)	M2	Converts a 3x3 matrix into a 2x2 matrix - all (i,3) and (3,j) are omitted
matrix2(M4)	M2	Converts a 4x4 matrix into a 2x2 matrix - all (i,3), (i,4), (3,j) and (4,j) are omitted
M2:swapRows()	M2	Swaps rows
M2:swapColumns()	M2	Swaps columns
M2:setRow(N,N,N)	M2	Sets the values of a row. The first argument given specifies the row(j), the following arguments are the values 1j, 2j
M2:setRow(N,V2)	M2	Sets the values of a row. The first argument given specifies the row, the vector contains the values to set
M2:setColumn(N,N,N)	M2	Sets the values of a column. The first argument given specifies the column(i), the following arguments are the values i1, i2
M2:setColumn(N,V2)	M2	Sets the values of a column. The first argument given specifies the column, the vector contains the values to set
3x3 Matrix Commands
Functions specific to 3x3 matrices

Function	Returns	Description
identity()	M	Creates a 3x3 identity matrix
matrix()	M	Creates a 3x3 zero matrix
matrix(N1,N2... N9)	M	Creates a matrix with 9 values in the following order (i.j): (1,1), (1,2), (1,3), (2,1) etc.
matrix(V,V,V)	M	Creates a matrix with vectors by columns
matrix(M2)	M	Converts a 2x2 matrix into a 3x3 matrix - all (i,3) and (3,j) are filled with 0's
matrix(M4)	M	Converts a 4x4 matrix into a 3x3 matrix - all (i,4) and (4,j) are omitted
M:swapRows(N,N)	M	Swaps the two rows specified
M:swapColumns(N,N)	M	Swaps the two columns specified
M:setRow(N,N,N,N)	M	Sets the values of a row. The first argument given specifies the row(j), the following arguments are the values 1j, 2j, 3j
M:setRow(N,V)	M	Sets the values of a row. The first argument given specifies the row, the vector contains the values to set
M:setColumn(N,N,N,N)	M	Sets the values of a column. The first argument given specifies the column(i), the following arguments are the values i1, i2, i3
M:setColumn(N,V)	M	Sets the values of a column. The first argument given specifies the column, the vector contains the values to set
M:setDiagonal(N,N,N)	M	Sets the elements of the leading diagonal
M:setDiagonal(V)	M	Sets the elements of the leading diagonal from the components of a vector
matrix(E)	M	Creates a reference frame matrix from an entity's local direction vectors by columns in the order ( x, y, z )
matrix(A)	M	Returns a 3x3 reference frame matrix as described by the angle A. Multiplying by this matrix will be the same as rotating by the given angle.
M:x()	V	Returns the local x direction vector from a 3x3 coordinate reference frame matrix ( same as M:column(1) )
M:y()	V	Returns the local y direction vector from a 3x3 coordinate reference frame matrix ( same as M:column(2) )
M:z()	V	Returns the local z direction vector from a 3x3 coordinate reference frame matrix ( same as M:column(3) )
mRotation(V,N)	M	Creates a 3x3 rotation matrix, where the vector is the axis of rotation, and the number is the angle (anti-clockwise) in degrees. Example*: to rotate a vector (7,8,9) by 50 degrees about the axis (1,1,0), you would write V = mRotation(vec(1,1,0), 50) * vec(7,8,9)
* If you want to create a rotation matrix about the axes (1,0,0), (0,1,0) or (0,0,1), either use the V:rotate function, or construct a standard rotation matrix.

4x4 Matrix Commands
Functions specific to 4x4 matrices

Function	Returns	Description
identity4()	M4	Creates a 4x4 identity matrix
matrix4()	M4	Creates a 4x4 zero matrix
matrix4(N1,N2... N16)	M4	Creates a matrix with 16 values in the following order (i.j): (1,1), (1,2), (1,3), (1,4), (2,1) etc.
matrix4(V4,V4,V4,V4)	M4	Creates a matrix with vectors by columns
matrix4(M2)	M4	Converts a 2x2 matrix into a 4x4 matrix - all (i,3), (i,4), (3,j) and (4,j) are filled with 0's
matrix4(M2,M2,M2,M2)	M4	Constructs a 4x4 matrix from four 2x2 matrices
matrix4(M)	M4	Converts a 3x3 matrix into a 4x4 matrix - all (i,4) and (4,j) are filled with 0's
M4:swapRows(N,N)	M4	Swaps the two rows specified
M4:swapColumns(N,N)	M4	Swaps the two columns specified
M4:setRow(N,N,N,N,N)	M4	Sets the values of a row. The first argument given specifies the row(j), the following arguments are the values 1j, 2j, 3j, 4j
M4:setRow(N,V4)	M4	Sets the values of a row. The first argument given specifies the row, the vector contains the values to set
M4:setColumn(N,N,N,N,N)	M4	Sets the values of a column. The first argument given specifies the column(i), the following arguments are the values i1, i2, i3, i4
M4:setColumn(N,V4)	M4	Sets the values of a column. The first argument given specifies the column, the vector contains the values to set
M4:setDiagonal(N,N,N,N)	M4	Sets the elements of the leading diagonal
M4:setDiagonal(V4)	M4	Sets the elements of the leading diagonal from the components of a vector
matrix4(E)	M4	Creates a 4x4 reference frame matrix from an entity's local direction vectors by columns in the order (x, y, z, pos), with the bottom row (0,0,0,1)
matrix4(A)	M4	Returns a 4x4 reference frame matrix as described by the angle A. Multiplying by this matrix will be the same as rotating by the given angle.
matrix4(A,V)	M4	Returns a 4x4 reference frame matrix as described by the angle A and the position V. Multiplying by this matrix will be the same as rotating by the given angle and offsetting by the given vector.
M4:x()	V	Returns the local x direction vector from a 4x4 coordinate reference frame matrix ( same as M:column(1) )
M4:y()	V	Returns the local y direction vector from a 4x4 coordinate reference frame matrix ( same as M:column(2) )
M4:z()	V	Returns the local z direction vector from a 4x4 coordinate reference frame matrix ( same as M:column(3) )
M4:pos()	V	Returns the position vector from a 4x4 coordinate reference frame matrix ( same as M:column(4) )
inverseA(M4)	M4	Finds the matrix inverse of a standard 4x4 affine transformation matrix ( the type created by matrix4(E) ). This should only be used on matrices with a particular format, where the top left 3x3 specifies rotation, the rightmost 3-column specifies translation, and the bottom row is (0,0,0,1)
Стандартные команды для матриц
Функции, которые работают для матриц 2x2, 3x3 and 4x4. В данном случае написано для матриц 3*3, но применимы для матриц 2х2 и 4х4.

Операции возвращают вектора/матрицы того же размера. Например, функция row() возвращает 2D вектор.

Функция	Возвращает	Описание
M:row(N)	V	Возвращает строку, как вектор
M:column(N)	V	Возвращает столбец, как вектор
M:element(N,N)	N	Возвращает элемент с индексами(i,j)
M:setElement(N,N,N)	M	Устанавливает значение элемента. Первые 2 аргумента - индексы (i,j), третий элемент - значение, которое надо вставить.
M:swapElements(N,N,N,N)	M	Меняет 2 элемента местами ( i1, j1, i2, j2 )
diagonal(M)	V	Returns a vector comprising the elements along the leading diagonal
trace(M)	N	Returns the trace of a matrix
det(M)	N	Returns the determinant of a matrix (Does not work for 4x4 matrices)
transpose(M)	M	Returns the transpose of a matrix
adj(M)	M	Returns the adjugate of a matrix (Does not work for 4x4 matrices)	
NOTE: To get the inverse of a matrix, simply raise the matrix to the power of -1. Use this sparingly as it can be computationally expensive! Remember that if your matrix is orthogonal (e.g. rotation matrices), the inverse is equal to the transpose, so use the transpose instead if you can. Inverse is not available for 4x4 matrices. Instead, see usage of the inverseA(M4) function.

Angle
Description
Like 3 different directions can be expressed as a Vector, the angles of Pitch, Yaw and Roll can be expressed as an angle Vector. This in the least has the advantage that when performing functions which use angles, such as vector rotation or creating vectors from angles, you don't have to write the Pitch, Yaw and Roll components, only the Angle.

Commands
Function	Returns	Description
ang(N,N,N)	A	Makes an angle
ang()	A	Same as ang(0,0,0)
ang(V)	A	Changes a vector variable into an angle variable
ceil(A)	A	Rounds PYR up to the nearest integer
ceil(A,N)	A	Rounds PYR up to argument 2's decimal precision
floor(A)	A	Rounds PYR down to the nearest integer
floor(A,N)	A	Rounds PYR down to argument 2's decimal precision
round(A)	A	Rounds PYR to the nearest integer
round(A,N)	A	Rounds PYR to argument 2's decimal precision
mod(A,N)	A	Returns the remainder after PYR have been divided by argument 2
mod(A,A)	A	Returns the remainder after the components of angle 1 have been divided by the components of angle 2
clamp(A,A,A)	A	Clamps angle 1's PYR between the PYR of angle 2(min) and angle 3(max)
clamp(A,N,N)	A	Clamps angle 1's PYR between argument 2(min) and argument 3(max)
mix(A,A,N)	A	Combines angle 1's PYR with angle 2's PYR by a proportion given by argument 3 (between 0 and 1)
shiftL(A)	A	Shifts the angle's components left: shiftL( p,y,r ) = ( y,r,p )
shiftR(A)	A	Shifts the angle's components right: shiftR( p,y,r ) = ( r,p,y )
angnorm(A)	A	Gets the normalized angle of an angle
angnorm(N)	N	Gets the normalized angle of a number
A:pitch()	N	Gets the pitch of the angle
A:yaw()	N	Gets the yaw of the angle
A:roll()	N	Gets the roll of the angle
A:setPitch(N)	A	Returns a copy of the angle with Pitch replaced (use as Ang = Ang:setPitch(...))
A:setYaw(N)	A	Returns a copy of the angle with Yaw replaced (use as Ang = Ang:setYaw(...))
A:setRoll(N)	A	Returns a copy of the angle with Roll replaced (use as Ang = Ang:setRoll(...))
A:toString()	S	Gets the angle nicely formatted as a string "[P,Y,R]"
A:toVector()	V	Removed in r1340. Use vec(A) instead.
A:forward()	V	Gets the forward vector of the angle.
A:right()	V	Gets the right vector of the angle.
A:up()	V	Gets the up vector of the angle.
Table
Description
Tables are a way to create dynamic variables, store large numbers of data points and so on. It may be thought of as a list of data, where each bit of data is addressed with an index string. This is a string which is unique to each element of a datatype (a number element and a vector element may have identical indices without problems, but two number elements cannot). Tables can contain any datatype except table and array.

Assigning one table variable to equal another will make them both refer to the same table. If you want to make a new copy of a table which will thereafter be set and retrieved from independently of the original table, you must use clone().
Related Examples
Table-RAM by Magos Mechanicus
Commands
In the interest of brevity, some commands which have many variants are shown as a pattern. <type> may be substituted with the capitalized name of any supported datatype, and * is the corresponding datatype symbol. For instance, R:push<type>(*) can mean R:pushNumber(N), or R:pushString(S).

Function	Returns	Description
table()	T	Creates an empty table
T:clone()	T	Creates an independent copy of a table
T:count()	N	Returns the number of used indexes in the table
invert(R)	T	Returns a lookup table for R. Usage: Index = T:number(toString(Value))
Don't overuse this function, as it can become expensive for arrays with > 20 entries!
invert(T)	T	Returns a lookup table for T. Usage: Key = T:string(toString(Value))
Don't overuse this function, as it can become expensive for tables with > 10 entries!
T:<type>(S)	N	Retrieves the requested datatype element from the indexed string. Returns the default value for the datatype if the index is nil.
T:set<type>(S,*)		Saves the value as a table element with the specified index string
Array
Thanks to: Erkle

Description
Same as table, but with much less memory footprint and is numerically indexed instead. It is similar to E1's packet support. Arrays can contain any datatype except table and array.

Related Examples
Array-RAM by GUN
Commands
In the interest of brevity, some commands which have many variants are shown as a pattern. <type> may be substituted with the capitalized name of any supported datatype, and * is the corresponding datatype symbol. For instance, R:push<type>(*) can mean R:pushNumber(N), or R:pushString(S).

Function	Returns	Description
array()	R	Creates an empty array
R:clone()	R	Creates an independant copy of an array
R:count()	N	Returns the number of used indexes in the array
R:sum()	N	Adds all numbers in the array together and returns result
R:concat()	S	Combines all strings and returns result
R:concat(S)	S	Combines all strings with specified string in between and returns result
R:average()	N	Gives the average of all numbers in array
R:min()	N	Returns the smallest number in array
R:minIndex()	N	Returns the index of the smallest number in array
R:max()	N	Returns the largest number in array
R:maxIndex()	N	Returns the index of the largest number in array
R:<type>(N)	*	Retrieves the array element indexed with the number. Returns the default value for the datatype if the element is nil.
R:set<type>(N,*)		Saves the datatype as an array element with the specified index number
R:push<type>(*)		Saves the data at the end of the array
R:pop<type>()	*	Deletes and returns the last entry in the array. Be sure not to use popNumber() on a vector or similar, as the data may be lost
R:pop()		Deletes the last entry in the array
R:unshift<type>(*)		Adds the data to the beginning of the array. Will move all other entries up one address
R:shift<type>()	*	Deletes and returns the first element of the array, moving other entries down one address to compensate.
R:shift()		Удаляет первый элемент массива; all other entries will move down one address
R:insert<type>(N,*)	*	Inserts the data into the specified index; all entries after this index will move up to compensate
R:remove<type>(N)	*	Deletes and returns the specified entry, moving subsequent entries down to compensate
R:remove(N)		Deletes the specified entry, moving subsequent entries down to compensate
Bone
Developed by: TomyLobo

Описание
Это расширение добавляет в Е2 поддержку энтити-костей. Костью может быть любая часть теля любого регдолла (голова, левая рука, правая нога, и т. д.).
Вы можете получит позицию костей, ориентацию, скорость, очень похоже на обычные пропы (хотя некоторых вещей не хватает).

Функции массивов и таблиц для костей так же предостовляются.

Связанные примеры
Команды
Функция	Возвращает	Описание
E:bone(N)	B	Возвращает N-ую кость энтити Е
E:bones()	R	Возвращает массивом все кости содержащиеся в энтити Е. Первый элемент этого массива имеет индекс 0!
E:boneCount()	N	Возвращает количество костей энтити Е.
nobone()	B	Возвращает недействительную(?) кость.
E:aimBone()	B	Возвращает ту кость, на которую смотрит игрок.
B:entity()	E	Возващает ту энтити, к которой принадлежит кость В.
B:index()	N	Возвращает индекс кости в своей энтити. Возвращает -1 если кость не действительна(?) или имеет место ошибка.
B:pos()	V	Возвращает позицию кости В
B:forward()	V	Возвращает вектор описывающий направление кости вперёд.
B:right()	V	Возвращает вектор описывающий направление кости вправо.
B:up()	V	Возвращает вектор описывающий направление кости вверх.
B:vel()	V	Возвращает вектор скорости кости В.
B:velL()	V	Возвращает вектор скорости кости В в локальной системе координат.
B:toWorld(V)	V	Трансформирует вектор из локальной системы координат кости в систему координат мира.
B:toLocal(V)	V	Трансформирует вектор из системы координат мира в локальную систему координат кости.
B:angVel()	A	Возвращает угловую скорость кости В.
B:angles()	A	Возвращает pitch, yaw и roll кости В.
B:bearing(V)	N	Returns the bearing (yaw) from B to V
B:elevation(V)	N	Returns the elevation (pitch) from B to V
B:mass()	N	Returns B's mass
B:massCenter()	V	Returns B's Center of Mass
B:massCenterL()	V	Returns B's Center of Mass in local coordinates
B:setMass(N)		Sets B's mass (between 0.001 and 50,000)
B:inertia()	V	Gets the principal components of B's inertia tensor in the form vec(Ixx, Iyy, Izz)
B:applyForce(V)		Applies force to B according to V's direction and magnitude
B:applyOffsetForce(V,V2)		Applies force to B according to V from the location of V2
B:applyAngForce(A)		Applies torque to B according to A
B:isFrozen()	N	Returns 1 if B is frozen, 0 otherwise
Wirelink
Description
Wirelinks are an alternative to normal wires that offer a number of advantages. Any number of inputs or outputs on a component can be manipulated with one Wirelink, and you can also use it to retrieve the entity of a wirelinked component. Since all Wirelinks are capable of two-way communication, wirelinks are not clear-cut inputs or outputs. As such, to avoid ambiguity wirelinks which the expression should be able to manipulate are always declared in the @inputs of the expression. To connect this input to another component, you must use the Wirelink tool on the component to create a new output on it of the type Wirelink, then wire the input to the output as normal.

Wirelink is not yet officially supported

Related Examples
Wirelink Example by Hitman271
Vector and Entity Wirelink Testing by fishface60
Radar by Coder0xff
Commands
Equal and Not Equal operators are available. XWL here means the Wirelink input.

Function	Returns	Description
XWL:isHiSpeed()	N	Returns true if the linked component is high-speed capable.
XWL:entity()	E	Returns the entity of the linked component.
XWL:hasInput(S)	N	Returns true if the linked component has an input of the specified name.
XWL:hasOutput(S)	N	Returns true if the linked component has an output of the specified name.
XWL:setNumber(S,N)		Sets the component's input of the specified name equal to the number.
XWL:number(S)	N	Retrieves the component's output of the specified name.
XWL:setVector(S,V)		Sets the component's input of the specified name equal to the vector.
XWL:vector(S)	V	Retrieves the component's output of the specified name.
XWL:setString(S,S)		Sets the component's input of the specified name equal to the string.
XWL:string(S)	S	Retrieves the component's output of the specified name.
XWL:setXyz(V)		Sets the X/Y/Z to the corresponding values in the vector.
XWL:xyz()	V	Retrieves the X/Y/Z as the corresponding values in the vector.
XWL:setEntity(S,E)		Sets the component's input of the specified name equal to the entity.
XWL:entity(S)	E	Retrieves the component's output of the specified name.
XWL:writeCell(N,N)	N	Writes the second argument to the memory cell specified by the first argument. Returns true if successful.
XWL:readCell(N)	N	Returns contents of the specified memory cell.
XWL:writeString(S,N,N)		A helper function for using the Wired Console Screen. The string will be written to the screen in white text on black background. The number arguments specify the starting position - X/Horizontal (0-29 recommended) and Y/vertical (0-17).
XWL:writeString(S,N,N,N)		As above, with an extra argument for the text colour. This is in the form of a 3-digit RGB code. 0 is black, while 999 is white, 900 is pure red and so on.
XWL:writeString(S,N,N,N,N)		As above, with an extra argument for background colour. 3-digit RGB again.
XWL:writeString(S,N,N,N,N,N)		As above, with an extra argument for flashing text. 0 or 1 is recommended.

Complex
Developed by: Fizyk

Description
Complex numbers are an extension of real numbers to include roots of negative numbers as well.

Related Examples
Commands
Function	Returns	Description
comp()	C	Returns complex zero
comp(N)	C	Converts a real number to complex (returns complex number with real part N and imaginary part 0)
comp(N,N2)	C	Returns N+N2*i
i()	C	Returns the imaginary unit i
i(N)	C	Returns <n>*i
abs(C)	C	Returns the absolute value of C
arg(C)	C	Returns the argument of C
conj(C)	C	Returns the conjugate of C
real(C)	N	Returns the real part of C
imag(C)	N	Returns the imaginary part of C
exp(C)	C	Raises Euler's constant e to the power of C
log(C)	C	Calculates the natural logarithm of C
log(C,C2)	C	Calculates the logarithm of C2 to a complex base C
log(N,C)	C	Calculates the logarithm of C to a real base N
log2(C)	C	Calculates the logarithm of C to base 2
log10(C)	C	Calculates the logarithm of C to base 10
sqrt(C)	C	Calculates the square root of C
csqrt(N)	C	Calculates the complex square root of the real number N
C:pow(C2)	C	Raises C to the power C2
sin(C)	C	Calculates the sine of C
cos(C)	C	Calculates the cosine of C
sinh(C)	C	Calculates the hyperbolic sine of C
cosh(C)	C	Calculates the hyperbolic cosine of C
toString(C)	S	Formats C as a string.
Quaternion
Developed by: Fizyk

Description
Quaternions are an extension of complex numbers. Instead of a+bi, they are of form a+bi+cj+dk, where a, b, c, d are real numbers, and i, j, k are imaginary units. The imaginary units can be used as a basis in a 3D space, allowing quaternions to represent rotations.
Like on real and complex numbers, on quaternions you can perform addition, subtraction, multiplication and division. Operations that take a quaternion and a real/complex number are also supported (N+Q, Q*C, etc.). Beware: quaternion multiplication isn't commutative!
Note: Because multiplication isn't commutative with quaternions, there are two ways of dividing them. Q1/Q2 is the same as Q1*inv(Q2), the second way is inv(Q2)*Q1.
The extension also supports multiplying quaternions by vectors for the purpose of rotations. If you want to rotate vector V using quaternion Q, use this code:
V2 = vec(Q*V*inv(Q))

A short guide on quaternions can be found here: [1]

Commands
Function	Returns	Description
quat()	Q	Creates a zero quaternion
quat(N)	Q	Creates a quaternion with real part equal to N
quat(C)	Q	Creates a quaternion with real and "i" parts equal to C
quat(V)	Q	Converts a vector to a quaternion (returns V.x*i + V.y*j + V.z*k)
quat(N,N2,N3,N4)	Q	Returns N+N2i+N3j+N4k
quat(A)	Q	Converts A to a quaternion
quat(V,V2)	Q	Creates a quaternion given forward (V) and up (V2) vectors
quat(E)	Q	Converts angle of E to a quaternion
qi()	Q	Returns quaternion i
qi(N)	Q	Returns quaternion N*i
qj()	Q	Returns j
qj(N)	Q	Returns N*j
qk()	Q	Returns k
qk(N)	Q	Returns N*k
abs(Q)	N	Returns absolute value of Q
conj(Q)	Q	Returns the conjugate of Q
inv(Q)	Q	Returns the inverse of Q
Q:real()	N	Returns the real component of the quaternion
Q:i()	N	Returns the i component of the quaternion
Q:j()	N	Returns the j component of the quaternion
Q:k()	N	Returns the k component of the quaternion
exp(Q)	Q	Raises Euler's constant e to the power Q
log(Q)	Q	Calculates natural logarithm of Q
qMod(Q)	Q	Changes quaternion Q so that the represented rotation is by an angle between 0 and 180 degrees (by coder0xff)
slerp(Q,Q2,N)	Q	Performs spherical linear interpolation between Q and Q2. Returns Q for N=0, Q2 for N=1
Q:forward()	V	Returns vector pointing forward for Q
Q:right()	V	Returns vector pointing right for Q
Q:up()	V	Returns vector pointing up for Q
qRotation(V,N)	Q	Returns quaternion for rotation about axis V by angle N
qRotation(V)	Q	Construct a quaternion from the rotation vector V. Vector direction is axis of rotation, magnitude is angle in degress (by coder0xff)
rotationAngle(Q)	N	Returns the angle of rotation in degrees (by coder0xff)
rotationAxis(Q)	V	Returns the axis of rotation (by coder0xff)
rotationVector(Q)	V	Returns the rotation vector - rotation axis where magnitude is the angle of rotation in degress (by coder0xff)
vec(Q)	V	Converts Q to a vector by dropping the real component
matrix(Q)	M	Converts Q to a transformation matrix
Q:toAngle()	A	Returns angle represented by Q
toString(Q)	S	Formats Q as a string.
Базовые команды
Core
Описание
...

Команды
Команда	Тип возврата	Описание
first()	N	Выдает 1 если Е2 был установлен или перезапущен
duped()	N	Выдает 1 если Е2 был скопирован
inputClk()	N	Returns 1 if the expression was triggered by an input
reset()		Reset the expression itself as if it was just spawned, stops execution
exit()		Останавливает работу чипа
Self-Aware
Описание
With entity() you can use Entity-Support to get all the data from the expression-entity. With concmd() you can execute console Команды. hint() allows you to display strings quickly on your screen.

Also, the chip has the ability to thrust itself. Beware of the interval you're choosing for your contraption, because of the time response. (The thrust lasts for 10ms)

Related Examples
Using Hints
Beacon Sensor by Hitman271
GPS by Fishface60
Speedometer by integer
Gyroscope by GabbaGubbel
Команды
Function	Returns	Описание
entity()	E	Получает entity чипа
concmd(S)	N	Takes a string and executes it in console. Returns 1 if it succeeded and 0 if it failed.
The client must enable this in the console with "wire_expression2_concmd 1".
hint(S,N)		Отображает подсказку S на N секунд (N being clamped between 0.7 and 7)
print(S)		Отображает S в чате
printTable(T)		Prints a table like the lua function PrintTable does, except to the chat area.
printTable(R)		Prints an array like the lua function PrintTable does, except to the chat area.
applyForce(V)		Applies force according to the vector given (Forces independently on each axis unlike a vector thruster)
applyOffsetForce(V,V)		Applies force to the expression according to the first vector from the location of the second
selfDestruct()		Уничтожает чип
selfDestructAll()		Уничтожает чип и все с ним склеено
changed(*)		
Checks if the value or variable was changed. Accepts any type except table and array.
It detects changes by checking whether it was called with a different parameter at the same point in the last execution.
Multiple calls to changed() in the _same_ execution are independent of each other.

Проверяет, было изменено значение или переменная. Принимает любой тип, кроме таблиц и массива. Он обнаруживает изменения, проверяя, был ли он вызван с в другой точке.Повторные вызовы changed() в том же исполнении являются независимыми друг от друга.

Timer
Описание
Timer functions are a way to trigger the expression to be run at a given time. Most interesting is the interval(N) function, that lets the expression be run continuously without needing triggering from inputs.

Команды
Function	Returns	Описание
runOnTick(N)		If set to 1, the expression will execute once every game tick
tickClk()	N	Returns 1 if the current execution was caused by "runOnTick"
curtime()	N	Returns the current time since server-start in seconds
interval(N)		Causes the expression to execute every N milliseconds (minimum delay is 10 milliseconds)
timer(S,N)		Sets a one-time timer with entered name and delay in milliseconds
stoptimer(S)		Stops a timer, can stop interval with stoptimer("interval")
clk()	N	Returns 1 if the current execution was caused by the interval
clk(S)	N	Returns 1 if the current execution was caused by the inserted name
Unit Conversion
Описание
All conversions are precise so it is recommended to round the result if it is going to be displayed (round()).

Related Examples
Speedometer by integer
Команды
Function	Returns	Описание
toUnit(S,N)	N	Converts default garrysmod units to specified units
fromUnit(S,N)	N	Converts specified units to default garrysmod units
convertUnit(S,S,N)	N	Converts between two units
Units
Length	Описание
mm	миллиметры
cm	сантиметры
dm	дециметры
m	метры
km	километры
in	дюймы (default)
ft	футы
yd	ярды
mi	мили
nmi	морская миля
Speed	Описание
m/s	метров в секунду
km/h	километров в час
in/s	дюймов в секунду
mi/h	миль в час
mph	miles per hour (more commonly used than mi/h)
knots	knots (correct term for nautical miles per hour)
mach	mach (times speed of sound)
mm/x	millimeters per time unit
cm/x	centimeters per time unit
dm/x	decimeters per time unit
m/x	meters per time unit
km/x	kilometers per time unit
in/x	inches per time unit
ft/x	feet per time unit
yd/x	yards per time unit
mi/x	miles per time unit
nmi/x	nautical miles per time unit
substitute x for s (per second), m (per minute) or h (per hour)
Weight	Описание
g	грамм
kg	килограмм
t	тон
oz	ounces
lb	pounds
Информация
Developed by: Beer

Описание
The following functions allow you to get various information about the server, such as the current map name, gamemode, etc.

Команды
Функции	Возвращает	Описание
map()	S	Возвращает текущее название карты
hostname()	S	Возвращает название сервера
isLan()	N	Returns 1 if lan mode is enabled
gamemode()	S	Возвращает название текущего gamemode
gravity()	N	Возвращает гравитацию
ping()	N	Returns the latency (Player:ping() для индивидуального игрока)
isSinglePlayer()	N	Возвращает 1,если в одиночной игре, а 0, если в сетевой игре
isDedicated()	N	Returns 1 if server is dedicated, 0 if listen
numPlayers()	N	Возвращает текущее число игроков на сервере
maxPlayers()	N	Возвращает максимальное число игроков на сервере
maxOfType(S)	N	Returns the maximum allowed of a certain type of entity, i.e. maxOfType("wire_thrusters"). Returns 0 if you enter an invalid parameter.
playerDamage()	N	Возвращает 1, если ПВП урон включен на этом сервере
convar(S)	S	Give a console command such as "name" and it returns the set value
convarnum(S)	N	Give a console command such as "sbox_godmode" and it returns the set value
time(S)	N	Returns numerical time/date info from the server. Possible arguments: "year", "month", "day", "hour", "min", "sec", "wday" (weekday, Sunday is 1), "yday" (day of the year), and "isdst" (daylight saving flag 0/1)
TIP: To get a list of all possible parameters for maxOfType(), open the console and type "find sbox_max". If you need "sbox_maxragdolls", you can simply pass "ragdolls" in the function.
Constraint
Developed by: ZeikJT

Описание
The following functions get information about entities based on constraints

Команды
Function	Returns	Описание
E:getConstraints()	R	Returns an array with all entities constrained to E.
E:hasConstraints()	N	Returns the number of the constraints E has
E:hasConstraints(S)	N	Returns the number of the constraints E has with the given constraint type (see the types list below)
E:isConstrained()	N	Returns 1 if E has constraints, 0 if not
E:isWeldedTo()	E	Returns the first entity E was welded to
E:isWeldedTo(N)	E	Возвращает Nth entity E was welded to
E:isConstrainedTo()	E	Returns the first entity E was constrained to
E:isConstrainedTo(N)	E	Returns the Nth entity E was constrained to
E:isConstrainedTo(S)	E	Returns the first entity E was constrained to with the given constraint type (see the types list below)
E:isConstrainedTo(S, N)	E	Returns the Nth entity E was constrained to with the given constraint type (see the types list below)
E:parent()	E	Returns the entity E is parented to.
E:parentBone()	B	Returns the bone E is parented to.

Constraint Types
AdvBallsocket
Axis
Ballsocket
Elastic
Hydraulic
Keepupright
Motor
Muscle
NoCollide
Pulley
Rope
Slider
Weld
Winch
Chat
Developed by: ZeikJT & Gwahir

Описание
The following functions are for reading the chat log. This is similar to the text receiver.

Related Examples
Chat Example by Matte
Команды
Function	Returns	Описание
runOnChat(N)		1 will cause the chip to run on chat events, 0 stops the chip from running on chat events, only needs to be called once (not every execution)
chatClk()	N	Returns 1 if the chip is being executed because of a chat event, 0 otherwise.
chatClk(E)	N	Returns 1 if the chip is being executed because of a chat event by the given player, 0 otherwise.
hideChat(N)		If N != 0, hide the chat message that is currently being processed.
lastSaid()	S	Returns what the last message was in the chat log
lastSaidWhen()	N	Returns the time the last message was said
E:lastSaid()	S	Returns what the given player last said
E:lastSaidWhen()	N	Returns when the given player last said something
lastSpoke()	E	Returns the entity of the last player to speak
Color
Developed by: Jimlad

Описание
These Команды allow E2 to find the color of an entity and change it. Changing color only works on entities you own.

Uses RGBA (Red, Green, Blue, Alpha) values, although when only RGB is specified, alpha will not be changed.

Note that color values have a range of 0 - 255, where (0,0,0,255) is black, and (255,255,255,255) is white.

Alpha is equivalent to opacity, where 0 is completely transparent and 255 is completely opaque.

Команды
Function	Returns	Описание
E:getColor()	V	Returns the color of an entity as a vector (R,G,B)
E:getColor4()	V4	Returns the color of an entity as a 4D vector (R,G,B,A)
E:getAlpha()	N	Returns the alpha of an entity
E:getMaterial()	S	Returns the material of an entity
E:setColor(N,N,N)		Changes the RGB color of an entity (leaves alpha alone)
E:setColor(N,N,N,N)		Changes the RGBA color of an entity
E:setColor(V)		Changes the RGB color of an entity (leaves alpha alone), using a vector with values (R,G,B)
E:setColor(V,N)		Changes the RGBA color of an entity, using a vector with values (R,G,B). The additional argument sets alpha
E:setColor(V4)		Changes the RGBA color of an entity, using a 4D vector with values (R,G,B,A)
E:setAlpha(N)		Changes the alpha of an entity
E:setMaterial(S)		Sets the material of an entity. E:setMaterial("") to reset material
|}

Advanced extensions
Entity Discovery
Developed by: Gwahir, TomyLobo

Description
Use these to find and filter entities. The basic find functions will return how many entities were found but the actual entities are stored on the chip until they are accessed using find(), findResult(N), or findClosest(V)

There is a white list and a black list as well as functions for on the spot filtering and sorting White and black lists are always in effect and will be used automatically when you request a new list of entities. Control of the lists is achieved through the find[Exclude, Allow, Include, Disallow][Player, Prop, Model, Class] functions Exclude/Allow add/remove items from the black list while Include/Disallow do the same for the white list If the same object is covered by both the white list and the black list, the black list takes priority

In the case of names, classes and models, partial strings are acceptable.

Discovering entities is not cheap so suggested usage is to find what you're looking for an hold onto it in order to limit the number of queries you run. To prevent overuse of these features, two console variables have been included, wire_exp2_entFindRate and wire_exp2_playerFindRate. These are delays that control how often you can perform find queries, the ent variable is per chip, the player variable is for all chip owned by a specific player

Related Examples
Thermometer Example by Entoros
Commands
Function	Returns	Description
findUpdateRate()	N	Returns the minimum delay between entity find events on a chip
findPlayerUpdateRate()	N	Returns the minimum delay between entity find events per player
findCanQuery()	N	Returns 1 if find functions can be used, 0 otherwise.
findInSphere(V,N)	N	Finds entities in a sphere around V with a radius of N, returns the number found after filtering
findInCone(V,V,N,A)	N	Like findInSphere but with a cone, arguments are for position, direction, length, and degrees (currently bugged, because the underlying function is bugged)
findInBox(V,V)	N	Like findInSphere but with a globally aligned box, the arguments are the diagonal corners of the box
findByName(S)	N	Find all entities with the given name
findByModel(S)	N	Find all entities with the given model
findByClass(S)	N	Find all entities with the given class
findPlayerByName(S)	E	Returns the player with the given name, this is an exception to the rule
findExcludeEntities(R)		Exclude all entities from R from future finds
findExcludeEntity(E)		Exclude E from future finds
findExcludePlayer(E)		Exclude this player from future finds (put it on the entity blacklist)
findExcludePlayer(S)		Exclude this player from future finds (put it on the entity blacklist)
findExcludePlayerProps(E)		Exclude entities owned by this player from future finds
findExcludePlayerProps(S)		Exclude entities owned by this player from future finds
findExcludeModel(S)		Exclude entities with this model (or partial model name) from future finds
findExcludeClass(S)		Exclude entities with this class (or partial class name) from future finds
findAllowEntities(R)		Remove all entities from R from the blacklist
findAllowEntity(E)		Remove E from the blacklist
findAllowPlayer(E)		Remove this player from the entity blacklist
findAllowPlayer(S)		Remove this player from the entity blacklist
findAllowPlayerProps(E)		Remove entities owned by this player from the blacklist
findAllowPlayerProps(S)		Remove entities owned by this player from the blacklist
findAllowModel(S)		Remove entities with this model (or partial model name) from the blacklist
findAllowClass(S)		Remove entities with this class (or partial class name) from the blacklist
findIncludeEntities(R)		Include all entities from R in future finds, and remove others not in the whitelist
findIncludeEntity(E)		Include E in future finds, and remove others not in the whitelist
findIncludePlayer(E)		Include this player in future finds, and remove other entities not in the entity whitelist
findIncludePlayer(S)		Include this player in future finds, and remove other entities not in the entity whitelist
findIncludePlayerProps(E)		Include entities owned by this player from future finds, and remove others not in the whitelist
findIncludePlayerProps(S)		Include entities owned by this player from future finds, and remove others not in the whitelist
findIncludeModel(S)		Include entities with this model (or partial model name) in future finds, and remove others not in the whitelist
findIncludeClass(S)		Include entities with this class (or partial class name) in future finds, and remove others not in the whitelist
findDisallowEntities(R)		Remove all entities from R from the whitelist
findDisallowEntity(E)		Remove E from the whitelist
findDisallowPlayer(E)		Remove this player from the entity whitelist
findDisallowPlayer(S)		Remove this player from the entity whitelist
findDisallowPlayerProps(E)		Remove entities owned by this player from the whitelist
findDisallowPlayerProps(S)		Remove entities owned by this player from the whitelist
findDisallowModel(S)		Remove entities with this model (or partial model name) from the whitelist
findDisallowClass(S)		Remove entities with this class (or partial class name) from the whitelist
findClearBlackList()		Clear all entries from the entire blacklist
findClearBlackEntityList()		Clear all entries from the entity blacklist
findClearBlackPlayerPropList()		Clear all entries from the prop owner blacklist
findClearBlackModelList()		Clear all entries from the model blacklist
findClearBlackClassList()		Clear all entries from the class blacklist
findClearWhiteList()		Clear all entries from the entire whitelist
findClearWhiteEntityList()		Clear all entries from the player whitelist
findClearWhitePlayerPropList()		Clear all entries from the prop owner whitelist
findClearWhiteModelList()		Clear all entries from the model whitelist
findClearWhiteClassList()		Clear all entries from the class whitelist
findResult(N)	E	Returns the indexed entity from the previous find event (valid parameters are 1 to the number of entities found)
findClosest(V)	E	Returns the closest entity to the given point from the previous find event
findToArray()	R	Formats the query as an array, R:entity(Index) to get a entity, R:string to get a description including the name and entity id.
find()	E	Equivalent to findResult(1)
findSortByDistance(V)	N	Sorts the entities from the last find event, index 1 is the closest to point V, returns the number of entities in the list
findClipToClass(S)	N	Filters the list of entities by removing all entities that are NOT of this class
findClipFromClass(S)	N	Filters the list of entities by removing all entities that are of this class
findClipToModel(S)	N	Filters the list of entities by removing all entities that do NOT have this model
findClipFromModel(S)	N	Filters the list of entities by removing all entities that do have this model
findClipToName(S)	N	Filters the list of entities by removing all entities that do NOT have this name
findClipFromName(S)	N	Filters the list of entities by removing all entities that do have this name
findClipToSphere(V,N)	N	Filters the list of entities by removing all entities NOT within the specified sphere (center, radius)
findClipFromSphere(V,N)	N	Filters the list of entities by removing all entities within the specified sphere (center, radius)
findClipToRegion(V,V2)	N	Filters the list of entities by removing all entities NOT on the positive side of the defined plane. (Plane origin, vector perpendicular to the plane) You can define any convex hull using this.
Global Variables
Developed by: ZeikJT

Description
Global variables are a way to exchange data between two expression chips without the need for any wiring at all.

The global variables will be sorted into groups so that you can avoid two chips overwriting each other's global data. By default a newly spawned chip will default to "default" as the group entry, but you can always change that by using the gSetGroup(s) function.

Remember, all global variables persist until you delete them or you leave the server. They will never automatically reset.

Using tables like this does isn't exactly a memory free deal, when using this on servers try to keep the amount of stored global variable at any one time down to a minimum.

As of right now the global group will be reset after every run. Also, try to keep the group setting down to a minimum as it can be costly.

Related Examples
Writing/Reading Global Variables by ZeikJT
Commands
Function	Returns	Description
gSetStr(S)		Stores a string into the current group, use with gGetStr(S)
gSetStr(S,S)		Stores the second string into the current group under the index specified by the first string
gSetStr(N,S)		Stores the string into the current group under the index specified by the number
gSetNum(N)		Stores a number into the current group, use with gGetNum(N)
gSetNum(S,N)		Stores the number into the current group under the index specified by the string
gSetNum(N,N)		Stores the second number into the current group under the index specified by the first number
gGetStr()	S	Returns the string under the current group stored only by gSetStr(S)
gGetStr(S)	S	Returns the string under the current group stored in the input string index, use with gSetStr(S,S)
gGetStr(N)	S	Returns the string under the current group stored in the input number index, use with gSetStr(N,S)
gGetNum()	N	Returns the number under the current group stored only by gSetNum(N)
gGetNum(S)	N	Returns the number under the current group stored in the input string index, use with gSetNum(S,N)
gGetNum(N)	N	Returns the number under the current group stored in the input number index, use with gSetNum(N,N)
gDeleteStr()	S	Like gGetStr() but deletes the value after retrieval
gDeleteStr(S)	S	Like gGetStr(S) but deletes the value after retrieval
gDeleteStr(N)	S	Like gGetStr(N) but deletes the value after retrieval
gDeleteNum()	N	Like gGetNum() but deletes the value after retrieval
gDeleteNum(S)	N	Like gGetNum(S) but deletes the value after retrieval
gDeleteNum(N)	N	Like gGetNum(N) but deletes the value after retrieval
gSetGroup(S)		Sets the group that all global write, read, and delete functions will use, default is "default"
gGetGroup()	S	Returns the name of the current group for the chip
gShare(N)		Determines whether or not the group you're in is available only to you or to all players. Defaults to 0. Any value but 0 will set your group to be accessible to all players. Be mindful that there are two groups with every name, one is shared, one is not; values do not transition between the two.
gResetGroup()		Returns the current chip's group back to "default"
gDeleteAllStr()		Deletes all of the global strings stored under the current group, including the one stored by gSetStr(S)
gDeleteAllNum()		Deletes all of the global numbers stored under the current group, including the one stored by gSetNum(N)
gDeleteAll()		Deletes all of the global values stored under the current group, including the ones stored by gSetStr(S) and gSetNum(N)
Built-In Ranger
Developed by: ZeikJT

Description
The built-in ranger is heavily based on Erkle's original ranger. There are however some new functionalities that can be found in the commands below. Keep in mind that if you want to apply an option you must set it pre-ranging.

This also introduces a new Variable type, the RD (defined as :ranger). It holds the data returned after a trace, you will need to use the trace data functions to retrieve useful data. These are to be used after you have done an actual trace.

I will add a simple example to showcase the syntax and functionality.

Related Examples
Using Built-In Ranger by ZeikJT
Radar by Coder0xff
Commands
Function	Returns	Description
Ranger Options		To be used before an actual ranger trace
rangerHitWater(N)		Default is 0, if any other value is given it will hit water
rangerIgnoreWorld(N)		Default is 0, if any other value is given it will ignore world
rangerDefaultZero(N)		If given any value other than 0 it will default the distance data to zero when nothing is hit
rangerFilter(E)		Feed entities you don't want the trace to hit
rangerFilter(R)		Feed an array of entities you don't want the trace to hit
Ranger Tracing		Gathers data, if options are declared prior to this they will be used
ranger(N)	RD	You input max range, it returns ranger data
ranger(N,N,N)	RD	Same as above with added inputs for X and Y skew
rangerAngle(N,N,N)	RD	You input the distance, x-angle and y-angle (both in degrees) it returns ranger data
rangerOffset(V,V)	RD	You input two vector points, it returns ranger data
rangerOffset(N,V,V)	RD	You input the range, a position vector, and a direction vector and it returns ranger data
Ranger Data Retreval		Accesses data stored in an RD container
RD:distance()	N	Outputs the distance from the rangerdata input, else depends on rangerDefault
RD:position()	V	Outputs the position of the input ranger data trace IF it hit anything, else returns (0,0,0)
RD:entity()	E	Returns the entity of the input ranger data trace IF it hit an entity, else returns nil
RD:hit()	N	Returns 1 if the input ranger data hit anything and 0 if it didn't
RD:hitNormal()	V	Outputs a normalized vector perpendicular to the surface the ranger is pointed at.
Проигрывание звуков
Developed by: ZeikJT

Translated by: Vlad Schmidt from NxRP

Описание
Позволяет Expression 2 проигрывать звуки. Вы можете найти список с Half-life 2 звуками тут (here) или использовать GCFScape для прослушивания каждого звука.

Длительность указывается в секундах. Если звук должен быть зациклен, ставьте длительность на 0. Путь к файлу должен содержать слэши '/' и ни одного обратного слэша '\'.

Команды
Команда	Возвращает	Описание
soundPlay(N,N,S)		soundPlay(int Index, int Duration, string Path to File)
Проигрывает звук где:

Index - индекс(число);
Duration - длительность;
Path to File - месторасположение звука;
soundPlay(S,N,S)		soundPlay(string Index, int Duration, string Path to File)
Проигрывает звук где:

Index - индекс(строка);
Duration - длительность;
Path to File - месторасположение звука;
soundPlay(N,N,S,N)		soundPlay(int Index, int Duration, string Path to File, int FadeTime)
FadeTime - указывает время "затухания" звука

soundPlay(S,N,S,N)		soundPlay(string Index, int Duration, string Path to File, int FadeTime)
FadeTime - указывает время "затухания" звука

soundStop(N)		Останавливает все звуки по индексу(int)
soundStop(N,N)		Звук "затухает" (постепенно снижает громкость и выключается) в течении указанного времени. Принимает индекс в виде числа
soundStop(S)		Останавливает все звуки по индексу(string)
soundStop(S,N)		Звук "затухает" (постепенно снижает громкость и выключается) в течении указанного времени. Принимает индекс в виде строки
soundPitch(N,N)		soundPitch(integer Index, integer Pitch) (стандартный Pitch 100)
Изменяет звуковое поле.

soundPitch(S,N)		То же самое только берёт индекс в виде строки
soundVolume(N,N)		soundVolume(integer Index, integer Volume) (стандартное значение 1)
Устанавливает громкость где:

integer Index - индекс(число)
integer Volume - громкость(число)
soundVolume(S,N)		То же самое только берёт индекс в виде строки
soundPurge()		Очищает и останавливает все звуки
NPC control
Developed by: Bobsymalone

Description
These functions allow you to control NPCs. You can create secondary AI systems responding to wire by telling NPCs how to feel about certain things, where to go, etc. You can also equip them with weapons.

Related Examples
Wire_Expression2:Examples#NPC_pet_by_Bobsymalone

Commands
Function	Returns	Description
E:npcStop()		Прекращает любое действие НПС
E:npcGoWalk(V)		Командует НПС идти на позицию V
E:npcGoRun(V)		Командует НПС бежать на позицию V
E:npcFace(V)		This will rotate the NPC to face position V. This is purely aesthetic and can't be used to aim their weapon.
E:npcAttack()		Командует НПС бить
E:npcShoot()		Командует НПС стрелять
E:npcGiveWeapon()		Выдает НПС пулемет (SMG)
E:npcGiveWeapon(S)		Выдает НПС оружие. Например: E:npcGiveWeapon("pistol"). Другие варианты оружия: "ar2", "crowbar", "357", "shotgun", "crossbow", "rpg", "frag", etc.
E:npcRelationship(E,S,N)		Will set the NPC's relationship to the specified entity to the S input, priority N. Priority is any number between 0 and 999. The relationship string can be either "like" "neutral" "hate" or "fear". Same goes for all other relationship functions.
E:npcRelationship(S,S,N)		Same as above, but sets relationship to an entire class specified by the first string. Example: "npc_manhack", "prop_physics".
E:npcRelationshipByOwner(E,S,N)	N	Sets the NPC's relationship to all currently existing NPCs owned by player E. Returns number of entities added to relationships.
E:npcDisp(E)	S	Returns the NPC's relationship to entity E.
Сигналы
Разработал: Gwahir и TomyLobo

Описание
Эти функции позволяют удаленно выполнять exp2 чипы , при условии, что чип настроен на получение данного сигнала


Область видимости
Сигналы ограничены определенными областями (0 - только вы, 1 - все, 2 - все кроме вас)

Упрощенно, true = все, false = только вы.

Области видимости применяются для указания тех, кто может получить ваш сигнал и чей сигнал вы можете получить.

Область видимости всегда применяется по отношению к владельцу. Так что если игрок A посылает в область видимости 1 и игрок B получает только из области видимости 0, он/она не получит сигнал, но игрок B получит сигнал из областей видимости 1 или 2


Группа
Установите группу чипа используя signalSetGroup(S) перед вызовом функций runOnSignal, sendSignal, или signalSetOnRemove

Изначально группа сигнала чипа имеет значение "default".

runOnSignal() будет относится к сигналу в пределах заданной группы, это также относится к посылаемому сигналу

Любой сигнал получаемый чипом будет запускать чип независимо от текущий группы (до тех пор пока он относится сигналу и группе посылаемомого сигнала)


Чип никогда не будет работать, если он посылает сигнал сам себе.

Signals are issued 10ms after the first unissued signal was sent.
There can only ever be one unissued signal/group combination per receiver in each scope.

Пример работы
Команды
Функция	Возвращает	Описание
signalSetGroup(S)		Устанавливает текущую группу сигнала E-2 к S, используется во время вызова runOnSignal, signalSend, и signalSetOnRemove
signalGetGroup()	S	Возвращает текущую группу сигнала E-2
runOnSignal(S,N,N2)		If N2 == 0 the chip will no longer run on this signal, otherwise it makes this chip execute when signal S is sent by someone in scope N.
signalClk()	N	Returns 1 if the chip was executed because of any signal, regardless of name, group or scope. Returns 0 otherwise.
signalClk(S)	N	Returns 1 if the chip was executed because the signal S was sent, regardless of group or scope. Returns 0 otherwise.
signalClk(S,N)	N	Returns 1 if the chip was executed because the signal S was sent to the scope N, regardless of group. Returns 0 otherwise.
signalClk(S,S2)	N	Returns 1 if the chip was executed because the signal S2 was sent in the group S, regardless of scope N . Returns 0 otherwise.
signalClk(S,S2,N)	N	Returns 1 if the chip was executed because the signal S2 was sent in the group S to the scope N. Returns 0 otherwise.
signalName()	S	Возвращает имя принимаемого сигнала
signalGroup()	S	Возвращает имя группы принимаемого сигнала
signalSender()	E	Возвращает entity чипа который отправил сигнал
signalSenderId()	N	Возвращает entity ID чипа который передал сигнал. Полезно, если entity больше не существует
signalSetOnRemove(S,N)		Устанавливает сигнал посылаемый чипом, когда он удаляется
signalClearOnRemove()		Убирает сигнал посылаемый чипом, когда он удаляется
signalSend(S,N)		Посылает сигнал S в область видимости N. Дополнительные вызовы этой функции с тем же сигналом будут перезаписывать старый вызов пока сигнал выдается
signalSendDirect(S,E)		Посылает сигнал S на указанный чип. Множественные вызовы для разных игроков не перекрывают друг друга
signalSendToPlayer(S,E)		Посылает сигнал S к чипам , принадлежащим данному игроку. Множественные вызовы для разных игроков не перекрывают друг друга

GLON
Разработал: TomyLobo

Описание
Это расширение позволяет превратить строку в строку массив или таблицу значений. Неподдерживаемые типы элементов

Кости
Некоторые типы entity (Vehicle, NPC, Weapon)
данные рейнджера (ranger) если рейнджер был направлен на один из типов entity, упомянутых ранее .
Пример работы
Команды
Функция	Возвращает	Описание
glonEncode(R)	S	Декодирует R в строку, используя GLON
glonEncode(T)	S	Декодирует T в строку, используя
GLON

glonDecode(S)	R	Декодирует S в массив, используя GLON
glonDecodeTable(S)	T	Декодирует S в таблицу, используя GLON
3D Голограммы
Разработал: IamMcLovin и ZeikJT

Описание
Добавляет возможность проецирования 3D объектов. С этими объектами нельзя взаимодействовать как с большинством других пропов; единственный способ управлять ими - использовать эти функции.

При использовании функции holoCreate, имейте в виду, что существует задержка, связанная с созданием голограмм чтобы избежать зависания сервера. Избегайте многократного использования holoCreate. Вы должны использовать функцию HoloCreate только один раз для каждой голограммы в коде, например, используя функцию first(). Используйте остальные функции, например holoPos, чтобы обновлять их в дальнейшем.

Заметьте, что кроме wire_holograms_display_owners, все другие консольные команды могут использовать только администраторы!

Консольные команды
Функция	Возвращает	Описание
wire_holograms_display_owners		Показывает лист владельцов галограмм
wire_holograms_remove_all		Удаляет все голограммы на карте
wire_holograms_block		Введите имя (или часть имени), чтобы запретить игроку создавать голограммы
wire_holograms_unblock		Введите имя (или часть имени), чтобы снова позволить игроку создавать голограммы
wire_holograms_block_id		Введите Steam ID, чтобы запретить игроку создавать голограммы
wire_holograms_unblock_id		Введите Steam ID, чтобы снова позволить игроку создавать голограммы
wire_holograms_max		Определяет максимальное количество голограмм которое которое может иметь игрок
wire_holograms_size_max		Определяет максимальный размер голограмм в соответствии с функцией holoScale
Пример работы
Команды
Функция	Возвращает	Описание
holoCreate(N,V,V,A,V)		Index, Position, Scale, Angle, Color (RGB)
Создать голограмму
holoCreate(N,V,V,A)		Index, Position, Scale, Angle
Создать голограмму
holoCreate(N,V,V)		Index, Position, Scale
Создать голограмму
holoCreate(N,V)		Index, Position
Создать голограмму
holoCreate(N)		Index
Создать голограмму
holoDelete(N)		Index
Удаляет голограмму с указанным индексом
holoScale(N,V)		Index, Scale
Размер голограммы
holoScaleUnits(N,V)		Index, Scale
Scales a hologram in each direction according to Garry's Mod units, given by a vector
holoPos(N,V)		Index, Position
Установить позицию голограммы
holoColor(N,V,N)		Index, Color, Alpha
Изменить цвет голограммы
holoColor(N,V)		Index, Color
Изменить цвет голограммы
holoAlpha(N,N)		Index, Alpha
Меняет параметр Alpha голограммы
holoShadow(N,N)		Index, Shadow
Установив это значение в 0 у голограммы отключаються все тени, установка значения в 1 приведёт к их отображению
holoAng(N,A)		Index, Angle
Установить позицию вращения голограммы
holoModel(N,S,N)		Index, Model, Skin
Установить модель на голограмму
holoModel(N,S)		Index, Model
Установить модель на голограмму
holoSkin(N,N)		Index, Skin
Смена скина голограммы
holoMaterial(N,S)		Index, Material
Смена материала голограммы
holoRenderFX(N,N)		Index, Render FX #
Изменяет эффект отображения для голограммы
holoParent(N,N)		Index (current Holo), Index (Holo being parented to)
Прикрепляет одну голограмму к другой
holoParent(N,E)		Index, Entity
Закрепить голограмму за ентитей
holoUnparent(N)		Index
Убирает любые родительские свойства с голограммы
Список моделей
["cone"]
["cube"]
["cylinder"]
["icosphere"]
["icosphere2"]
["icosphere3"]
["prism"]
["pyramid"]
["sphere"]
["sphere2"]
["sphere3"]
["torus"]
["torus2"]
["torus3"]

а поебаться тебе не завернуть?
а сто хуёв — большая куча?
апчхуй
архипиздрит
ахуй
ахулиард
беден как Адам, и хуя прикрыть нечем
без пизды
бля
блядво
блядёшка
блядина
блядища
блядки
блядовать
блядовитый
блядоёбина
блядский
блядство
блядствовать
блядун
блядь
блядькать
блядькнуть
бляха-муха
босый хуй
босым хуем около голой пизды шутки не шутят
буква «ю» — по хую
был бы хуй, а подхуйки найдутся
в ахуе
в два хуя
в душе не ебу
в еблет наклацать
в жопу ёбаный
в пизду
в рай въехать на чужом хую
в рот ебаться
в хуй дует
в хуй дышит
в хуй не всраться
в хуй не дуть
в хуй не ставить
в хуй не упереться
веселоебучесть
веселоебучий
весь в поте и хуй в роте
весь в поту и хуй во рту
вешать лапшу на хуй
взъёб
взъебать
взъёбка
взъебти
взъёбывать
влындить хуй
во рту мухи ебутся
война — хуйня, главное — манёвры
вола ебать
волоёб
волоёбство
вот и весь хуй
вот те нате — хуй в томате!
врубить съебаторы
всё в ажуре, а хуй на абажуре
всё пучком и пизда торчком
вхуяриться
въёб
въебать
въебаться
въебашить
въебенить
въёбка
въёбывать
въехать в рай на чужом хую
выблядок
выебанный
выебать
выебаться
выебина
выёбистый
выебнуть
выебнуться
выебон
выебонщик
выебсти
выебти
выёбывать
выёбываться
выеть
выпиздеться
выпиздить
гавкнуть пиздой
где совесть была, там хуй вырос
головка от хуя
голодная пизда
голосуй — не голосуй, всё равно получишь хуй
голохуевка
горит пизда
дать в еблетку
дать пизды
дать по ебалу
дать по пизде мешалкой
дебилы, блядь
девятый хуй без соли доедать
дневальный! подай станок ебальный!
до пизды
до хуища
до хуя
довыёбываться
доёб
доебать
доебаться
доёбистый
доёбка
доебсти
доебти
доёбчивость
доёбчивый
доёбщик
доёбывать
доёбываться
доигрался хуй на скрипке
долбоёб
долбоебизм
долбоёбина
долбоёбище
долбоёбский
долбоёбство
допиздеться
дохулион
дохуя
драпиздон
драпиздончик
друг дружку ебут и деньги в кружку кладут
дуроёб
дядеёб
ёб
ёб вашу мать
ёб иху мать
ёб твою мать
ёб твоя мать
ебабельность
ебабельный
ебак
ебака
Ебаков
ебал
ебал я тебя в грызло
ебала
ебала жаба гадюку
ебалай
ебалайствовать
ёбалды
ебало
ебало завали!
ебало на ноль!
ебало офнуть
ебало раскурочить
ебало сверни!
ебало свернуть
ебальная
ебальник
ебальник начистить
ебальник просрать
ебальник разрисовать
ебальничек
ебальный
ебальня
ебальце
ебан
ебанарий
ебанат
ебанатик
ебанашка
ебание
ебанизм
ебанина
ебанистика
ебанистический
ёбанный
ебано
ёбаногандонный хуепедераст
ебаноид
ебанутость
ебанутый
ебануть
ебануть в бороду
ебануться
ебанушка
ебаный
ёбаный
ёбаный в жопу
ёбаный в рот
ёбаный насос
ёбаный покос
ёбаный стос
ёбаный стыд
ёбаный шашлык
ёбань
ебанье
ебанько




0:04 / 14:15 (13:42)


ИСТОРИЯ ЧИТОВ

Restart
424 тыс. подписчиков

Вы подписаны
Скачать
720

11 тыс.


Поделиться

Скачать

Создать клип

162 тыс. просмотров  4 года назад
Играй бесплатно в Калибр - https://bit.ly/2P7uxvo

По вопросам рекламы - zhironkin.ilya@gmail.com …
562 комментария
NAAIN
Введите комментарий

@T--wk9oe
4 года назад (изменено)
Вот тебе кулстори. У супонева в его "денди-новая реальность" был конкурс на лучшие секретки в играх. В одном из выпусков победил пацан, который нашел чит-код ABBA ABBA в сеговском аладдине.  Он рассказал, что однажды ему позвонил друг и ему пришлось поставить игру на паузу. Пока трепались он настукивал рандомно и ритмично кнопки на геймпаде  и таким макаром открыл меню с доступом ко всем уровням (код вводится как раз на паузе).

139



Ответить


4 ответа

@I_BlackWolf_I
4 года назад
Если настоящий спецназ и правда работает как в калибре, то я лучше в окно ливну.

179


Ответить


5 ответов

@markus_glevera
4 года назад
Есть крутой чит, Alt F4, работает почти во всех играх. Целиком меняет игру

710



Ответить


25 ответов

@sinon8626
4 года назад
читы хорошая тема до момента пока они не в онлайне

432


Ответить


16 ответов

@DedHobbit
4 года назад
читы-это интересная вещь для одиночных игр.иногда это может вдохнуть вторую жизнь в уже пройденную игру.
p/s читы в онлайне-это зло

89


Ответить


@user-rt9li6ib4r
4 года назад
Мои любимые два чита на ГТА: все люди пытаются убить друг-друга и игрока + у каждого человека рандомное оружие. Такое мясо в городе

94


Ответить


6 ответов

@barsukRND
4 года назад
Самый угарный чит во второй Эпохе. Не тот, который про машины. Там есть чит, который дает играть за природу. Тип рил управлять оленями, кабанами и птицами)))

24


Ответить


@Nickkmd999
4 года назад
Помню в 2004 у меня даже был блокнот с читами к гта и прочим играм, который мы переписывали друг у друга.

139


Ответить


3 ответа

@user-lk5es2nv6b
4 года назад
Да сохранит вас iddqd и да приумножит ваше благосостояние idkfa.

43


Ответить


@one_aprelsky
4 года назад
Самые угарные читы были в "Postal 2", особенно тот, что позволял стрелять котами :))

8


Ответить


@NickFactor
4 года назад
Самый клевый чит был в Вайс Сити и он спавнил у Томми Версетти сигарету в зубах

27


Ответить


2 ответа

@Reffis
4 года назад
До сих пор пытаюсь применить Konami код к своему  кошельку,  что бы открыть новые финансовые возможности)

31


Ответить


4 ответа

@terrasdoil
4 года назад
Помни юный падаван, читы - зло! Но не в сингплеере.

13


Ответить


@jackasmile6517
4 года назад
могла пропустить, потому что слушала фоном, но ульта у солдата 76 и вдовы в овервотч - это и есть большая отсылка к читам

25


Ответить


3 ответа

@alekshabarov4940
4 года назад (изменено)
Хорошее настроение

Это когда выходит по ролику у командера и на Restart

37


Ответить


8 ответов

@MengShou
4 года назад
В симс написал Motherlod и ты уже в машине ФБР.

15


Ответить


1 ответ

@makcbill8504
4 года назад
Спасибо за видео. Я это давно просил и ждал!

1


Ответить


@clodyamodya8910
4 года назад
"whosyourdaddy - олдскулы долой"

12


Ответить


1 ответ

@johnxina3642
4 года назад
Нажми прыжок во  время финальной заставки черного плаща перед тем, как он споткнется об камень и тогда он перепрыгнет его и начнется еще один уровень с анти плащом в роли финального босса. Самая знаменитая байка про игры среди людей, старше 27 лет

1


Ответить


@mrinbmrinb9419
4 года назад
Сцены с "неудачными" дублями эт круто))

Из-за читеров покинул несколько некогда любимых онлайн проектов. Сейчас вообще играю на плахе)
Но вот в синглплеере это весело, гташки конечно масштабнее всего в этом запомнились))
Трактор на нитро казался забавным. Тогда.)

1


Ответить


@nataliya7923
4 года назад
В Героях-4 были коды на время боя, которые превращали героя в рокера с гитарой или в старого дедушку с ходунками. Дедушка был особо хорош, потому что дальняя атака была как от Горящей стрелы, а в ближнем бою он распадался на две половинки, и оттуда атаковало чудовище.

1


Ответить


@user-hi2lc7sx1s
4 года назад
Ух ска! Как во время. Песдуешь, такой, вечером домой, а тут Бро Командер с новым видосиком ждёт.

3


Ответить


@user-pn7ub3od9w
4 года назад
До сих пор помню, как мы с пацанами будучи школьниками резались в nfs 2 с читами - выбирали модельки грузовиков,  легковушек, киосков и тд... Даже на бревне гоняли!

1


Ответить


@bobr9364
4 года назад
Развернуть пушку назад  и в обычном режиме можно навести шорох в городе и лететь снося все на своем пути.
Однако лучшее сочетание это танк и взорвать все. Ты спавниш танк, залезаешь, нанимаешься в полицию, вылезаешь, взрываешь все вокруг, спавнишь танк, залезаешь, сдаешь заказ и получаешь новый и так по кругу до денежного удовлетворения.



Ответить


@jayhomacha8137
4 года назад
Всегда умиляло, когда какой-нибудь школопёс забегает на стрим к 35-нему мужику, который сел за комп задолго до того, как батя школьника присунул его мате, и пишет в чат про комбинацию Alt-F4 с понтом "Гы-гы, какую я оригинальную шутку придумал, щас будет весело!" ))



Ответить


@medvedkin1337
4 года назад
Помню, развлекались с консолью в Fallout 3. Когда меня задалбывало бегать через всю пустошь, если была такая необходимость, забивал на своего перса setscale 10 и огромный великан за секунды пробегал все скучные территории)

1


Ответить


@himurakenshin5364
4 года назад
Бмарвинб в Готике. И вселяешься в любого нпс. От жука до дракона. Вот это было весело

1


Ответить


@sergeomiller4267
4 года назад
4:02 
ОооО!!! Батла за Бикини Боттом на Gameboy SP!!!
Моё ностальгическое сердечко йокнуло!



Ответить


@FattestWarlock
4 года назад
Я надеюсь в видосе про Сегу сатурн будет СЕГАТА САНШИРО и его ЭПИЧНАЯ ПЕСНЯ

7


Ответить


@Adckuu_DP04uJIA
4 года назад
чит на летающие машины + чит на откидывание машин при столкновении в ГТА СА. веселое мероприятие, конечно

3


Ответить


@denisfedosov7083
4 года назад
Забавная тема в классическом Deus Ex была, во время игры заходишь в credits пишешь thereisnospoon, и игра включает режим Матрицы



Ответить


@user-th6is4ve4r
4 года назад
ЧИТ в The Stanley Parable, который отправляет тебя в комнату, где рассказчик тебя отЧИТывает.

1


Ответить


@sobskii
4 года назад
Помню свой первый код на Jurassic Park. Я тогда дошёл до последнего уровня и не мог его пройти, нашёл книгу кодов, выписал код на «последний уровень» и когда ввёл его оказался там же где и застрял. Пришлось думать.

2


Ответить


@ThisIsVenom65
4 года назад
В Age of Emire и в Age of Mythology в частности при вводе OCANADA спавнился ЛЕТАЮЩИЙ МЕДВЕДЬ В ПЛАЩЕ С КАНАДСКИМ ФЛАГОМ СТРЕЛЯЮЩИЙ ЛАЗЕРОМ ИЗ ГЛАЗ
Вот такого поворота злобный титан Кронос точно не ожидал : D

1


Ответить


@pablumemes
4 года назад
Помню, папа принес мне распечатку всех читов для инспектора гаджета на Геймбое. Эх... было время

3


Ответить


@sergeik787
4 года назад
Когда- то в середине 90ых были игра на денди Принц Персии. Там по прохождению уровня давали код с которым ты сразу мог попасть обратно на тот уровень который прошел. Единственное если не ошибаюсь на прохождение всей игры давалось всего час если не ошибаюсь. Т.е. перейдя на второй уровень затратив 10 минут на первый у тебя оставалось 50 минут на прохождение остальной игры. И каждый раз вбивая код и проходя на второй уровень у тебя оставалось 50 минут. Игра была крайне сложная, ну и я был пиздюком 12 лет, так что игру я так и не прошел. Но один раз я не правильно вбил код перепутав две буквы которые стояли рядом и попал на несколько уровней вперёд, правда с остатком времени совсем в мизер. И тогда я понял что меняя несколько букв в коде можно прыгать по уровням, правда при этом менялось и остаток времени. Тогда первый раз себя почувствовал хакером пробуя десятки разных комбинаций что бы пройти эту ненавистную игру.

1


Ответить


@roman_zubrilin_88
4 года назад (изменено)
В игре "Казаки" есть (как и в "StarCraft") чит на показ всей карты. Суть не столько в действии, сколько в его названии - WWW. Типа как часть адреса сайта.


Забыл игру для "MS DOS", но там был чит, позволяющий скрыть игру от начальника на работе и показать псевдо консоль.


Мой любимый чит - во времена "Sony PlayStation" пираты выпускали диск с "Tekken 3", на котором было два режима. Обычный и со всеми открытыми персонажами. Помню, что для открывания Доктора Босконовича надо было проходить "Tekkn Force", но я так его и не осилил.


Кстати об игре "StarCraft". Когда были популярны клубы и мы с моим покойным братом играли по сети, он каким-то образом отрывал всю карту и ещё как-то читирил.



Ответить


@user-wj2sn5cb9o
4 года назад
То чувство,когда задолбалось жрать дошик. Да автор? Эт намёк на рекламу КЛЛибр ! Каллом-хорошую игру не назовут !

4


Ответить


@cpt.macmillan1561
4 года назад
Помните бумажку с чит кодами для gta sa!???!

17


Ответить


2 ответа

@4YBAKProductions
6 месяцев назад
Читы в Готике 2 позволяют снимать машинимы, вот это прям база 



Ответить


@viking19777
4 года назад
Читы это было весело, особенно в гта, танк это было круто)))

1


Ответить


@Alexsakharniy
4 года назад (изменено)
Этот момент, когда до сих пор используешь ArtMoney, а через три недели новое десятилетие...

1


Ответить


@-nPoKa3HuK-
4 года назад
AC вверх B вверх BA вниз вниз Блод код на Мортал первый. До сих пор помню)))

1


Ответить


@Sviorr
4 года назад
В Jedi Academi можно было читами включать крутейшие вещи:
1) расчлененку! - наруби штормтрупера!
2) Супер силы 4 уровня - полноценный контроль разума через отвлечение - вселись в тело ранкора и разнеси все!
3) Новые стили владения мечом! (Как у Дессана и Тавион)
4) Менять скин игрока - проходи игру за Бобу Фета с работающим джетпаком!
5) всякие мелочи вроде таунтов и замедления времени по нажатию клавиши.



Ответить


@link5635
4 года назад
Мне кажется, самый прикольный чит был в игре Oni. Путем нехитрых манипуляций в файле игры, можно было по нажатию клавиши F1 в самой игре, менять персонажа со стандартного на любого противника. Прикольно было пройти игру за главного антагониста, например. Эххх... было время.



Ответить


@MrGoisa
4 года назад (изменено)
в конце заинтриговал))почувствовал себя Хатико



Ответить


@elenatixomirova33
4 года назад
про лару крофт. там комбинация правильная была одна. с прыжком назад. открывалось все оружие. после введения первых комбинаций до прыжка, прыжок в любую другую сторону означал смерть) разрывал лару.



Ответить


@Popug404
4 года назад
Когда у меня появился CheMax, я чувствовал себя видеоигровым Богом.

3


Ответить


@user-tu1do1lz3y
4 года назад
ripazha, aezakmi, kjkszpj... охренеть, я их почти с два десятка из GTA помню... до сих пор.  10 почти лет прошло)



Ответить


@elke1028
4 года назад (изменено)
единственное читерсто, которым пользовался - это в GTA на количество звезд розыска. Такое вот соревнование было, кто дольше продержится на максимальном уровне, эдакое родео. Но последней частью, где вся это фигня закончилась - был Vice City. Без всяких бессмертий, дополнительного оружия и прочего, только звезды. Такая штука очень распространенная в клубах была еще, кстати, кто мог продержаться дольше всех - тому оплачивали дополнительное время



Ответить


@Sanchez_pi
4 года назад
У готики была прикольная система читов. Правда из забавного я лишь помню, что всех неписей можно было сделать огромными или наоборот маленькими



Ответить


@Dr.Stone176
4 года назад
Очень клёвая тема была plants vs zombie. Растишь дерево и оно выдает тебе "читы" которые меняли зомби и тд.



Ответить


@sergeysbg634
4 года назад
Тони Хок про скейтер 3, открывающийся лист с чит-кодами невесомости, больших голов, скрытых персонажей и уйму иных всяческих забавных  возможностей, тем самым привлекая игрока задержаться в процессе на подольше.



Ответить


@user-ur4bn5eh4v
4 года назад
В fallout 3 чит увеличивающий модель персонажа включаешь и идёшь бить бегемота в рукопашную, эта битва войдёт в историю



Ответить


@Vas_Vas_N7
4 года назад
ABC-CBA-CBA-CBAAA-CACB-CACACA-BCB


Это код к игре Робокоп против Терминатора, на Sega. Он давал бессмертие и способность очень высоко прыгать. Вроде даже прыгать сквозь потолок на уровень выше и проходить сквозь стены. А если после ввода этого кода прыгнуть в левый верхний угол, то Робокоп телепортируется в черную комнату. Если долго идти вправо в этой комнате, то в конце  появится групповое фото команды разработчика на заднем фоне. После выхода из черной комнаты игроку добавят все виды оружия (но это не точно).


PS Прошло больше 20-ти лет! Почему я это помню?!



Ответить


@UAkuni
4 года назад
Вот прохладная из детства по поводу читов: после выхода GTA Vice City в одном компьютерном клубе сделали дополнительный заработок - распечатать читы с CheMax на любую игру. Многие тогда ходили по клубам с листом читов на Vice City, но лишь единицы обращали внимание, что часть читов не оказывалась в списке (админы того клуба печатали только одну страницу и даже не парились взглянуть, что там еще может быть вторая). То, что есть в городе всего горстка избранных, у которых есть совершенно другие читы, родило легенду о совсем несусветных и безумных читах для Vice City



Ответить


@user-lc9ks4zf4e
4 года назад
Посмотрев твоё видео прям ностальгия какая-то взяла. Ну честно говоря я и до сих пор если сложно бывает играть, просто ввожу чит и норм. Я считаю, что читерство в одиночной игре - это дело каждого. А вот в многопользовательской, или онлайн игре - это уже мошеничество.



Ответить


@user-vr3hs5yp6o
4 года назад
Ого новый видос на ПЕРВОМ канале коммандера.
Нет в натуре тут видосы чаще выходят



Ответить


@Aabbcczzxxcc
4 года назад
8:06 да он на нереальную реакцию стреляет, там без очков видно что очевидно палится.

1


Ответить


@asdfasd4571
4 года назад
787898 - навсегда в наших сердцах.

2


Ответить


@fan-di9ee
4 года назад
Мой любимый чит-код был в Jedi Knight Academy на реалистичное разрубание конечностей световым мечом



Ответить


@shampipi
4 года назад
на сеге в игре robocop vs terminator был код добавляющий новых персонажей в и повышающий уровень жести, крови и кишок. реально круто было



Ответить


@Etna911
4 года назад
я помню, кросфаер на денди, каким то макаром натыкал стрелочками и селектом код который хп восстанавливал.. потом всё как в тумане)



Ответить


@PNllAll
4 года назад
В Vimpires the Masqarade: Bloodline если набрать в консоли money [значение] вместо денег меняется размер груди у женского персонажа

2


Ответить


@Amsterdamn76
4 года назад
Закрой крышечку флешки на рекордере! :)



Ответить


@somsokkric7732
4 года назад
в ремастеринге ТУРОК2 читы на головы,руки и перекрашивание всего мира до сих пор доставляют)))



Ответить


@zakturbo1
4 года назад
Читы это было весело, сейчас их заменили трейнеры, но сути это не меняет, так же весело как и раньше, включил годмод и играешь себе не напряжно, и в онлайне тоже можно Читы поюзать)



Ответить


@user-um1of8md2d
4 года назад
>как работает настоящий спецназ
>калибр



Ответить


@Grilled_Sandwich
4 года назад (изменено)
A, C, вверх, В, вверх, В, А, вниз
MK Ultimate на сеге - меню, где могут открыться боссы, фаталки и 99 "континьюсов". 
Денис, 29 годиков

1


Ответить


@Anthony_Daniels
4 года назад
Массовый хаос в GTA San Andreas. Все против всех



Ответить


@Next733
4 года назад
На заре Dota AllStars, в середине нулевых, рецепты на артефакты не требующие рецептов (а рецепты были нужны для того, чтобы понять из чего артефакт собирается) продавались за дерево. Дерево в Доте (по понятным причинам) достать было нельзя и на вопросы новичков:
-Где достать дерево?
добрые друзья отвечали
- alt+q+q
=)



Ответить


@risengod4406
4 года назад
Топовый видос от топового человека



Ответить


@Aabbcczzxxcc
4 года назад
Помню была книжка на сегу у меня для мк2, до сих пор в памяти abbczxy или как то так ))

1


Ответить


@IvanIvanov-dl1rq
4 года назад
Интересно. Давай ещё. Ретро.



Ответить


@ManOkaR
4 года назад
Поправочка, летать на танке через стрельбу назад в Вайс Сити можно было без чит-кода. Так работала механика отдачи орудия танка сама по себе



Ответить


@eviltima
4 года назад
Мне нравились мутаторы в анрил тонамент. Скорость в процентах.



Ответить


@chai731
2 года назад
Мне очень понравилось то как разрабы дума поступили с читами, в етернал это посхалки к читам из старого дума ввиде катреджей а в 16 это легальные бонусы на уровнях



Ответить


@ifox_live
4 года назад
В казаках, не помню точно что надо было писать там, но можно было наклипать любое количество любых войск в любой карте или сценарии)



Ответить


@leer74
3 года назад
за винамп и двор, стреляю в упор



Ответить


@sapojnik_lubit_popizdet
4 года назад
В анчартедах был, правда не чит, а функция, когда можно было Дрейка сделать жирным) прикольно



Ответить


@user-lw8le5zu3g
4 года назад (изменено)
О Свендук ещё не успел спереть тему для видео



Ответить


@CAPTAIN__RUSSIA
4 года назад (изменено)
Штирлиц все стрелял и стрелял в Бормана.
Борман все не падал и не падал.
IDDQD — подумал Штирлиц.
IDKFA — подумал Борман.

PS: 9:30 Как так не ведётся? Ведётся, самым радикальным способом - запретом gamedev и читерство изживёт себя.



Ответить


@user-ou3kh4iq4w
4 года назад
Говоря про читы - у меня до сих пор в коробке из под "Героев 3: Возрождение Эрафии" лежит листок с читами на бессмертие, ходы, магию и Архангелов. Но игра на это ругалась, обзывала тебя читаком и ссылала на последнее место в рейтинге. Печалька! -_-



Ответить


@user-ee9ue5sn7l
4 года назад
Я обожал через консоль в Half-Life 2 менять урон у монтировки. Враги буквально летали по карте от огромного урона. Так же, я просто обожал в начале ввести impulse 101 и делал себе финальный гравити ган. Был момент, когда в халф-лайф забиндил всякие команды на клавиши. Команды были по типу "god", "noclip" и прочее. Не знаю, можно ли это считать за читерство, но я обожал швырять противников по карте, кидать на километры коробки и удалять npc во время катсцены :)



Ответить


@user-fe4nv6te8b
4 года назад
На мк трилоджи л1р1л2р2+вверх открывал всех персонажей и фаталити с одной кнопки - это первый, который пришёл в голову)



Ответить


@paukangibson4636
4 года назад
Ну артмани не чит, там просто значения люди меняли, чаще всего это делали в играх где надо много задротить и люди не хотели тратить на это время, поэтому просто ломали деньги или ресурсы, что кстати логично, некоторые разрабы настолько головой поехавшие, что могут такой гнилой экономики в игру напихать, что артмани скорее становится заплаткой к игре, а не читом

4


Ответить


@edkachalov
4 года назад
У Стим есть античит?
- Ах-ха-ха.

13


Ответить


@friendlykiska8361
4 года назад
А мой любимый чит-ванпанч чит в ГТА СА. Убивать всех с 1 удара и откидывать на много метров было очень весело



Ответить


@shinkey7808
4 года назад (изменено)
Сразу 2 ролика в один день? 
*О май гад, Кома, ты что крейзи? *



Ответить


@mastergrad9293
4 года назад
Помню, в одной игре был чит, который менял звуки выстрелов с реалистичных на издаваемые людьми, типо: "Пиу-Пиу", "Вжу-у-ух", "Тух-Тух".



Ответить


@MacSandae
4 года назад
Интересный чит на скайрим, открыть все локации на карте, это капец как интиресно, и можно много нового найти



Ответить


@ZzZo6JIuH
4 года назад
У меня на Соньке первой был Взломщик Кодов 9000 - это вам не ГеймГуру :)



Ответить


@tyurm
4 года назад
Код конами был в Anthem. Когда надо нажать старт и надо ввести код.



Ответить


@user-nt2up8oz2e
4 года назад
И ушел в никуда )))))

1


Ответить


@criticaldamage5878
4 года назад
Теперь новый тренд! И вместо читов разработчики дарят нам баги! Такая же весёлая фигня, но случается не по воле игрока

1


Ответить


@burlit33
2 года назад
Лучший выпуск



Ответить


@TechnoTurianArtem
4 года назад
Лайкос за звук активации чита из San Andreas.



Ответить


@user-iv7ke8lk5f
3 года назад
Читы читами до поры до времени, одно дело в одиночной другое дело в сетевых играх



Ответить


@agoodbard7867
4 года назад
Эхх...помню как в детстве баловался с кодами в 3 и 4 героях...



Ответить


@paromshikstixa1323
4 года назад
Прикольно не именно читы, а файл handling в папке data. В GTA3, VC, SA



Ответить


@user-oy4rs3kx9r
4 года назад
В опере тоже есть конами код, если ввести его то открывается меню доп. Настроек



Ответить


@user-lj8wh4oe2h
4 года назад (изменено)
В Симсе читы уже не фановая вещь, а инструмент, с которым играют на постоянной основе девочки(я). Увеличивать максимальное кол-во персонаже в семье,  редактирование некоторых игровых механик(продолжительность жизни персонажа и отдельного возраста, продолжительность беременности, та даже длительность игровой минуты можно изменить). Есть целый мод, который позволяет все перелопатить, который обновляют для каждой новой версии игры. И это только то, что имеет практическое значение. Но самое крутое, что можно добавить смерть в семью, раздеть её/его, и понять, что это негр



Ответить


@silentip_design
4 года назад (изменено)
Никак не мог привыкнуть к туману войны в StarCraft и WarCraft 3, по этому всегда играл с читом на снятие тумана. Как можно понять работает это только в одиночной кампании. В других играх читы не использую



Ответить


@DeadPhilosof
4 года назад
В свое время (довольно давно) в ммошке одной корейской, которая  в россии издавалась инновой, получал вещи которые даются за премиум подписку, путем перехвата и подмены пакетов данных.
Забавное было время!



Ответить


@alienwalker6219
4 года назад
С помощью трейнера добавил в нфс карбон беху из заставки в начале и прошел на ней игру.



Ответить


@user-ze6kj3ib3z
4 года назад
Wolfenstein(2009) чит превращает головы противников в огромные тыквы и чит в котором противники при смерти разлетаются в виде колёс



Ответить


@pavelklipp3760
4 года назад
При упоминании artmoney  и chemax сразу улыбнуло.



Ответить


@user-notanoty
4 года назад
Эх видео блуджать пересмотреть захотелось

4


Ответить


@user-bf3dz3gf5d
4 года назад
А как же макросы? В той же варфасе макросы на мышку убирают отдачу, любая пушка превращается в луч смерти.



Ответить


@sonairys929
4 года назад
9:40 Тук-тук-тук-тук-тук-тук-тук МУУУАААААААААА



Ответить


@user-sy3fq3in8e
4 года назад
А чем сейчас пользуются вместо винампа?



Ответить


@OlegSmileSSToRM
4 года назад
Gta samp мультиплеер в са, обожал заходить в магазин оружия, там всегда куча народа закупали пушки, я спамил самолет и закрывал им выход, заблокированным игрокам оставалось ничего кроме как ждать или перезаходить, теряя все купленное оружие, урон в магазинах был отключен если что. Ох сколько пердаков я поджег, ни капельки не жалею



Ответить


@Golover_Vol
4 года назад
В Fortnite отсылка скорее не к Gradius, а к Space Invaders



Ответить


@SephirothMind
4 года назад
Читерство убило одну мультиплеерную стрелялку, была такая, S4 называлась ( жаль, если честно - она была очень веселая



Ответить


@user-iw5kh5ui7d
4 года назад
Вижу рестарт - жму автоматом лайк.



Ответить


@tonyaddams
4 года назад
THPS 2 - читы как фича: список читов открывался по мере задрачивания игры на 100% за всех скейтеров и там были как раз большие головы, левитация и прочие приколюхи которыми не грех разнообразить досуг в любимой игре когда уже всё прошёл и всё надоело.

1


Ответить


@Zeeken_Zeeken
4 года назад
GTA III : чит на то, чтоб все "npc"охожие были ко всем враждебными + чит, чтоб у них всех было рандомное оружие. Как итог: Полный трэш. Долго так развлекался. Вот он "Сурвайвал"! =)
Если сюжетку не прошёл, лучше не портить этим сохранения, ибо при загрузке их, некоторые коды оставались даже после полного перезапуска игры. Либо сохранять такие фишки отдельным слотом. Эх, ностальгия =)



Ответить


@perisait5335
4 года назад
Стрельба котами в Postal 2,  супер чит код)



Ответить


@danted9490
4 года назад
Хочешь узнать как работает спецназ? Узнать всё о тактике и стратегии боя? Всего этого нет в "Калибр"



Ответить


@Gordon_Workshop
4 года назад
Читерил всего 1 раз в онлайне. Неосознанно. У меня на ГТА СА стоял CamHack(свободный полёт камеры). Я изучал катсцены с разных ракурсов и просто летал куда глаза глядят. Когда начал играть в САМП совершенно случайно заметил что он работает и в онлайне. Я мог на РП сервере подслушивать разговоры которые ведутся далеко от меня наблюдая за текстом над их головами, ведь сообщения не транслируются в чат на большое расстояние.

1


Ответить


1 ответ

@stefan-vj2wb
4 года назад
Debug mode в классических Сониках



Ответить


@rustam6446
4 года назад
какой сатурн? про дримкаст где обещанное видео?)

1


Ответить


@vfgb2010
4 года назад
Машина из конца первой мафии. Чтобы её получить, нужно было выстрелить в нужную точку маяка на одном из мостов, а затем отправиться за этой самой машиной в нужное место.
Как это умудрились обнаружить для меня загадка.



Ответить


@user-ry7gd1gx1k
4 года назад
Все любят ВХ и Аим, но только истинные гурманы оценят HESOYAM

1


Ответить


@oldpirate651
4 года назад
Самый лучший чит - прямые руки и большой IQ



Ответить


@user-bb9wf3kg7k
4 года назад
В 4 ассасине и 2 прототипе были весьма интересные читы



Ответить


@Altus6969
4 года назад
Бессмертие в шахматах...



Ответить


@user-zt5vi8im9g
4 года назад
8787898 на бессмертие в игре на старых мобильниках про красный мячик)))



Ответить


@lithiumredhead
4 года назад
Помню, использование Art Money доставляло истинное удовольствие! Особенно, когда удавалось изменить нужные значения. Ого, вот я хакером был крутым!



Ответить


@AlBEREZIN88
4 года назад
Мне больше верится, что чит коды сделаны именно разработчиками для разработчиков, тупо чтоб было легче пройти игру. А теперь можно за бесплатно нанимать тестеров, а в некоторых случаях даже сами люди за бетотест заплатят бабки



Ответить


@MasterKolis
4 года назад
Чит код на расчленёнку лазерным мечом в Джеди Ауткасте и Джеди Академии)

1


Ответить


@vanhoen89
4 года назад
heretic была такая игра на  dreamcast помню



Ответить


@user-wd4lx2yh8v
4 года назад
Ахахах! Калибор! xD Вот уморил)



Ответить


@user-bg8un1rj3c
4 года назад (изменено)
Меня смущает что Каргинов ушел из Стэндапа на ютьюб,но я подпишусь...



Ответить


@marcus_n_kane2048
4 года назад
чит-нечит, но в легендарной Fallout 2 к 7  уровню можно было ездить на Хайвэмене в силовой броне с импульсной пушкой на перевес) В Red Allert можно было закидать всё ядрёными бомбами) 

А в WOT до сих пор лепят отмазки про неразглашение ников забаненных за применение запрещённых модов...



Ответить


@user-nk9zx9ru5v
4 года назад
В постале можно было сделать огненную ссанину и стрелять кошками - о времена о нравы



Ответить


@dimonsd8464
4 года назад
Пользуюсь save wizard ps4, потому что нет много времени на игры, приходится пользоваться кодами.



Ответить


@eriksssss
4 года назад
Отличная производительность!



Ответить


@vitoandolini6089
1 год назад
В игре pro evolution soccer 2004 или 2005 можно было менять головы футболистов на голову акулы, опять таки большие головы самих футболистов, ещё что то. Вообщем было угарно с этими бошками бегать по полю.



Ответить


@ammonjerro396
4 года назад
Я бы читеров на кол сажал. Читы использовал только в оффлайн играх и когда они уже были неоднократно пройдены. Даже от уровня сложности сильно меняется геймплей игр, а когда читы используют, то вообще всё ломается.

1


Ответить


@prososolek6515
4 года назад
Репачино, тебя не хватает



Ответить


@mukhitak1185
4 года назад
Command and Conquer. Есть чит который превращает людей в ресурсы и когда харвестер будет собирать ресурсы люди будут орать будто бы их крамсают и забивают



Ответить


@chaoticgoodwarlock4142
4 года назад
Пока не посмотрел видео, и не услышал что сказал автор, вангую. Читы стали чем-то плохим когда началось ПвП.



Ответить


@Taumler
4 года назад
Сценарии у Булджать приобретаете?

1


Ответить


@roman354
4 года назад
Читы и сейчас делают в играх, но теперь они называются "тайм сейверами" и продаются самими разработчиками...



Ответить


@PhoenixRZN
4 года назад
В детстве любил читы. Как сейчас помню "show me the money" в "Starcraft" или "coward" в "Аллодах". Но, повзрослев, стал проходить тоже "Starcraft" без них, посмотрел на игру в том виде, в каком задумывали разработчики. И понял, что потерял ОГРОМНУЮ долю удовольствия от игры. С тех пор перестал ими пользоваться. Сейчас их, в принципе, не уважаю и считаю прерогативой детей (они для себя могут найти в этом что-то весёлое). Хотя, самый зашквар - это легальные читы. Вроде платных и одноразовых пакетов "праксис" в "Deus ex 2" или несколько мешков бонусных 500 золота в первом 'Dishonored". Хоть и обладал лицензионной копией игры со всем дополнениями и имел полное право взять этот бонус. Специально оставлял на столе. Если разработчики решили, что в начале должно быть мало денег и сложно, то мне эти платные бонусы нафиг не нужны.



Ответить


@user-zw1um5ee7t
3 года назад
Блин, вот я об этом не задумывался: тетрис образован от "тетра" - четыре. от нее же образована и тетрадь. следовательно, тетрис произносится через е.



Ответить


@user-nz8ki5qd1k
4 года назад (изменено)
Если бы не читы, то я бы, наверное, никогда не овладел x86 ассемблером. Одна из первых самописных программ как раз была процесс-патчером(тренер). Понятное дело, когда тебе уже за 30, запускать игрушки под отладчиком уже времени нет.



Ответить


@Izimirus
4 года назад
а что винампом перестали пользоваться ?



Ответить


@mrhironAB
4 года назад (изменено)
Эх... помню как в Act of War вводил читы которые добавляли спецназовца, джип ФБР или танк ммм... было круто делать спец операции во время компании. А еще крутой код есть на Квейк 4, когда появлялся бот (Солдат, Инженер или медик) Они конечно были тупые и не могли слушать команды, но ставить их в разных углах и что-бы они тебе помогали против НПС врагов было круто, создавалось ощущение что ты не один воюешь). а в HalfLife2  было круче там можно было забиндить и команды НПСам куда им идти, выбрать какого НПС спавнить, с каким оружием, а в РЕВЕНХОЛЬМЕ можно было сделать себя невидимым и спавнить комбайнов управляя ими, почти Гарис мод).


А еще с помощью программы Cheat Engine, мы с другом по сети против друг друга, взламывали количество очков в игре (В ТЫЛУ ВРАГА 1,2) что позволяло нам создать для себя миссию по атаке базы, колонны и тд. + создание своих карт это дополняло. Читы в правильных руках это шикарная штука.



Ответить


@oleg8349
4 года назад (изменено)
Мне нравилась система читов в космических реджерах2 где ты покупал чит за внутри игровые дни: 10к кредитов стоило 10 дней, 1млн. 300 дней, уменьшить массу в два раза у всего оборудования 200 дней. Т.е. что бы получить лям ты должен был быть в "завязке" 300 игровых дней. Ввел чит счётчик сбросился, не хватает дней чит не будет работать...
Потом разрабы с длс убрали ограничение и стало возможно любой чит в любое время вводить.



Ответить


@user-nf3id3gh8u
4 года назад
Ну тут сразу же лайк



Ответить


@nineouttaten
4 года назад
В qiwi банкомате можно было ввести IDDQD и играть в doom прямо в терминале



Ответить


@psboxlife9500
3 года назад
Один вывод хочешь играть без читов покупай консол

1


Ответить


@user-io6pi8jc5z
4 года назад
В любой уважающей себя игре должен быть хоть какой-нибудь чит.



Ответить


@Viktor.Borisenko
4 года назад
Самые топовые читы в the elder scrolls. Просто консоль, которая способна выполнять все команды в игре))

1


Ответить


1 ответ

@user-nx3cu5nx4f
1 год назад
А че тут думать, "как из ребят которые просто хотели получить удовольствие от игры , читеры превратились в нарушителей"
Потому что стали читерить в онлайн играх и мешать другим игрокам. Что тут думать ещё???

1


Ответить


@Antizet
4 года назад
В гта есть и веселые читы, не скажу, что за чит, уже давно забыл, но можно сделать хаос, что бы все нпс избивали друг друга, летающие машины или наоборот, гравитацию увеличить, ход времени можно регулировать



Ответить


@forgiveness_denied
4 года назад
CheatMax  спасибо что напомнил



Ответить


@xxKorBoxx
4 года назад
Мои любимые читы- в Варкрафте 3, в Героях 3 и очень полезные читы есть в Киндом Кам. А ещё код Конами очень интересно работает в Бесконечном Лете



Ответить

@alexx92rus75
4 года назад
и тут калибр)



Ответить

@user-ys6zh2sp1w
4 года назад
В Saints Row 2 Любил читами увеличивать модельку героя и выставлять низкую гравитацию и так я  мог летать по всей карте будучи гигантом



Ответить



25:28
Текущее видео
30 ЛЕТ РЕПУТАЦИИ В ПОМОЙКУ || ТРАГЕДИЯ FALLOUT 76
Restart
948 тыс. просмотров 5 лет назад


13:42
Текущее видео
ПОЛУЧАЮ IPhone за 1 РУБЛЬ!? ЧТО ЭТО НА САМОМ ДЕЛЕ? ПРОВЕРКА РЕКЛАМЫ
EVG
24 тыс. просмотров 4 часа назад
Новинка


1:12:00
Текущее видео
Крафт предметов для Архимага
GoodBoy TV
7,4 тыс. просмотров 7 дней назад


22:28
Текущее видео
КАК ИЗДАТЕЛИ МАНИПУЛИРУЮТ ИГРОКАМИ
Restart
184 тыс. просмотров 4 года назад


16:31
Текущее видео
Грамотный технический специалист осаживает ноутбукера
NOTEBOOKER
756 тыс. просмотров 3 года назад


9:34
Текущее видео
БЕРЕМЕННА В 16 АНТИ-ВЕРСИЯ (ПЕРЕОЗВУЧКА) #11
АНТИ-ВЕРСИЯ
256 тыс. просмотров 1 год назад


18:51
Текущее видео
📂💻 КТО И КАК ЛОВИТ ХАКЕРОВ Отдел К / КИБЕРПОЛИЦИЯ
Scammers
1,2 млн просмотров 2 года назад


15:35
Текущее видео
САМЫЕ ТУПЫЕ ЛАЙФХАКИ - Проверил ВИРУСНЫЕ ЛАЙФХАКИ ИЗ ТИК ТОКА
Дима Масленников
7,6 млн просмотров 4 года назад


10:37
Текущее видео
СтопХам-"Быдло Баба"
СтопХам Мск
1,8 млн просмотров 5 лет назад


37:24
Текущее видео
Ночь в БОЛЬНИЦЕ с Призраками... Такого я не ОЖИДАЛ! GhostBuster
Дима Масленников
10 млн просмотров 5 лет назад


16:57
Текущее видео
Магнитофон Орель-101-1 Стерео (Разбираем, измеряем, слушаем и смотрим схему)
Алексей Морозов
17 тыс. просмотров 12 дней назад


29:11
Текущее видео
На что способны эмуляторы сегодня?
Restart
384 тыс. просмотров 2 года назад


17:16
Текущее видео
ИГРЫ НЕ ПО ПРАВИЛАМ
Restart
225 тыс. просмотров 4 года назад


23:52
Текущее видео
Компьютерный мастер нагло разводит клиента на деньги
NOTEBOOKER
3,1 млн просмотров 4 года назад


9:17
Текущее видео
БЕРЕМЕННА В 16. УКРАИНА АНТИ-ВЕРСИЯ (ПЕРЕОЗВУЧКА) #2
АНТИ-ВЕРСИЯ
545 тыс. просмотров 5 лет назад


25:25
Текущее видео
КРУТОЙ ЭКСПЕРИМЕНТ В ПЯТЕРОЧКЕ / ЧТО БУДЕТ ЕСЛИ ПОКУПАТЕЛИ БУДУТ РАБОТАТЬ ЗА СОТРУДНИКОВ МАГАЗИНА
Просрочка Патруль-Нижний Новгород
137 тыс. просмотров 2 года назад


17:39
Текущее видео
ПРОНИКАЮ НА РАБОТУ В ТЕЛЕМАГАЗИН - Анкеты и Собеседование в ЛЕОМАКС
EVG
274 тыс. просмотров 5 месяцев назад


17:26
Текущее видео
💻ЧТО Я МОГУ СДЕЛАТЬ ЗНАЯ ТВОЙ IP АДРЕС
Scammers
1,7 млн просмотров 3 года назад


23:53
Текущее видео
PS3 и Xbox360 ещё могут вас удивить
Restart
433 тыс. просмотров 2 года назад


15:48
Текущее видео
ГАЗИРОВАННЫЙ ПЕРЕДОЗ
sndk
5,5 млн просмотров 2 года назад


14:15
Текущее видео
ИГРЫ ПОГУБИВШИЕ СЕРИЮ
Restart
172 тыс. просмотров 4 года назад


34:23
Текущее видео
Прожарка валуйского шушпана Саши валсервиса. Часть 2
NOTEBOOKER
105 тыс. просмотров 2 месяца назад


33:40
Текущее видео
Кампания людей #8 - Warcraft II: Приливы Тьмы [Tides of Darkness] #warcraft #TidesofDarkness
Tiger_Skif
24 просмотра 9 часов назад
Новинка


53:01
Текущее видео
НОЧЬ в ЗАБРОШЕННОМ ГОРОДЕ с ПРИВИДЕНИЯМИ | GhostBuster
Дима Масленников
11 млн просмотров 3 года назад


58:30
Текущее видео
История краха Siemens
stupidmadworld
967 тыс. просмотров 9 месяцев назад


28:53
Текущее видео
Retroarch. Шейдеры. Эффекты старого телевизора и не только.
Maelstrom
5,7 тыс. просмотров 2 недели назад


14:21
Текущее видео
ЛЕЧЕБНЫЙ ПЕРЕДОЗ | Странная реклама лекарств на телевидении | Сыендук
sndk
8,7 млн просмотров 5 лет назад


21:16
Текущее видео
Steam Controller навсегда изменил ПК гейминг
Restart
233 тыс. просмотров 2 года назад


30:38
Текущее видео
✅Купил МИСТЕРИ БОКС с iPhone, но они ПРИСЛАЛИ ЭТО!
EVG
657 тыс. просмотров 1 год назад


17:33
Текущее видео
НОВЫЙ СТРАШНЫЙ ВИРУС - MrsMajor3.0.exe VS CORONAVIRUS.EXE | VIRUS BATTLE и судья ArtMoney
overbafer1
1,1 млн просмотров 4 года назад


22:21
Текущее видео
ФЕНОМЕНАЛЬНОЕ ВЫЖИВАНИЕ НА AM2+ В 2024 ГОДУ
Maddy MURK
154 тыс. просмотров 4 недели назад


18:59
Текущее видео
ЧТО Я МОГУ СДЕЛАТЬ ЗНАЯ НОМЕР ТВОЕЙ КАРТЫ
Scammers
1,4 млн просмотров 3 года назад


17:31
Текущее видео
ПЛОХИЕ ИГРЫ В КОТОРЫЕ СТОИТ ПОИГРАТЬ
Restart
159 тыс. просмотров 4 года назад


23:37
Текущее видео
✅СМАРТФОН ОТ СПЕЦСЛУЖБ ИЗ ТЕЛЕМАГАЗИНА / Ожидание и Реальность
EVG
1,4 млн просмотров 2 года назад


10:35
Текущее видео
ПОХОРОНИТЕ МЕНЯ ЗА ПЛИНТУСОМ АНТИ-ВЕРСИЯ (ПЕРЕОЗВУЧКА) #2
АНТИ-ВЕРСИЯ
520 тыс. просмотров 4 года назад


13:25
Текущее видео
Вирусология - 1 час БЕЗ АНТИВИРУСА на Windows 10 | Windows 10 Destruction
overbafer1
683 тыс. просмотров 2 года назад


1:23:11
Текущее видео
СтопХам-Лучшее #5 в FullHD
СтопХам Мск
163 тыс. просмотров 2 месяца назад


14:36
Текущее видео
Nintendo Wii и фитнесс игры
Restart
95 тыс. просмотров 3 года назад


9:16
Текущее видео
Лучшие связки CPU + GPU. Примеры оптимальных сборок ПК 2024.
stupidmadworld
171 тыс. просмотров 4 месяца назад


22:20
Текущее видео
✅НЕ ЗАБИРАЮ ПОСЫЛКУ С ПОЧТЫ, КИДАЛА В ЯРОСТИ
EVG
2,1 млн просмотров 2 года назад



BY

Пропустить
Введите запрос





Фото профиля



6:44 / 13:41 (11:49)
Пропустить до Важное?


ПОЛУЧАЮ IPhone за 1 РУБЛЬ!? ЧТО ЭТО НА САМОМ ДЕЛЕ? ПРОВЕРКА РЕКЛАМЫ

EVG
862 тыс. подписчиков

Стать спонсором

Вы подписаны
Скачать
720


 
1
2
3
4
5
6
7
8
9
0
1
2
3
4
5
6
7
8
9
0
1
2
3
4
5
6
7
8
9
 
 
,
 
 
1
2
3
4
5
6
7
8
9
0
1
2
3
4
5
6
7
8
9
0
1
2
3
4
5
6
7
8
9
 
 
 тыс.
 


Поделиться

Скачать

Спасибо

 
1
2
3
4
5
6
7
8
9
0
1
2
3
4
5
6
7
8
9
0
1
2
3
4
5
6
7
8
9
 
 
1
2
3
4
5
6
7
8
9
0
1
2
3
4
5
6
7
8
9
0
1
2
3
4
5
6
7
8
9
 
 
 
 
 
1
2
3
4
5
6
7
8
9
0
1
2
3
4
5
6
7
8
9
0
1
2
3
4
5
6
7
8
9
 
 
1
2
3
4
5
6
7
8
9
0
1
2
3
4
5
6
7
8
9
0
1
2
3
4
5
6
7
8
9
 
 
1
2
3
4
5
6
7
8
9
0
1
2
3
4
5
6
7
8
9
0
1
2
3
4
5
6
7
8
9
 
 просмотра  
 
1
2
3
4
5
6
7
8
9
0
1
2
3
4
5
6
7
8
9
0
1
2
3
4
5
6
7
8
9
 
 часа назад  
Научись создавать игры: https://go.skillfactory.ru/evg45
Скидка -45% по промокоду «EVG45»
+курс английского в подарок …
182 комментария
NAAIN
Введите комментарий

Закреплено пользователем EVG
@EVGpro
4 часа назад
Ну что, норм наш любимый ютубчик работает? Если что, некоторые способы по решению есть у меня в ТГ https://t.me/evgprotiv

23


Ответить


7 ответов

@lakslk
4 часа назад (изменено)
Наконец-то походу то самое разоблачение тупорылых тг каналов по типу: а вы знаете что можно получить ипхон за 1 рубль. На самом деле продавцы специально занижают цены ляляля чтобы они были в топе.... 

Они настолько задолбали уже

62



Ответить


@Skames
4 часа назад
0:52 коммент убил, на трассе была)
Наверное там за рубль и получила айфон)

16


Ответить


@Pavkill
4 часа назад (изменено)
Evg а помнишь вы с евреем ходили по вокзалам или искали всяких закладчикав, было очень интересно смотреть контент годов 20-21 было бы классно если бы вы это повторили.

28


Ответить


3 ответа

@xicckalle2456
4 часа назад
Обожаю видео, в которых ты проверяешь рекламу

8



Ответить


@user-pv7zy8kb7c
4 часа назад
Наконец-то походу то самое разоблачение тупорылых тг каналов по типу: а вы знаете что можно получить ипхон за 1 рубль. На самом деле продавцы специально занижают цены ляляля чтобы они были в топе....

7


Ответить


@ender489Xk0a
4 часа назад (изменено)
Бесплатный айфон только в шедеврорекламе

8


Ответить


@ezert22
4 часа назад
Лайк и ты найдешь у себя под подушкой новенький айфон 16 S про Макс 1280gb

97


Ответить


9 ответов

@arti4606
4 часа назад
Если перестанешь говорить, что надо подписаться, то буду смотреть тебя с рекламой 

2


Ответить


@Eiden2S
2 часа назад
если ты не можешь себе позволить айфон - то и нафуй он тебе нужен???
что бл за культ на айфоны? это не квартира или машина без которых не обойтись

4


Ответить


@user-yp5kb6gj4g
3 часа назад
там с этими подписками прикол в том что первый платеж 1 рубль а следующие будут 1000 рублей каждый день=))

3


Ответить


@Ramenoxicous
3 часа назад
Похоже на рубрику канала недохакеры lite, а видос как обычно интересный

3


Ответить


@Dencikos
2 часа назад
СПЕЦЫЫЫЫЫ!!! Слышали? Спецыыыы! Которые на варгейминг работали))) которые вам танки делают) аххахахахах если в варгейминг спецы,то тут все тупо хакеры сидят)

4


Ответить


@Notbitdota
2 часа назад (изменено)
История у меня с gamesport есть. Не связана с айфоном а с «абузом - заработком». Вообщем я сделал как на видоса отправил 1р и дальше ждал. После чего мне сняло 200р тип продление подписки. Но я просто в тех. поддержку тинька написал и мне блокнули карту и скинули обратно 200р. Там ещё кешбек был поэтому ограбил казик на 1рубль

3


Ответить


@inanemate
3 часа назад
Спасибо, что открываешь людям глаза.

1


Ответить


@closinGG
4 часа назад
Лайк хоть поставь. Чтобы ютуб работал

3


Ответить


@Maygli333
3 часа назад
Не наипеш не проживеш как говориться 



Ответить


@Сантик
4 часа назад
Ура, как раз хавать и у EVG новое видео:)

2


Ответить


EVG
·

2 ответа

@Denisko123
37 минут назад
Когда он сказал, что никто это не расследовал, я попытался вспомнить, у кого я пару недель назад уже видел такой ролик про айфон за рупь за раскрутку телеграмм каналов .



Ответить


@Ajj1555
3 часа назад
Проверь, пожалуйста, самсунги эски на вб)



Ответить


@Denisko123
46 минут назад
Я бы не верил этой ро-же - 0:25

1


Ответить


@FractaIL
1 час назад (изменено)
Тамаев вышел на новый уровень скама - спонсорские ссылки



Ответить


@CosmoScienceHistoryProject
3 часа назад
Евг, попробуй проверить китайский Temu



Ответить


@GeorgeStyleAlfaX
2 часа назад
Ага, особенно написано servis. Даже не нрамотно написано.

1


Ответить


@user-pc3kd2ki8j
3 часа назад
И в очередной раз спасибо за такие разборы



Ответить


@user-ts2ub3df6t
4 часа назад
ролик на глазах родился

1


Ответить


@DotIdiot
4 часа назад
Только начал смотреть а уже понял что разоблачение будет интересным

3


Ответить


@user-me26dyif
4 часа назад
Тапаем, тапаем 



Ответить


@QzeryX
2 часа назад
видео грузило 4 минуты чтобы посмотреть рекламу класс спс



Ответить


@user-fk1bi1wd3q
57 минут назад
после "кАстанай" можно дальше уже не проверять

1


Ответить


@MrSvin
53 минуты назад
Тебе отправят те самые огромные кнопочные телефоны где даже java нету



Ответить


@Lipchanin1900
3 часа назад
Ты хотел сказать ,не весь этот путь,а этот квест до конца!

2


Ответить


1 ответ

@Strange2626
2 часа назад
Здравствуйте!  EVG хотел поблагодарить вас за такой топовый контент. Смотрю вас с 2020 года .



Ответить


@user-st1kv8yz7y
3 часа назад
Урааа новое видео



Ответить


@agentfoxy0077
4 часа назад
24 секунды назад 0 просмотров,скатился....

2


Ответить


@Maygli333
3 часа назад
Ахахахах, ппц дич 



Ответить


@User137rztm
3 часа назад
Бесплатный сыр только в мышеловке



Ответить


@golubcheck8378
4 часа назад
Посмотрел, удаляй

11


Ответить


@Stanley.Ipkiss1986
3 часа назад
Еее, в числе первой сотни комментаторов)



Ответить


@user-tz6ok6wr9d
3 часа назад
Заблокируй альбине карту



Ответить


@sony-ni6eh
3 часа назад
Ура новый видос



Ответить


@aircommunity1158
3 часа назад
Что за игра на 1:51 ?



Ответить


@SonicBlast-se4yq
1 час назад
Как говорил мой папинька = НА ШАРУ БЫВАЕТ ТОЛЬКО ШАРОВАЯ МОЛНИЯ



Ответить


@MrMax-youtube
1 час назад (изменено)
Костанай! Мы же не говорим Масква.

1


Ответить


2 ответа

@MrHanma_word_strong
1 час назад
Жека где ержан? Покажи нам ежа!!!!!



Ответить


@Anime-je1bo
3 часа назад
Полоска на кофте желтая лагатип тоже, должна быть белая.



Ответить


@StarCo11
52 минуты назад
Абстрактное но понятно. 
Спасибо и большой Привет  🫡



Ответить


@whiteglory2973
2 часа назад
я что рекламу зашел смотреть?



Ответить


@Guvibi
4 часа назад
Ты топ.всегда тебя смотрю.
Спасибки за ролик



Ответить


@Wi-zl
4 часа назад (изменено)
все мы первые)

1


Ответить


@fipysto
1 час назад
Вроде этот тренд был в вк в 2014



Ответить


@DANT3GameChannel
3 минуты назад
Не понял, я подписался на твой телеграмм где мой обещанный айфон, ты в видео обещал!!!



Ответить


@user-vb8ez3lb6f
2 часа назад
Бородатый, давай горе-сборку ПК



Ответить


@user-xy9lr3lh9k
2 часа назад
Я до конца верил 



Ответить


@Nikrusboy6
3 часа назад
Помню, в 16 году.. какие-то  звёзды разыгрывали iPhone 7 за подписку в инсте, реально было угарно



Ответить


@Herdgang
51 минуту назад
Жека я специально приехал в турцию отдыхать что бы поддержать тебя с моего проссмотра



Ответить


@IvanIvanx-rk6ss
2 часа назад
У меня на этот блудняк не хватило БЫ  нервов ЕВГ КРАСАВЧИК



Ответить


@Therealalex_82
4 часа назад




Ответить


@_nekit_off
1 час назад
Имба

1


Ответить


@DorathWertu
3 часа назад
У меня сегодня день рождения



Ответить


@hazel0001
4 часа назад
Красава



Ответить


@user-ps1dx6yw4s
4 часа назад
Под чем говорили что продают айфон бесплатно !?



Ответить


@elviraeys
2 часа назад
мдааа. почему в бесплатную технику кто-то еще верит



Ответить


@SkilozaYT
4 часа назад




Ответить


@user-qg3hc3uk9e
3 часа назад
Да подписался я



Ответить


@Dmitrii359
2 часа назад
на 3 минуте 22 секунды говорит Еврей ?



Ответить


@ELMEEV
49 минут назад
Снова обманули? Эх



Ответить


@IvanZob24
1 час назад
ура евг молодцом, достали через каждое видео, кто в это верит почему списаные айфоны в идеале стоят 1 рубль а на авито айфон 14 с разбитым экарном 15к ?



Ответить


@MrMax-youtube
1 час назад
60% это те люди которых ты разоблочаешь. Дай проработать брат по братски!



Ответить


@scoombria_
1 час назад
недохакеры лайт раньше всё показал



Ответить


@vladick510
2 часа назад
Наконец-то кто-то снял видео про эту хуйню



Ответить


@yummysausage228
1 час назад
пока люди юзают крутые гайды как исправить ютуб, у меня ничё не получится, т.к у меня линукс блэт



Ответить


@azameyker813
4 часа назад
нормально так меньше, меньше минуты назад



Ответить


@user-ml1wq2go6x
3 часа назад
Бегу за айфоном



Ответить


@NikitaCaptain
4 часа назад
1

2


Ответить


1 ответ

@user-vb8ez3lb6f
2 часа назад
Ещё и весь в татухах! Где сидел? Мыло в душе не ронял?



Ответить


@smalik2626
4 часа назад
Последний



Ответить


@3lowwkolnuk
3 часа назад
Что за обман, зашел было 0секунд публикации зашел уже час прошел, хотел написать <<Первый>> 
Ролик топ



Ответить


@Red-io3io
4 часа назад
0 просмотров 9 лайков



Ответить


@user-ml8tf8tq7m
2 часа назад (изменено)
Замеры никогда не поведут на такую фуйню. Это чисто для бумерков разводняк.



Ответить


@chota228
1 час назад
на озон это легально там за звезды и 1 рубль можно покупать технику но фармить звезды заебешься



Ответить


@NoNameUserXD
3 часа назад (изменено)
По просмотрам сейчас будет хреново т.к у многих ютюб не работает

1


Ответить


3 ответа

@inside7938
2 часа назад
Больше удивляют коменты под такими роликами . Реально сидят детишки , которые свято верят в бесплатные айфоны



Ответить


@Флибустьер
2 часа назад
Кликни,регнись,подпишись и так раз за разом.))))) без лоха и жизнь плоха



Ответить


@user-ob6ic9wh7n
3 часа назад
подписьки рулят.



Ответить


@Dikey2000
2 часа назад
В нашей стране халявы нет.



Ответить


@user-klmbmgq
59 минут назад
Я тоже решался на этом сайте они у меня деньги снимали по 170 250 70 за всякие покупки



Ответить


@makaka_nakakal
4 часа назад
эщкере



Ответить


@MrHeromantt
53 минуты назад
Хрен с тобой.уговорил -подписался))))



Ответить


@Truth1717
4 часа назад
Ы



Ответить


@Monstreki
2 часа назад
Мне всегда бесило а не кто не правервл а евг пришёл и проверил во это понимаю



Ответить


@user-ob7hr4ht4g
1 час назад
За это реально стыдно.



Ответить


@srancha
4 часа назад
Первый

1


Ответить


@user-vt9ku6nj7r
4 часа назад
5й



Ответить


@DrollCats123
1 час назад
Кто из 2024 лайк)

1


Ответить


@CosmoScienceHistoryProject
3 часа назад
Где видео с бомжами?



Ответить


1 ответ

@user-nm7iz9dr5e
4 часа назад
третий



Ответить


@Vovka_9899
4 часа назад
Да, я не могу себе позволить айфон. Но могу купить себе Самсунг за 120 или 200 тысяч рублей. 



Ответить


@forgesten
4 часа назад
ЕЕЕЕ



Ответить


@maxviper916
4 часа назад
Я первый



Ответить


@alexander0m
26 минут назад
Евг и бесконечные подписки на мусорные паблики



Ответить


@residentevil5446
8 минут назад
жек а зачем нам телефон гея? ксяёме лутше намного тыж сам говорил



Ответить


@gearsnek9927
18 минут назад
Старыйбох



Ответить


@user-sr8fu5bs4l
3 часа назад
Накой нужен Айфон когда есть Самсунг?



Ответить


1 ответ

@rrreval8579
4 часа назад
ГОЙДА



Ответить


@r9enji
4 часа назад
Евг, лайкни ком, пожалуйста

1


Ответить


@Kartoshka_681
4 часа назад (изменено)
0 просмотров минуту назад, скатился.....

2


Ответить


@rockbayan2769
3 часа назад
не подпишусь, рекламы много, нет цыгана



Ответить


1 ответ

@Altair8909
4 часа назад
Очкарик, ты безнадежно дискредитировал себя, рекламой явных лохотронов.



Ответить


2 ответа

@user-ik8dd3xs3w
21 минуту назад
Ема я очень хотел чтобы ты это проверил, лайк с ходу



Ответить


@user-olyx
2 часа назад
Прикольно. Это ж для тупых школьников. Только они ведутся.

1


Ответить


@nameNPC
2 часа назад
Да ладно Жека в Казахстане в данный момент???



Ответить


@DEBIL777
4 часа назад
0 просмотров за 24 секунды скатился

1


Ответить


@DEBIL777
4 часа назад
первый

1


Ответить


@inst.obmenuaruss
2 часа назад
Проблема человечьего вида в том что он верит в случайность, думая что буду срать на голову всем, буду жадным и куплю айфон за 1 рубль в придачу 
Это так не работает, если и будет халява то она будет заслуженная вами! А так же вы никогда не узнаете когда именно эта халява упадет вам на голову, а вся эта беготня это развод для лохов ;)

1


Ответить



30:25
Текущее видео
МЬЮИНГ — САМЫЙ ОПАСНЫЙ МЕМ [Топ Сикрет]
Utopia Live
916 тыс. просмотров 1 день назад
Новинка


16:57
Текущее видео
Магнитофон Орель-101-1 Стерео (Разбираем, измеряем, слушаем и смотрим схему)
Алексей Морозов
17 тыс. просмотров 12 дней назад


18:53
Текущее видео
УЛЬТРАНАСИЛИЕ и ЭДЖОВОСТЬ В ИГРАХ на примере Tormentor X Punisher и не только | Игровая рефлексия
Keorph
1,8 тыс. просмотров 1 день назад
Новинка


12:36
Текущее видео
ИГРА КОТОРУЮ ИСКАЛИ 20 ЛЕТ || ИСТОРИЯ BIO FORCE APE
Restart
175 тыс. просмотров 5 лет назад


9:17
Текущее видео
БЕРЕМЕННА В 16. УКРАИНА АНТИ-ВЕРСИЯ (ПЕРЕОЗВУЧКА) #2
АНТИ-ВЕРСИЯ
545 тыс. просмотров 5 лет назад


14:59
Текущее видео
Я УСТРОИЛСЯ НА ТУ САМУЮ РАБОТУ 220 000р в месяц
EVG
752 тыс. просмотров 11 месяцев назад


58:30
Текущее видео
История краха Siemens
stupidmadworld
967 тыс. просмотров 9 месяцев назад


10:37
Текущее видео
СтопХам-"Быдло Баба"
СтопХам Мск
1,8 млн просмотров 5 лет назад


25:25
Текущее видео
КРУТОЙ ЭКСПЕРИМЕНТ В ПЯТЕРОЧКЕ / ЧТО БУДЕТ ЕСЛИ ПОКУПАТЕЛИ БУДУТ РАБОТАТЬ ЗА СОТРУДНИКОВ МАГАЗИНА
Просрочка Патруль-Нижний Новгород
137 тыс. просмотров 2 года назад


22:21
Текущее видео
ФЕНОМЕНАЛЬНОЕ ВЫЖИВАНИЕ НА AM2+ В 2024 ГОДУ
Maddy MURK
154 тыс. просмотров 4 недели назад


25:17
Текущее видео
САМАЯ ВАЖНАЯ ФУНКЦИЯ КОНСОЛИ, КОТОРОЙ НИКТО НЕ ПОЛЬЗУЕТСЯ
Restart
353 тыс. просмотров 4 года назад


28:37
Текущее видео
Как ломали Xbox
Restart
765 тыс. просмотров 1 год назад


20:46
Текущее видео
Жуткая ПОСЫЛКА с ДАРКНЕТ + Гусейн Гасанов
Дима Масленников
13 млн просмотров 5 лет назад


25:40
Текущее видео
ЛУЧШИЙ ТЕЛЕФОН ДЛЯ СКУФА - OSCAL PILOT 2 - ТЕСТ И ОБЗОР
Maddy MURK
38 тыс. просмотров 2 дня назад
Новинка


34:23
Текущее видео
Прожарка валуйского шушпана Саши валсервиса. Часть 2
NOTEBOOKER
105 тыс. просмотров 2 месяца назад


10:58
Текущее видео
ПОХОРОНИТЕ МЕНЯ ЗА ПЛИНТУСОМ АНТИ-ВЕРСИЯ (ПЕРЕОЗВУЧКА) #3
АНТИ-ВЕРСИЯ
343 тыс. просмотров 4 года назад


1:19:52
Текущее видео
История краха BlackBerry
stupidmadworld
1,2 млн просмотров 1 год назад


20:34
Текущее видео
ПОЗОРНАЯ ОТМЕНА WINDY31
Jim Gold
636 тыс. просмотров 4 дня назад
Новинка


38:52
Текущее видео
ВСКРЫЛИ ЗАБРОШЕННУЮ ТАЧКУ …. А ТАМ НЕРЕАЛЬНАЯ НАХОДКА!
Дима Масленников
9,6 млн просмотров 1 год назад


40:17
Текущее видео
НОЧЬ на Острове с РЕАЛЬНЫМИ привидениями? GhostBuster Павелья
Дима Масленников
12 млн просмотров 6 лет назад



BY

Пропустить
Введите запрос





Фото профиля
Главная
Shorts
Подписки
Вы
Мой канал
История
Плейлисты
Ваши видео
Смотреть позже
Понравившиеся
Ваши клипы
Подписки

Computers Cats and More

Don Erondondon

Uncle Knuckles

1337LikeR

[ПШ] — Послышалось!

Access Tonight

AdamThomasMoran
Развернуть
Навигатор
В тренде
Музыка
Видеоигры
Спорт
Другие возможности
YouTube Premium
Творческая студия YouTube
YouTube Music
YouTube Детям
Настройки
Жалобы
Справка
Отправить отзыв
О сервисеПрессеАвторские праваСвязаться с намиАвторамРекламодателямРазработчикам
Условия использованияКонфиденциальностьПравила и безопасностьКак работает YouTubeТестирование новых функций
© 2024 Google LLC

17:16
Текущее видео

ИГРЫ НЕ ПО ПРАВИЛАМ
Restart
225 тыс. просмотров
4 года назад


4:21
Текущее видео

КУХНЯ АНТИ-ВЕРСИЯ (ПЕРЕОЗВУЧКА) #1
АНТИ-ВЕРСИЯ
417 тыс. просмотров
3 года назад


19:49
Текущее видео

Замок СГОРЕЛ из-за МЕНЯ? GhostBuster Аналитика
Дима Масленников  
6,9 млн просмотров
5 лет назад


20:41
Текущее видео

КОРОЧЕ ГОВОРЯ, ЗАКУПКА ТОВАРА НА 22 000 В МАГНИТЕ | УКРАЛИ ТОВАР В РЕАЛЬНОЙ ЖИЗНИ
Просрочка Патруль-Нижний Новгород
5,4 млн просмотров
5 лет назад


40:36
Текущее видео

Оживляем ThinkPad на Pentium 2
Дмитрий Бачило
101 тыс. просмотров
6 лет назад


3:38
Текущее видео

Массовая забастовка сотрудников Wildberries
8 канал
990 тыс. просмотров
1 год назад


13:07
Текущее видео

СтопХамСПб - Некорректное общение
СтопХамСПб
421 тыс. просмотров
2 года назад


8:50
Текущее видео

запустил гаррисмод на движке half-life 1
InformanT
558 тыс. просмотров
1 год назад


1:22
Текущее видео

Sound reconstruction from human brain activity (Park et al., 2023; S1)
KamitaniLab
114 тыс. просмотров
1 год назад


8:19
Текущее видео

I hacked Raspberry Pi firmware for the World Record Overclock!
Jeff Geerling
127 тыс. просмотров
3 дня назад


1:07
Текущее видео

Lukas Eriksson - "triangle in the club.nsf (NES, Triangle Only)" [Oscilloscope View]
TakuikaNinja
68 тыс. просмотров
4 года назад


15:51
Текущее видео

НАШ САМОЗДРАВ ИЗ ЛЕОМАКС - ТРЕШ, АНАЛОГОВ НЕТ!
EVG
161 тыс. просмотров
1 месяц назад



Bro is 0 grams 😭
7,1 млн просмотров


Пластилин в Blender урок #blender #tutroial #memes #animation #clay #vibes
185 тыс. просмотров


Secret Rekordbox DJ Hack nobody is using
157 тыс. просмотров


Лелик и старший Лелик ))
76 тыс. просмотров


I Fixed it, Submarine FPV ready to dive into the ocean | The H Lab #shorts
722 тыс. просмотров


🕷️ эту музыку невозможно забыть
46 тыс. просмотров


The power button turns on after 10 minutes.
951 тыс. просмотров


Why Does LEGO Love Making Fun Of Old People?
1,2 млн просмотров


タイムマシンDJ【ブルーハムハム】
3,7 млн просмотров


1:52
Текущее видео

the only good way to solve chamber 18 in Portal
PortalGaming
2,6 тыс. просмотров
4 дня назад


4:50
Текущее видео

КАК ВЫРАСТИТЬ ******? ЧАСТЬ №4
kussia
2,2 млн просмотров
2 года назад


7:30
Текущее видео

ДА КТО ТАКОЙ ЭТОТ ВАШ ФАНКО ПОП
sndk
4,1 млн просмотров
3 года назад


7:44
Текущее видео

БАТЯ ПОДАРИЛ МАШИНУ! MY SUMMER CAR
Valera Ghosther
3,3 млн просмотров
7 лет назад


29:25
Текущее видео

Урок 27. EEPROM настройки | Часть 1 | Программирование микроконтроллеров AVR
Программирование микроконтроллеров для начинающих!
48 тыс. просмотров
5 лет назад


14:45
Текущее видео

САМЫЕ СТРАННЫЕ ИГРОВЫЕ АКСЕССУАРЫ
Restart
854 тыс. просмотров
5 лет назад



Новый домик (часть 4) 🏠
1,3 млн просмотров


ЭТО ПОЗОР: Трамп про обмен пленными с Россией
223 тыс. просмотров


FAKE TECH Restoration Videos! 🖥️
6 млн просмотров


Where Did He Come From?!
1,6 млн просмотров


Потертости в Blender #blender #tutorial #memes #animation #material
322 тыс. просмотров


Как понизить температуру такой видеокарты? #пк #игры #гейминг #сборкапк #игровойпк #pc #games
33 тыс. просмотров


These were the best days in gaming #gaming #xbox
622 тыс. просмотров


Соскочил с крючка мошенников
255 тыс. просмотров


Tough question
20 тыс. просмотров


46:08
Текущее видео

AMAZING VER.2 - HF FULL BAND Modification for Quansheng UV-K5(99)
OM0ET
174 тыс. просмотров
2 месяца назад


9:17
Текущее видео

Подборка мемов по Half Life №1
Что-то
16 тыс. просмотров
12 дней назад


13:30
Текущее видео

Клиент поймал компьютерного мастера на лжи и наказал его
NOTEBOOKER
334 тыс. просмотров
2 года назад


9:41
Текущее видео

ДЕСАНТНИК СТЁПОЧКИН АНТИ-ВЕРСИЯ (ПЕРЕОЗВУЧКА)
АНТИ-ВЕРСИЯ
1 млн просмотров
3 года назад


0:35
Текущее видео

Sonic 3's Snare Sounds Way Better When Slowed Down
Clownacy
20 тыс. просмотров
2 года назад


19:12
Текущее видео

СтопХам UA (Киев) #31
СтопХам UA
407 тыс. просмотров
4 года назад


9:04
Текущее видео

Как я удалял все файлы из Half-Life 2
ALLAN
409 тыс. просмотров
1 год назад


27:34
Текущее видео

Which Linux distribution and GUI to choose ?
benlinux-en
4,6 тыс. просмотров
3 недели назад


53:01
Текущее видео

НОЧЬ в ЗАБРОШЕННОМ ГОРОДЕ с ПРИВИДЕНИЯМИ | GhostBuster
Дима Масленников  
11 млн просмотров
3 года назад


15:03
Текущее видео

Песни, которые звучат СОВЕРШЕННО ОДИНАКОВО #3. A-Ha, Linkin Park, Green Day, Natan
коваленко трунь
421 тыс. просмотров
2 года назад


23:02
Текущее видео

PS3 vs XBOX360: Как IBM продала Microsoft технологии Sony
Restart
380 тыс. просмотров
3 года назад


16:01
Текущее видео

Забавная Dark Hours
1337LikeR
375 тыс. просмотров
6 дней назад


0:51
Текущее видео

Surasshu - Eek! but it's MEOWSynth
homebrew
186 тыс. просмотров
1 год назад


9:02
Текущее видео

МОЖЕТ ЛИ СВЕЧА ОБОГРЕТЬ ДОМ?
SlivkiShow
4,5 млн просмотров
1 год назад


11:02
Текущее видео

ПРОБЛЕМА С ЗАБИВАКОЙ | Разбор Талисманов FIFA
sndk
6,4 млн просмотров
6 лет назад


13:39
Текущее видео

ХОЖУ НЕДЕЛЮ СО СМАРТФОНОМ НА ЭЛЕКТРОННЫХ ЧЕРНИЛАХ! (E-Ink экраном)
EVG
283 тыс. просмотров
2 месяца назад


32:47
Текущее видео

Психопаты из Телеги Пытают ради лайков
Scammers
3 млн просмотров
2 месяца назад


7:36
Текущее видео

PS5 взломана! Релиз Itemzflow. Бекап менеджер для прошивки 3.хх / 4.03/4.50/4.51. Запуск приложении.
botanIT
41 тыс. просмотров
6 месяцев назад


4:19
Текущее видео

ДАВАЙ ПОЖЕНИМСЯ АНТИ-ВЕРСИЯ (ПЕРЕОЗВУЧКА) #4
АНТИ-ВЕРСИЯ
215 тыс. просмотров
4 года назад


0:25
Текущее видео

Why Lua 🥺
Carrot
199 тыс. просмотров
11 месяцев назад


20:24
Текущее видео

Opposing Force 19:23 speedrun
quadrazid
4 млн просмотров
11 лет назад


0:46
Текущее видео

EUWAVE Sound Driver Waveforms Test (FC/NES) [Oscilloscope View]
Blue Mario
33 тыс. просмотров
1 год назад


Джем
Текущее видео
Джем – КАДЫРОВУ ПОДАРИЛИ СЕГУ (ПОСЛЫШАЛОСЬ)
Тархун_mz, Юрий Хованский, Джуис Ньютон и другие исполнители


Текущее видео

Самая мемная игра будет сыграна
Uncle Knuckles
Зрителей: 24
В ЭФИРЕ



15:40
Текущее видео

БЕСПЛАТНОЕ ЭЛЕКТРИЧЕСТВО!
Доктор Дью
3,2 млн просмотров
3 года назад


10:32
Текущее видео

Я точно снял Призрака! - GhostBuster За Гранью... Часть 3
Дима Масленников  
6,7 млн просмотров
7 лет назад


0:26
Текущее видео

square thing [2A03 + VRC6 + MMC5 + N163 + 2C33 + S5B + AY8930 + SAA1099 + POKEY + TIA + SN7 +...
희민Heemin
20 тыс. просмотров
1 год назад


48:04
Текущее видео

Queen | РОК ЖИВ
Александр Пушной
2,7 млн просмотров
1 год назад


Джем
Текущее видео
Джем – METAL 😜 cover 🤟 на "МАЛЫШАРИКОВ" 🎸
Александр Пушной и другие исполнители


21:31
Текущее видео

Обзор Raspberry Pi 5 — компьютер за 5000 рублей!
Rozetked
903 тыс. просмотров
5 месяцев назад


12:36
Текущее видео

ИГРА КОТОРУЮ ИСКАЛИ 20 ЛЕТ || ИСТОРИЯ BIO FORCE APE
Restart
175 тыс. просмотров
5 лет назад


15:19
Текущее видео

ЗАБЫТОЕ ПРОДОЛЖЕНИЕ "НУ, ПОГОДИ!"
sndk
6,7 млн просмотров
4 года назад


19:25
Текущее видео

Бешеные продавцы выгоняют покупателя из магазина! / ВЫ НАМ ПОДКИНУЛИ ПРОСРОЧКУ! ДЕТСКИЙ МИР 1 СЕРИЯ
Просрочка Патруль-Нижний Новгород
723 тыс. просмотров
2 года назад


14:59
Текущее видео

СтопХамСПб - Обострение обстановки
СтопХамСПб
867 тыс. просмотров
3 года назад


15:51
Текущее видео

ХУДШИЙ МОД на PORTAL 2 ► Portal: Forbidden Testing Tracks
STALKEROS VALVE
57 тыс. просмотров
1 месяц назад


4:05
Текущее видео

Cold Day
Macroform Music
255 тыс. просмотров
7 лет назад


11:07
Текущее видео

Спасаю Девочку ! (っಠ‿ಠ)っ
Valera Ghosther
2,5 млн просмотров
9 месяцев назад


28:35
Текущее видео

Ночь в Церкви | 24 часа на заброшенном кладбище | GhostBuster
Дима Масленников  
4,6 млн просмотров
7 лет назад


15:37
Текущее видео

КУПИЛ iPad Pro 2024 у БАРЫГ С OZON за 16000₽ ЧТО ПРИШЛО?
EVG
265 тыс. просмотров
2 месяца назад


0:31
Текущее видео

@UserSniper - NES Music Slander | Oscilloscope view
High Quality Nintendo OSTs
38 тыс. просмотров
1 год назад


12:55
Текущее видео

ЧЕЛОВЕК-РАМЕН И ДРУГОЙ СТРАННЫЙ ЯПОНСКИЙ ХАВЧИК | Джанк-Фуд Трип | Сыендук
sndk
7,1 млн просмотров
6 лет назад


15:19
Текущее видео

МастерОК про счетчик убийства жесткого диска. Разбор бреда.
NOTEBOOKER
306 тыс. просмотров
4 года назад


12:07
Текущее видео

Почему iPhone по характеристикам хуже но работает лучше
stupidmadworld
10 тыс. просмотров
1 день назад


35:42
Текущее видео

ИГРА ИЗМЕНИВШАЯ ВСЁ
Restart
323 тыс. просмотров
5 лет назад


4:30
Текущее видео

Bad Apple!! but it's on a 3d Printer (music and video)
JackLuckSack
764 тыс. просмотров
10 месяцев назад


1:06:33
Текущее видео

ТОТ САМЫЙ СТРАШНЫЙ ЛЕС В ЯПОНИИ! ПРОВЕЛ ТАМ НОЧЬ | GhostBuster
Дима Масленников  
19 млн просмотров
1 год назад


16:22
Текущее видео

Зачем сценарий «Короля Льва» несколько раз переписывали
sndk
2,7 млн просмотров
2 года назад


1:20
Текущее видео

Garry's Mod Toolgun Showcase
Sparks Skywere
398 тыс. просмотров
2 года назад


Текущее видео

Дальнобойщики 2 💚 111% Дон потерялся
Don Erondondon
Зрителей: 17
В ЭФИРЕ



18:03
Текущее видео

Угарный Lethal Company 7
1337LikeR
494 тыс. просмотров
13 дней назад


0:20
Текущее видео

Pac-Man [Oscilloscope view]
희민Heemin
22 тыс. просмотров
1 год назад


0:30
Текущее видео

Linux users explaining
KoshkoLoL
1,5 млн просмотров
3 года назад


1:05:20
Текущее видео

2000 ГОД | Симс, Counter-Strike, Покемоны, PS2, Nokia 3310 | ПОПКУЛЬТ
sndk
4,3 млн просмотров
2 года назад


45:29
Текущее видео

Главные игры поколения PS4/XBOX ONE
Restart
329 тыс. просмотров
3 года назад


10:09
Текущее видео

ШКОЛЬНИК ПЫТАЛСЯ ВЗЛОМАТЬ МОЙ КОМП.. но обоср@лся
overbafer1
2,4 млн просмотров
5 лет назад


25:21
Текущее видео

Я НЕ ВЕРЮ ГЛАЗАМ! ПРИЗРАК РЕАЛЬНО СНЯТ НА ВИДЕО?! GhostBuster
Дима Масленников  
7,9 млн просмотров
1 год назад


15:54
Текущее видео

СтопХамСПб - Дешёвый популизм
СтопХамСПб
633 тыс. просмотров
5 лет назад


2:17
Текущее видео

ОНА ГОТОВА УБИВАТЬ (ПЕРЕОЗВУЧКА)
sndk
7,7 млн просмотров
8 лет назад


27:39
Текущее видео

ОТ MAX PAYNE ДО CONTROL - ФИННЫ ПОКОРИВШИЕ МИР | ИСТОРИЯ REMEDY ENTERTAINMENT
Restart
193 тыс. просмотров
5 лет назад


21:02
Текущее видео

ПОХОРОНИТЕ МЕНЯ ЗА ПЛИНТУСОМ АНТИ-ВЕРСИЯ (ПЕРЕОЗВУЧКА) #4 ФИНАЛ
АНТИ-ВЕРСИЯ
450 тыс. просмотров
4 года назад


16:56
Текущее видео

ЧТО БЫЛО В СМАРТФОНЕ БИЗНЕС-КЛАССА из ТЕЛЕМАГАЗИНА?
EVG
305 тыс. просмотров
8 месяцев назад


13:59
Текущее видео

АТС Орион-1. На тот день, когда телефонные операторы замолчат. Экстренная безлимитная связь.
Лаборатория MIP-Portal. Техника
43 тыс. просмотров
4 года назад


18:59
Текущее видео

ПИОНЕРЫ-ПОПАДАНЦЫ | Советский исекай в анимации
sndk
2,2 млн просмотров
10 месяцев назад


2:22:28
Текущее видео

Критика THE LAST OF US 2 - Горе от ума
Restart
1,4 млн просмотров
3 года назад


0:44
Текущее видео

Underwater Exploration [Sega Genesis Sound Engine]
reflekshun
16 тыс. просмотров
1 год назад


0:22
Текущее видео

Linux from scratch first boot
Iván Moreno
4,6 тыс. просмотров
3 года назад


15:51
Текущее видео

ХАЛЯВЩИКИ с АВИТО покупают мой ПК
EVG
329 тыс. просмотров
1 год назад


14:41
Текущее видео

МЛАДШАЯ ШКОЛА РУССКОГО РЭПА feat. Моргенштерн
sndk
13 млн просмотров
6 лет назад


35:37
Текущее видео

КАК ВЫБРАТЬСЯ ИЗ БЕЗУМНОЙ ПЕЩЕРЫ, НЕ ЗНАЯ ВЫХОДА?
Дима Масленников  
5,5 млн просмотров
5 лет назад


14:30
Текущее видео

СтопХам - Семейное Обострение. Часть 1
СтопХам
5,4 млн просмотров
6 лет назад


11:12
Текущее видео

6 ПОДЕЛИЙ ОТ ВЕСЕЛЫХ ИЗОБРЕТУНОВ И ОДИН ГРУСТНЫЙ ДАВИД
Доктор Дью
2,9 млн просмотров
3 года назад


19:14
Текущее видео

ЭТО НАШ РОССИЙСКИЙ IPhone! ИМПОРТОЗАМЕЩЕНИЕ ответ Н.А.Т.О.
EVG
422 тыс. просмотров
1 год назад


6:09
Текущее видео

НОВЫЕ ТРИ БОГАТЫРЯ | Сыендук
sndk
14 млн просмотров
6 лет назад


16:03
Текущее видео

Он УНИЧТОЖАЕТ мой Garry's Mod! | Разбор Gmod Weird Models [gmod arg]
RG Studio
528 тыс. просмотров
4 месяца назад


7:59
Текущее видео

СЛЕПАЯ В ТЮРЬМЕ АНТИ-ВЕРСИЯ (ПЕРЕОЗВУЧКА)
АНТИ-ВЕРСИЯ
638 тыс. просмотров
3 года назад


12:26
Текущее видео

ЧТО МОЖНО ИЗОБРЕСТИ ПОД ГРИБАМИ
Доктор Дью
3 млн просмотров
3 года назад


17:39
Текущее видео

ПРОНИКАЮ НА РАБОТУ В ТЕЛЕМАГАЗИН - Анкеты и Собеседование в ЛЕОМАКС
EVG
274 тыс. просмотров
5 месяцев назад


5:16
Текущее видео

GTA 6 — ПЕРВЫЙ ВЗГЛЯД
sndk
16 млн просмотров
7 лет назад


28:16
Текущее видео

СтопХамСПб - Кража телефона / Phone theft (english subtitles)
СтопХамСПб
686 тыс. просмотров
2 года назад


25:39
Текущее видео

ПРОНИКЛИ в ЯДЕРНЫЙ РЕАКТОР + ЗАБРОШЕННЫЙ БУНКЕР - Сталкеры
Дима Масленников  
8,2 млн просмотров
3 года назад


25:17
Текущее видео

САМАЯ ВАЖНАЯ ФУНКЦИЯ КОНСОЛИ, КОТОРОЙ НИКТО НЕ ПОЛЬЗУЕТСЯ
Restart
353 тыс. просмотров
4 года назад


24:27
Текущее видео

✅ПРОНИК в ЛОГОВО СЕКТАНТОВ и ПОПАЛ в ЛОВУШКУ
EVG
479 тыс. просмотров
3 года назад


10:30
Текущее видео

ВИДОС ПРО КОРОБКИ ОТ ХЛОПЬЕВ | sndk
sndk
4,7 млн просмотров
3 года назад


9:36
Текущее видео

БЕРЕМЕННА В 16. РОССИЯ АНТИ-ВЕРСИЯ (ПЕРЕОЗВУЧКА) #9
АНТИ-ВЕРСИЯ
435 тыс. просмотров
3 года назад


6:36
Текущее видео

СИМУЛЯТОР ВЫШИБАЛЫ ДОЛГОВ | Гейммастерс
sndk
10 млн просмотров
5 лет назад


4:56
Текущее видео

ФИКСИКИ СУЩЕСТВУЮТ | Сыендук
sndk
17 млн просмотров
10 лет назад


6:06
Текущее видео

УБОГИЕ GTA-КЛОНЫ | Мобильный Передоз
sndk
16 млн просмотров
8 лет назад


10:29
Текущее видео

САМЫЕ СТРАННЫЕ ВЫМЫШЛЕННЫЕ НАПИТКИ | Сыендук
sndk
11 млн просмотров
6 лет назад


28:17
Текущее видео

НОЧЬ в доме с Паранормальными явлениями - GhostBuster | Охотник за привидениями
Дима Масленников  
7,4 млн просмотров
7 лет назад


10:19
Текущее видео

САМАЯ СТРАННАЯ ВЫМЫШЛЕННАЯ ЕДА | Сыендук
sndk
11 млн просмотров
6 лет назад


9:03
Текущее видео

НА НОЖАХ АНТИ-ВЕРСИЯ (ПЕРЕОЗВУЧКА)
АНТИ-ВЕРСИЯ
352 тыс. просмотров
3 года назад


4:11
Текущее видео

БАРБОСКИНЫ: ФУТБОЛЬНОЕ БЕШЕНСТВО | Сыендук
sndk
29 млн просмотров
8 лет назад


1:44:39
Текущее видео

2006 ГОД | Тачки, Счастливы вместе, Garry's Mod, Борат, Roblox, PS3, Wii | Попкульт
sndk
3,3 млн просмотров
1 год назад


11:33
Текущее видео

ЧТО СТАЛО С M&M's? | Разбор говорящих конфет
sndk
1,7 млн просмотров
7 месяцев назад


5:16
Текущее видео

ЧЕТВЁРТЫЙ БОГАТЫРЬ
sndk
7,9 млн просмотров
4 года назад


43:54
Текущее видео

Ночь в ЗАМКЕ с реальными Привидениями? | Самый Страшный замок Мира GhostBuster
Дима Масленников  
11 млн просмотров
7 лет назад


8:06
Текущее видео

КРИВЫЕ АНАЛОГИ НЕСКВИКА
sndk
7,7 млн просмотров
4 года назад


9:26
Текущее видео

БЕРЕМЕННА В 16 АНТИ-ВЕРСИЯ (ПЕРЕОЗВУЧКА) #10
АНТИ-ВЕРСИЯ
284 тыс. просмотров
1 год назад


1:54:50
Текущее видео

2001 ГОД | Шрек, GTA3, Bratz, Max Payne, Масяня, Клиника | ПОПКУЛЬТ
sndk
5,5 млн просмотров
2 года назад


1:35:53
Текущее видео

2004 ГОД | PSP, San Andreas, Смешарики, Jetix, Half-Life 2 | ПОПКУЛЬТ
sndk
3,7 млн просмотров
1 год назад


1:49:31
Текущее видео

2010 ГОД | Время Приключений, Начало, Шерлок, Heavy Rain, Реутов ТВ | Попкульт
sndk
2,9 млн просмотров
1 год назад


4:36
Текущее видео

СВИНКА ПЕППА И СКАНДАЛЫ | Сыендук
sndk
17 млн просмотров
8 лет назад


37:58
Текущее видео

ИСПЫТАЛ СОННЫЙ ПАРАЛИЧ на СЕБЕ! Страшный ЭКСПЕРИМЕНТ
Дима Масленников  
14 млн просмотров
3 года назад


13:53
Текущее видео

ЖВАЧКА ТВОЕГО ДЕТСТВА | Трогательная история жевательной резинки в России | sndk
sndk
7,1 млн просмотров
4 года назад


53:21
Текущее видео

Самая амбициозная афера Sony! || Playstation VR
Restart
428 тыс. просмотров
3 года назад


13:33
Текущее видео

САМЫЕ СТРЁМНЫЕ МАСКОТЫ ФАСТ-ФУДА | sndk
sndk
11 млн просмотров
6 лет назад


7:12
Текущее видео

УРОКИ ****ЫХ МАНЕР | Карусель Безумия | Сыендук
sndk
27 млн просмотров
8 лет назад


1:34:36
Текущее видео

2003 ГОД | Need for Speed Underground, Пираты, Немо, TMNT, Как достать соседа | ПОПКУЛЬТ
sndk
3,5 млн просмотров
1 год назад


10:35
Текущее видео

ПОТЕРЯННЫЙ МУЛЬТ ПРО КАРЛСОНА
sndk
4,7 млн просмотров
1 год назад


18:29
Текущее видео

✅ПОЛЬЗУЮСЬ НЕДЕЛЮ ТОЛЬКО ТОВАРАМИ ИЗ ТЕЛЕМАГАЗИНА
EVG
920 тыс. просмотров
3 года назад


1:39:49
Текущее видео

2005 ГОД | Мадагаскар, God of War, Guitar Hero, Xbox 360, Офис | ПОПКУЛЬТ
sndk
3 млн просмотров
1 год назад


1:14:36
Текущее видео

Xbox Original - Наследник Dreamcast
Restart
2,5 млн просмотров
2 года назад


1:33:41
Текущее видео

2002 ГОД | Наруто, WarCraft 3, Vice City, Ледниковый Период, Лило и Стич | ПОПКУЛЬТ
sndk
3,3 млн просмотров
2 года назад


1:55:44
Текущее видео

1990 ГОД | Деньги в банках колы, Макдоналдс в СССР, Супер Нинтендо в Японии | Попкульт
sndk
2,1 млн просмотров
3 месяца назад


14:32
Текущее видео

Шрек из книги против Шрека из мультфильма
sndk
2,8 млн просмотров
1 год назад


14:23
Текущее видео

ПОХОРОНЕННЫЕ МУЛЬТЫ ДИСНЕЙ
sndk
3,4 млн просмотров
2 года назад


23:37
Текущее видео

✅СМАРТФОН ОТ СПЕЦСЛУЖБ ИЗ ТЕЛЕМАГАЗИНА / Ожидание и Реальность
EVG
1,4 млн просмотров
2 года назад


12:25
Текущее видео

МАСКОТЫ ИЗ РОССИИ | Разбор рекламных персонажей 2000-х | Сыендук
sndk
7,4 млн просмотров
5 лет назад


26:11
Текущее видео

Безумные консоли из 90ых
Restart
850 тыс. просмотров
3 года назад


13:12
Текущее видео

СМЕРТЕЛЬНЫЙ КОКТЕЙЛЬ ИЗ МАКДАКА | Гримас и забытые персонажи Макдоналдс
sndk
2,7 млн просмотров
1 год назад

9:22
Текущее видео

УПОРОТЫЕ МУЛЬТЫ О БЕЗОПАСНОСТИ | Сыендук
sndk
14 млн просмотров
6 лет назад

10:05
Текущее видео

СПОКОЙНОЙ НОЧИ, М*****! | Карусель Безумия | Сыендук
sndk
18 млн просмотров
7 лет назад

12:33
Текущее видео

Удивительная история семечек
sndk
3 млн просмотров
1 год назад

30:38
Текущее видео

✅Купил МИСТЕРИ БОКС с iPhone, но они ПРИСЛАЛИ ЭТО!
EVG
657 тыс. просмотров
1 год назад

1:26:49
Текущее видео

1991 ГОД | Соник, Чёрный Плащ, Терминатор 2, Рен и Стимпи | Попкульт
sndk
1,1 млн просмотров
1 месяц назад

25:32
Текущее видео

Sony делает эмулятор PS3 || Metroid Prime 4 для Switch 2 || Игроки не справились с DLC к Elden Ring
Restart
125 тыс. просмотров
1 месяц назад

1:25:33
Текущее видео

2000-2009: НЕВОШЕДШЕЕ | Американский психопат, Worms 3D, Тушите свет, Pucca, Sam & Max | Попкульт
sndk
2 млн просмотров
1 год назад

19:57
Текущее видео

Как клоуны стали символом ужасов | Эволюция образа в массовой культуре
sndk
2 млн просмотров
9 месяцев назад

13:32
Текущее видео

Странные советские мульты про семью | Только для взрослых, Большие неприятности, Его жена курица
sndk
1,8 млн просмотров
7 месяцев назад

1:24:06
Текущее видео

2008 ГОД | Железный Человек, Тёмный Рыцарь, Ранетки, Во все тяжкие, Валл-И, Кунг-фу Панда | ПОПКУЛЬТ
sndk
2,9 млн просмотров
1 год назад

27:33
Текущее видео

✅ТИПОК ХОДИТ С МОИМ ТЕЛЕФОНОМ / СЛЕЖУ ЗА НИМ
EVG
704 тыс. просмотров
3 года назад

24:26
Текущее видео

Мультивселенная «Острова сокровищ»
sndk
3,1 млн просмотров
1 год назад

45:32
Текущее видео

ОДИН НА ЗАБРОШЕННОМ КОРАБЛЕ ПРИЗРАКЕ! НОЧЬ в стиле GHOSTBUSTER
Дима Масленников  
8 млн просмотров
2 года назад

4:39
Текущее видео

В КУПАЛЬНИКЕ ПО МОРОЗУ | Мобильный Передоз
sndk
13 млн просмотров
8 лет назад

10:57
Текущее видео

ИСТОРИЯ ДОШИРАКА | Лапшичное Безумие | Сыендук
sndk
7,6 млн просмотров
4 года назад

17:27
Текущее видео

НЕЗНАЙКА — ЭКСТРЕМИСТ? | Разбор Мультфильма "Незнайка на Луне" | Сыендук
sndk
15 млн просмотров
7 лет назад

10:07
Текущее видео

МЧС: СПАСИ И СОХРАНИ | Спасик: Разбор Мультфильма | Сыендук
sndk
13 млн просмотров
6 лет назад

7:23
Текущее видео

МАЙКЛ ДЖЕКСОН ЖИВ? (GTA: ПИРАТСКИЙ ПЕРЕДОЗ #2)
sndk
7,2 млн просмотров
9 лет назад

19:26
Текущее видео

БРЕМЕНСКИЕ МУЗЫКАНТЫ: РАЗБОР ТРИЛОГИИ | Сыендук
sndk
14 млн просмотров
7 лет назад

5:00
Текущее видео

НАРУТО В SAN ANDREAS (GTA: ПИРАТСКИЙ ПЕРЕДОЗ #1)
sndk
12 млн просмотров
9 лет назад
